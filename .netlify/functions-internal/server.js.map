{
  "version": 3,
  "sources": ["../../server.js", "../../node_modules/@remix-run/dev/compiler/shims/react.ts", "server-entry-module:@remix-run/dev/server-build", "../../app/entry.server.jsx", "/Users/ham/hamish/Strength-Tracker/app/root.jsx", "../../app/utils/session.server.ts", "../../app/utils/db.server.ts", "../../app/components/ui/MobileNav.jsx", "../../app/components/ui/DashboardNavbar.jsx", "../../app/components/homepage/Footer.jsx", "/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/exercises/$exerciseId.pr-new.jsx", "../../app/routes/dashboard/prs/new.jsx", "../../app/components/ui/PagesNavbar.jsx", "/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/exercises/$exerciseId.volume.jsx", "/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/exercises/$exerciseId.$pr.jsx", "../../app/routes/dashboard/exercises/$exerciseId.jsx", "../../app/components/PrTable.jsx", "../../app/components/Chart.jsx", "/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/exercises/$exerciseId.jsx", "/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/workouts/$workoutId.jsx", "../../app/components/MyGoals.jsx", "../../app/components/ui/PrNav.jsx", "../../app/components/MyWorkouts.jsx", "../../app/routes/dashboard/workouts/index.jsx", "../../app/routes/dashboard/index.jsx", "../../app/components/MyExercises.jsx", "../../app/components/ui/DashboardContentNavbar.jsx", "../../app/components/error handling/NestedError.jsx", "../../app/components/ui/WorkoutDateNav.jsx", "../../app/components/ui/WorkoutChart.jsx", "../../app/components/IndividualWorkout.jsx", "/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/$userId.profile.jsx", "/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/exercises/index.jsx", "/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/workouts/index.jsx", "/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/exercises/new.jsx", "/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/volume/index.jsx", "/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/workouts/new.jsx", "../../app/components/NewWorkoutForm.jsx", "../../app/routes/dashboard/prs/index.jsx", "/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/goals/index.jsx", "../../app/components/ui/ProgressBar.jsx", "/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/goals/new.jsx", "/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/prs/index.jsx", "/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/prs/new.jsx", "/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/index.jsx", "/Users/ham/hamish/Strength-Tracker/app/routes/auth/register.jsx", "/Users/ham/hamish/Strength-Tracker/app/routes/auth/logout.jsx", "/Users/ham/hamish/Strength-Tracker/app/routes/auth/login.jsx", "/Users/ham/hamish/Strength-Tracker/app/routes/exercises.jsx", "/Users/ham/hamish/Strength-Tracker/app/routes/index.jsx", "../../app/components/homepage/Feature.jsx", "../../app/components/homepage/HeroSection.jsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["import { createRequestHandler } from \"@remix-run/netlify\";\nimport * as build from \"@remix-run/dev/server-build\";\n\n/*\n * Returns a context object with at most 3 keys:\n *  - `netlifyGraphToken`: raw authentication token to use with Netlify Graph\n *  - `clientNetlifyGraphAccessToken`: For use with JWTs generated by\n *    `netlify-graph-auth`.\n *  - `netlifyGraphSignature`: a signature for subscription events. Will be\n *    present if a secret is set.\n */\nfunction getLoadContext(event, context) {\n  let rawAuthorizationString;\n  let netlifyGraphToken;\n\n  if (event.authlifyToken != null) {\n    netlifyGraphToken = event.authlifyToken;\n  }\n\n  let authHeader = event.headers[\"authorization\"];\n  let graphSignatureHeader = event.headers[\"x-netlify-graph-signature\"];\n\n  if (authHeader != null && /Bearer /gi.test(authHeader)) {\n    rawAuthorizationString = authHeader.split(\" \")[1];\n  }\n\n  let loadContext = {\n    clientNetlifyGraphAccessToken: rawAuthorizationString,\n    netlifyGraphToken: netlifyGraphToken,\n    netlifyGraphSignature: graphSignatureHeader,\n  };\n\n  // Remove keys with undefined values\n  Object.keys(loadContext).forEach((key) => {\n    if (loadContext[key] == null) {\n      delete loadContext[key];\n    }\n  });\n\n  return loadContext;\n}\n\nexport const handler = createRequestHandler({\n  build,\n  getLoadContext,\n  mode: process.env.NODE_ENV,\n});\n", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "\nimport * as entryServer from \"/Users/ham/hamish/Strength-Tracker/app/entry.server.jsx\";\nimport * as route0 from \"/Users/ham/hamish/Strength-Tracker/app/root.jsx\";\nimport * as route1 from \"/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/exercises/$exerciseId.pr-new.jsx\";\nimport * as route2 from \"/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/exercises/$exerciseId.volume.jsx\";\nimport * as route3 from \"/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/exercises/$exerciseId.$pr.jsx\";\nimport * as route4 from \"/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/exercises/$exerciseId.jsx\";\nimport * as route5 from \"/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/workouts/$workoutId.jsx\";\nimport * as route6 from \"/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/$userId.profile.jsx\";\nimport * as route7 from \"/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/exercises/index.jsx\";\nimport * as route8 from \"/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/workouts/index.jsx\";\nimport * as route9 from \"/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/exercises/new.jsx\";\nimport * as route10 from \"/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/volume/index.jsx\";\nimport * as route11 from \"/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/workouts/new.jsx\";\nimport * as route12 from \"/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/goals/index.jsx\";\nimport * as route13 from \"/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/goals/new.jsx\";\nimport * as route14 from \"/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/prs/index.jsx\";\nimport * as route15 from \"/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/prs/new.jsx\";\nimport * as route16 from \"/Users/ham/hamish/Strength-Tracker/app/routes/dashboard/index.jsx\";\nimport * as route17 from \"/Users/ham/hamish/Strength-Tracker/app/routes/auth/register.jsx\";\nimport * as route18 from \"/Users/ham/hamish/Strength-Tracker/app/routes/auth/logout.jsx\";\nimport * as route19 from \"/Users/ham/hamish/Strength-Tracker/app/routes/auth/login.jsx\";\nimport * as route20 from \"/Users/ham/hamish/Strength-Tracker/app/routes/exercises.jsx\";\nimport * as route21 from \"/Users/ham/hamish/Strength-Tracker/app/routes/index.jsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/dashboard/exercises/$exerciseId.pr-new\": {\n      id: \"routes/dashboard/exercises/$exerciseId.pr-new\",\n      parentId: \"root\",\n      path: \"dashboard/exercises/:exerciseId/pr-new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/dashboard/exercises/$exerciseId.volume\": {\n      id: \"routes/dashboard/exercises/$exerciseId.volume\",\n      parentId: \"root\",\n      path: \"dashboard/exercises/:exerciseId/volume\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/dashboard/exercises/$exerciseId.$pr\": {\n      id: \"routes/dashboard/exercises/$exerciseId.$pr\",\n      parentId: \"root\",\n      path: \"dashboard/exercises/:exerciseId/:pr\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/dashboard/exercises/$exerciseId\": {\n      id: \"routes/dashboard/exercises/$exerciseId\",\n      parentId: \"root\",\n      path: \"dashboard/exercises/:exerciseId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/dashboard/workouts/$workoutId\": {\n      id: \"routes/dashboard/workouts/$workoutId\",\n      parentId: \"root\",\n      path: \"dashboard/workouts/:workoutId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/dashboard/$userId.profile\": {\n      id: \"routes/dashboard/$userId.profile\",\n      parentId: \"root\",\n      path: \"dashboard/:userId/profile\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/dashboard/exercises/index\": {\n      id: \"routes/dashboard/exercises/index\",\n      parentId: \"root\",\n      path: \"dashboard/exercises\",\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/dashboard/workouts/index\": {\n      id: \"routes/dashboard/workouts/index\",\n      parentId: \"root\",\n      path: \"dashboard/workouts\",\n      index: true,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/dashboard/exercises/new\": {\n      id: \"routes/dashboard/exercises/new\",\n      parentId: \"root\",\n      path: \"dashboard/exercises/new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/dashboard/volume/index\": {\n      id: \"routes/dashboard/volume/index\",\n      parentId: \"root\",\n      path: \"dashboard/volume\",\n      index: true,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/dashboard/workouts/new\": {\n      id: \"routes/dashboard/workouts/new\",\n      parentId: \"root\",\n      path: \"dashboard/workouts/new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/dashboard/goals/index\": {\n      id: \"routes/dashboard/goals/index\",\n      parentId: \"root\",\n      path: \"dashboard/goals\",\n      index: true,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/dashboard/goals/new\": {\n      id: \"routes/dashboard/goals/new\",\n      parentId: \"root\",\n      path: \"dashboard/goals/new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/dashboard/prs/index\": {\n      id: \"routes/dashboard/prs/index\",\n      parentId: \"root\",\n      path: \"dashboard/prs\",\n      index: true,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/dashboard/prs/new\": {\n      id: \"routes/dashboard/prs/new\",\n      parentId: \"root\",\n      path: \"dashboard/prs/new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/dashboard/index\": {\n      id: \"routes/dashboard/index\",\n      parentId: \"root\",\n      path: \"dashboard\",\n      index: true,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/auth/register\": {\n      id: \"routes/auth/register\",\n      parentId: \"root\",\n      path: \"auth/register\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/auth/logout\": {\n      id: \"routes/auth/logout\",\n      parentId: \"root\",\n      path: \"auth/logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/auth/login\": {\n      id: \"routes/auth/login\",\n      parentId: \"root\",\n      path: \"auth/login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/exercises\": {\n      id: \"routes/exercises\",\n      parentId: \"root\",\n      path: \"exercises\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route21\n    }\n  };", "import { renderToString } from \"react-dom/server\";\nimport { RemixServer } from \"@remix-run/react\";\n\nexport default function handleRequest(\n  request,\n  responseStatusCode,\n  responseHeaders,\n  remixContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import {\n  Link,\n  Links,\n  LiveReload,\n  Outlet,\n  Scripts,\n  useLoaderData,\n} from '@remix-run/react'\nimport { getUser } from './utils/session.server'\nimport cssSheet from './styles/app.css'\nimport HomepageFooter from './components/ui/HomepageFooter'\nimport mobileCssSheet from '~/styles/mobile.css'\nimport MobileNav from './components/ui/MobileNav'\nimport { useState } from 'react'\n\nimport styles from './tailwind.css'\nimport DashboardNavbar from './components/ui/DashboardNavbar'\nimport { Footer } from './components/homepage/Footer'\n\nexport const links = () => {\n  return [\n    { rel: 'stylesheet', href: styles },\n    {\n      rel: 'stylesheet',\n      href: cssSheet,\n    },\n    {\n      rel: 'stylesheet',\n      href: mobileCssSheet,\n    },\n  ]\n}\n\nexport const loader = async ({ request }) => {\n  const user = await getUser(request)\n  const data = {\n    user,\n  }\n  return data\n}\n\nexport default function App(params) {\n  return (\n    <Document>\n      <Layout>\n        <Outlet />\n      </Layout>\n    </Document>\n  )\n}\n\nexport function ErrorBoundary(error) {\n  console.error(error)\n  return (\n    <html lang=\"en\">\n      <head>\n        <title>Oh no!</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <Links />\n      </head>\n      <body>\n        <Scripts />\n        <script src=\"https://unpkg.com/flowbite@1.4.7/dist/datepicker.js\"></script>\n      </body>\n    </html>\n  )\n}\n\nfunction Document({ children, title }) {\n  return (\n    <html lang=\"en\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      <head>\n        <Links />\n        <title>Strength Tracker</title>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://use.typekit.net/jwz3lmi.css\"\n        ></link>\n      </head>\n      <body>\n        {children}\n        {process.env.NODE_ENV === 'development' ? <LiveReload /> : null}\n        <Scripts />\n        <script\n          src=\"https://widget.cloudinary.com/v2.0/global/all.js\"\n          type=\"text/javascript\"\n        ></script>\n      </body>\n    </html>\n  )\n}\n\nfunction Layout({ children }) {\n  let [count, setPage] = useState(0)\n\n  const { user } = useLoaderData()\n  return (\n    <>\n      {user ? (\n        <div className={'app flex justifiy-between'}>\n          <div className={'app-body'}>\n            <DashboardNavbar user={user} />\n            <div\n              className={\n                'app-body-main-content flex justifiy-between flex-col h-full'\n              }\n            >\n              {count === 1 ? (\n                <MobileNav user={user} onClick={() => setPage((count = 0))}>\n                  <div\n                    className=\"mobile-nav__button--close\"\n                    onClick={() => setPage((count = 0))}\n                  ></div>\n                </MobileNav>\n              ) : null}\n              <nav className=\"mobile-nav mb-3\">\n                <Link to={'/dashboard'}>\n                  <h1 className={'logo-title mobile-title mb-1'}>\n                    <span className=\"text-xl font-bold\">Strength</span>\n                    <span className=\"text-xl font-bold\">Tracker</span>\n                  </h1>\n                </Link>\n                <div\n                  className=\"mobile-nav__button\"\n                  onClick={() => setPage((count = 1))}\n                ></div>\n              </nav>\n              {children}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <container className=\"homepage-container w-5/6\">\n          <nav className=\"homepage__navbar w-full\">\n            <Link className=\"home-logo logo--animation\" to=\"/\">\n              Strength Tracker\n            </Link>\n            <div className=\"navbar-buttons__div\">\n              <Link className=\"mr-3 underline underline-offset-2\" to=\"/auth/register\">\n                Register\n              </Link>\n              <Link className=\"underline underline-offset-2\" to=\"/auth/login\">\n                Login\n              </Link>\n            </div>\n          </nav>\n          <div className=\"w-full\">{children}</div>\n          {/* <HomepageFooter /> */}\n          <Footer />\n        </container>\n      )}\n    </>\n  )\n}\n", "import bcrypt from \"bcrypt\";\nimport { db } from \"./db.server\";\nimport { createCookieSessionStorage, redirect } from \"@remix-run/node\";\n\n\nexport async function login({ email, password }) {\n  const user = await db.user.findUnique({\n    where: {\n      email,\n    },\n  });\n\n  if (!user) {\n    return null;\n  }\n\n  const isCorrectPassword = await bcrypt.compare(password, user.passwordHash);\n\n  if (!isCorrectPassword) return null;\n\n  return user;\n}\n\nexport async function changePassword({ email, oldPassword, newPassword }) {\n  const user = await db.user.findUnique({\n    where: {\n      email,\n    },\n  });\n\n  if (!user) {\n    return null;\n  }\n\n  const isCorrectPassword = await bcrypt.compare(oldPassword, user.passwordHash);\n  const passwordHash = await bcrypt.hash(newPassword, 10);\n\n  if (!isCorrectPassword) {\n    console.log('wrong password')\n    return null  \n  }\n\n  await db.user.update({\n    where: { id: user.id },\n    data: {\n      passwordHash: passwordHash,\n    },\n  });\n  console.log('password true`')\n  return true;\n}\n\nexport async function register({ email, password, name }) {\n  const passwordHash = await bcrypt.hash(password, 10);\n  return db.user.create({\n    data: {\n      name,\n      email,\n      passwordHash,\n    },\n  });\n}\n\nconst sessionSecret = process.env.SESSION_SECRET;\nif (!sessionSecret) {\n  throw new Error(\"No session secret\");\n}\n\nconst storage = createCookieSessionStorage({\n  cookie: {\n    name: \"remixblog_session\",\n    secure: process.env.NODE_ENV === \"production\",\n    secrets: [sessionSecret],\n    sameSite: \"lax\",\n    path: \"/\",\n    maxAge: 60 * 60 * 24 * 60,\n    httpOnly: true,\n  },\n});\n\nexport async function createUserSession(userId: string, redirectTo: string) {\n  console.log(\"redirect\");\n  const session = await storage.getSession();\n  session.set(\"userId\", userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await storage.commitSession(session),\n    },\n  });\n}\n\nexport function getUserSession(request: Request) {\n  return storage.getSession(request.headers.get(\"Cookie\"));\n}\n\nexport async function getUser(request: Request) {\n  const session = await getUserSession(request);\n  const userId = session.get(\"userId\");\n  if (!userId || typeof userId !== \"string\") {\n    return null;\n  }\n\n  try {\n    const user = await db.user.findUnique({\n      where: {\n        id: userId,\n      },\n    });\n    return user;\n  } catch (error) {\n    return null;\n  }\n}\n\nexport async function logout(request: Request) {\n  const session = await storage.getSession(request.headers.get(\"Cookie\"));\n\n  return redirect(\"/auth/logout\", {\n    headers: {\n      \"Set-Cookie\": await storage.destroySession(session),\n    },\n  });\n}\n", "import { PrismaClient  } from \"@prisma/client\";\n\nlet db: PrismaClient\n\ndeclare global {\n    var __db: PrismaClient | undefined\n}\n\nif(process.env.NODE_ENV === 'production'){\n    db = new PrismaClient()\n    db.$connect()\n} else {\n    if (!global.__db) {\n        global.__db = new PrismaClient()\n        global.__db.$connect()\n    }\n    db = global.__db\n}\n\nexport { db }", "import { useState } from \"react\"\nimport { Link } from \"@remix-run/react\"\n\nexport default function MobileNav({ children, user, props }) {\n  return (\n    <div className='mobile-nav-menu__wrapper '>\n      {children}\n      <nav className={\"navigation mobile-navigation\"}>\n        <Link to='/dashboard' className=\"\" onClick={() => props.onClick()}>\n          <i className={\"ph-browsers\"}></i>\n          <span>Dashboard</span>\n        </Link>\n        <Link to='/dashboard/prs' onClick={() => props.onClick()}>\n          <i className={\"ph-check-square\"}></i>\n          <span>Personal Records</span>\n        </Link>\n        <Link to='dashboard/workouts' onClick={() => props.onClick()}>\n          <i className={\"ph-swap\"}></i>\n          <span>Workouts</span>\n        </Link>\n        <Link to='/dashboard/exercises' onClick={() => props.onClick()}>\n          <i className={\"ph-file-text\"}></i>\n          <span>Exercises</span>\n        </Link>\n        <Link to='/dashboard/goals' onClick={() => props.onClick()}>\n          <i className={\"ph-file-text\"}></i>\n          <span>Goals</span>\n        </Link>\n        <Link to={`/dashboard/${user.id}/profile`} onClick={() => props.onClick()}>\n          <i className={\"ph-globe\"}></i>\n          <span>Account Settings</span>\n        </Link>\n        <footer className={\"footer\"}>\n            <form action='/auth/logout' method='POST'>\n              <button className='btn' type='submit' onClick={() => props.onClick()}>\n                Logout {user.name}\n              </button>\n            </form>\n        </footer>\n      </nav>\n    </div>\n  )\n}\n", "import { Link } from '@remix-run/react'\n\nexport default function DashboardNavbar(user) {\n  return (\n    <div className={'app-body-navigation flex justifiy-between'}>\n      <div className={'app-header-logo mb-4'}>\n        <div className={'logo'}>\n          <h1 className={'logo-title'}>\n            <span className='font-extrabold text-2xl'>Strength</span>\n            <span className='font-extrabold text-2xl'>Tracker</span>\n          </h1>\n        </div>\n      </div>\n      <nav className={'navigation'}>\n        <Link to=\"/dashboard\">\n          <i className={'ph-browsers'}></i>\n          <span>Dashboard</span>\n        </Link>\n        <Link to=\"/dashboard/prs\">\n          <i className={'ph-check-square'}></i>\n          <span>Personal Records</span>\n        </Link>\n        <Link to=\"dashboard/workouts\">\n          <i className={'ph-swap'}></i>\n          <span>Workouts</span>\n        </Link>\n        <Link to=\"/dashboard/exercises\">\n          <i className={'ph-file-text'}></i>\n          <span>Exercises</span>\n        </Link>\n        <Link to=\"/dashboard/goals\">\n          <i className={'ph-file-text'}></i>\n          <span>Goals</span>\n        </Link>\n        <Link to={`/dashboard/${user.user.id}/profile`}>\n          <i className={'ph-globe'}></i>\n          <span>Account Settings</span>\n        </Link>\n      </nav>\n      <div className={'footer'}>\n          <form action=\"/auth/logout\" method=\"POST\">\n            <button className=\"btn underline\" type=\"submit\">\n              Logout {user.user.name}\n            </button>\n          </form>\n      </div>\n    </div>\n  )\n}\n", "import { Link } from '@remix-run/react'\nimport footerImg from '../../../public/images/footer.jpeg'\n\nexport const Footer = () => {\n  return (\n    <div>\n      <div className=\"flex flex-col px-4 py-16 mx-auto sm:max-w-xl md:max-w-full lg:max-w-screen-xl md:px-24 lg:px-8 lg:py-20 lg:flex-row\">\n        <div className=\"mb-5 lg:w-1/3 lg:mb-0 lg:mr-20\">\n          <h2 className=\"relative mb-4 font-sans text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl sm:leading-none\">\n            Strength Tracker\n          </h2>\n          <p className=\"mb-4 text-gray-900 lg:mb-6\">\n            Track your workouts, exercises, personal records, exercise goals and\n            volume. Strength Tracker is a project designed and developed by\n            \u200EHamish Henare.\n          </p>\n          <Link\n            to=\"auth/register\"\n            aria-label=\"\"\n            className=\"inline-flex items-center font-semibold transition-colors duration-200 text-deep-purple-accent-400 hover:text-deep-purple-800\"\n          >\n            Register\n            <svg\n              className=\"inline-block w-3 ml-2\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 12 12\"\n            >\n              <path d=\"M9.707,5.293l-5-5A1,1,0,0,0,3.293,1.707L7.586,6,3.293,10.293a1,1,0,1,0,1.414,1.414l5-5A1,1,0,0,0,9.707,5.293Z\" />\n            </svg>\n          </Link>\n        </div>\n        <div className=\"flex-grow pt-1\">\n          {/* <div className=\"flex items-center mb-3\">\n            <span className=\"font-bold tracking-wide text-gray-900\">\n              Categories\n            </span>\n            <span className=\"ml-1\">\n              <svg\n                className=\"w-5 h-5 mt-px text-deep-purple-accent-400\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 52 52\"\n              >\n                <polygon\n                  strokeWidth=\"4\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  fill=\"none\"\n                  points=\"29 13 14 29 25 29 23 39 38 23 27 23\"\n                />\n              </svg>\n            </span>\n          </div> */}\n          {/* <div className=\"grid grid-cols-2 row-gap-6 sm:grid-cols-4\">\n            <ul className=\"space-y-2\">\n              <li>\n                <a\n                  href=\"/\"\n                  className=\"transition-colors duration-300 hover:text-deep-purple-accent-700\"\n                >\n                  Computers\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"/\"\n                  className=\"transition-colors duration-300 hover:text-deep-purple-accent-700\"\n                >\n                  Health\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"/\"\n                  className=\"transition-colors duration-300 hover:text-deep-purple-accent-700\"\n                >\n                  Reference\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"/\"\n                  className=\"transition-colors duration-300 hover:text-deep-purple-accent-700\"\n                >\n                  World\n                </a>\n              </li>\n            </ul>\n            <ul className=\"space-y-2\">\n              <li>\n                <a\n                  href=\"/\"\n                  className=\"transition-colors duration-300 hover:text-deep-purple-accent-700\"\n                >\n                  eCommerce\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"/\"\n                  className=\"transition-colors duration-300 hover:text-deep-purple-accent-700\"\n                >\n                  Business\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"/\"\n                  className=\"transition-colors duration-300 hover:text-deep-purple-accent-700\"\n                >\n                  Portfolio\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"/\"\n                  className=\"transition-colors duration-300 hover:text-deep-purple-accent-700\"\n                >\n                  Video\n                </a>\n              </li>\n            </ul>\n            <ul className=\"space-y-2\">\n              <li>\n                <a\n                  href=\"/\"\n                  className=\"transition-colors duration-300 hover:text-deep-purple-accent-700\"\n                >\n                  Brochure\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"/\"\n                  className=\"transition-colors duration-300 hover:text-deep-purple-accent-700\"\n                >\n                  Nonprofit\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"/\"\n                  className=\"transition-colors duration-300 hover:text-deep-purple-accent-700\"\n                >\n                  Educational\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"/\"\n                  className=\"transition-colors duration-300 hover:text-deep-purple-accent-700\"\n                >\n                  Sports\n                </a>\n              </li>\n            </ul>\n            <ul className=\"space-y-2\">\n              <li>\n                <a\n                  href=\"/\"\n                  className=\"transition-colors duration-300 hover:text-deep-purple-accent-700\"\n                >\n                  Infopreneur\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"/\"\n                  className=\"transition-colors duration-300 hover:text-deep-purple-accent-700\"\n                >\n                  Health\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"/\"\n                  className=\"transition-colors duration-300 hover:text-deep-purple-accent-700\"\n                >\n                  Web\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"/\"\n                  className=\"transition-colors duration-300 hover:text-deep-purple-accent-700\"\n                >\n                  Personal\n                </a>\n              </li>\n            </ul>\n          </div> */}\n        </div>\n      </div>\n      {/* <div className=\"relative\">\n        <img\n          className=\"w-full sm:h-96\"\n          src={footerImg}\n          alt=\"\"\n        />\n        <div className=\"absolute inset-0 bg-gray-900 bg-opacity-50\" />\n      </div> */}\n    </div>\n  )\n}\n", "import { json, redirect } from '@remix-run/node'\nimport { Form, Link, useActionData, useLoaderData } from '@remix-run/react'\nimport { db } from '~/utils/db.server'\nimport { getUser } from '~/utils/session.server'\nimport { goalCalc } from '../prs/new'\n\nfunction validateWeight(weight) {\n  if (typeof weight !== 'number') {\n    return 'weight should be a number'\n  }\n}\n\nfunction validateReps(reps) {\n  if (typeof reps !== 'number') {\n    return 'reps should be a number'\n  }\n}\n\nfunction badRequest(data) {\n  return json(data, { status: 400 })\n}\n\nexport const loader = async ({ params }) => {\n  const exercise = await db.exercise.findUnique({\n    where: {\n      id: params.exerciseId,\n    },\n  })\n  return exercise\n}\n\nexport const action = async ({ request, params }) => {\n  const form = await request.formData()\n  const weightStr = form.get('weight')\n  const repsStr = form.get('reps')\n  const weight = parseInt(weightStr)\n  const reps = parseInt(repsStr)\n  const exerciseId = params.exerciseId\n  const dateStr = form.get('date')\n  const date = new Date(dateStr).toISOString()\n\n  const user = await getUser(request)\n\n  const fields = { weight, reps }\n\n  const fieldErrors = {\n    weight: validateWeight(weight),\n    reps: validateReps(reps),\n  }\n\n  if (Object.values(fieldErrors).some(Boolean)) {\n    console.log(fieldErrors)\n    return badRequest({ fieldErrors, fields })\n  }\n\n  const pr = await db.pr.create({\n    data: { ...fields, userId: user.id, exerciseId: exerciseId , date: date},\n  })\n\n  const goals = await db.goals.findMany({\n    where: { userId: user.id, exerciseId: exerciseId },\n  })\n  const goalWeight = goals[0].weight\n  const goalReps = goals[0].reps\n  const goalId = goals[0].id\n\n  const results = goalCalc(weight, reps, goalWeight, goalReps)\n\n  if (results[0] === true) {\n    await db.goals.update({\n      where: { id: goalId },\n      data: {\n        achieved: true,\n        achievementDate: date,\n      },\n    })\n  }\n\n  return redirect(`/dashboard/exercises/${exerciseId}`)\n}\n\nfunction NewPr() {\n  const actionData = useActionData()\n  const exercise = useLoaderData()\n\n  return (\n    <>\n      <div className=\"page-header\">\n        <h1>New PR for {exercise.title}</h1>\n        <Link to=\"/dashboard\" className=\"\">\n          Back\n        </Link>\n      </div>\n      <div className=\"\">\n        <Form method=\"POST\">\n        <div>\n          <h5>Date of workout:</h5>\n          <input\n            type='date'\n            id='start'\n            name='date'\n            defaultValue={date}\n            min={userJoinDate}\n            max={date}\n            required\n          ></input>\n        </div>\n          <div className=\"\">\n            <label htmlFor=\"weight\">weight</label>\n            <input type=\"number\" name=\"weight\" id=\"weight\" />\n            <div className=\"\">\n              <p>\n                {actionData?.fieldErrors?.weight &&\n                  actionData?.fieldErrors?.weight}\n              </p>\n            </div>\n          </div>\n          <div className=\"\">\n            <label htmlFor=\"reps\">Exercise reps</label>\n            <input type=\"number\" name=\"reps\" id=\"reps\" />\n            <div className=\"\">\n              <p>\n                {actionData?.fieldErrors?.reps && actionData?.fieldErrors?.reps}\n              </p>\n            </div>\n          </div>\n          <button type=\"submit\" className=\"\">\n            Add PR\n          </button>\n        </Form>\n      </div>\n    </>\n  )\n}\n\nexport default NewPr\n", "import { redirect } from '@remix-run/node'\nimport { Form, useActionData, useLoaderData } from '@remix-run/react'\nimport { getUser } from '~/utils/session.server'\nimport { db } from '~/utils/db.server'\nimport Navbar from '~/components/ui/PagesNavbar'\n\nfunction validateweight(weight) {\n  if (typeof weight !== 'number') {\n    return 'weight should be a number'\n  }\n}\n\nfunction validatereps(reps) {\n  if (typeof reps !== 'number') {\n    return 'reps should be a number'\n  }\n}\n\nfunction badRequest(data) {\n  return json(data, { status: 400 })\n}\n\nexport const loader = async ({ request }) => {\n  const user = await getUser(request)\n  const exercises = await db.exercise.findMany({\n    where: { userId: user.id },\n  })\n\n  return [exercises, user]\n}\n\nfunction oneRmCalc(weight, reps) {\n  if (reps === 1) {\n    return weight\n  } else return Math.floor(weight * reps * 0.0333 + weight, 2.5)\n}\n\nexport function goalCalc(weight, reps, goalweight, goalreps) {\n  const preplinsTable = {\n    100.0: 1,\n    95.5: 2,\n    92.2: 3,\n    89.2: 4,\n    86.3: 5,\n    83.7: 6,\n    81.1: 7,\n    78.6: 8,\n    76.2: 9,\n    73.9: 10,\n    70.7: 11,\n    68.0: 12,\n  }\n  const onerm = oneRmCalc(weight, reps)\n  const entries = Object.entries(preplinsTable)\n  let percentageStr\n  for (let i = 0; i < entries.length; i++) {\n    if (goalreps < entries[i][1]) {\n      percentageStr = entries[i][0]\n    }\n  }\n  let percentage = parseInt(percentageStr) / 100\n  let current = onerm * percentage\n  let goal = oneRmCalc(goalweight, goalreps) * percentage\n  let progress = (current / goal) * 100\n  let remainingPercent = 100 - progress\n  let remainingKg = goal - current\n  if (current >= goal) {\n    return [true, progress]\n  } else {\n    return [false, progress, remainingPercent, remainingKg]\n  }\n}\n\nexport const action = async ({ request, params }) => {\n  const form = await request.formData()\n  const user = await getUser(request)\n  const id = form.get('exercise')\n  const weightStr = form.get('weight')\n  const repsStr = form.get('reps')\n  const weight = parseInt(weightStr)\n  const reps = parseInt(repsStr)\n  const dateStr = form.get('date')\n  const date = new Date(dateStr).toISOString()\n  const goals = await db.goals.findMany({\n    where: { userId: user.id, exerciseId: id },\n  })\n  const goalweight = goals[0].weight\n  const goalreps = goals[0].reps\n  const goalId = goals[0].id\n\n  const fields = { weight, reps }\n\n  const fieldErrors = {\n    weight: validateweight(weight),\n    reps: validatereps(reps),\n  }\n\n  if (Object.values(fieldErrors).some(Boolean)) {\n    console.log(fieldErrors)\n    return badRequest({ fieldErrors, fields })\n  }\n\n  const results = goalCalc(weight, reps, goalweight, goalreps)\n\n  if (results[0] === true) {\n    await db.goals.update({\n      where: { id : goalId },\n      data: {\n       achieved: true,\n       achievementDate: date\n      }\n    });\n  }\n\n  const pr = await db.pr.create({\n    data: { ...fields, userId: user.id, exerciseId: id, date: date },\n  })\n\n  return redirect(`../dashboard/exercises/${id}`)\n}\n\n\nexport const findDate = (user) => {\n\n  let userDate = user.createdAt\n  let split = userDate.split(\"\")\n  let arr = []\n  for (let i = 0; i < 10; i++) {\n    arr.push(split[i])\n  }\n  const userJoinDate = arr.join(\"\")\n  const current = new Date()\n  const day = current.getDate()\n  let date\n  day < 10\n    ? (date = `${current.getFullYear()}-0${\n        current.getMonth() + 1\n      }-0${current.getDate()}`)\n    : (date = `${current.getFullYear()}-0${\n        current.getMonth() + 1\n      }-0${current.getDate()}`)\n\n      const data = [userJoinDate, date]\n      return data\n}\n\nexport default function newPr() {\n  const data = useLoaderData()\n  const exercises = data[0]\n  const user = data[1]\n\n  const actionData = useActionData()\n\n\nconst dateData = findDate(user)\nconst userJoinDate = dateData[0]\nconst date = dateData[1]\n\n  return (\n    <div className=\"\">\n      <Navbar data={['New PR', 'prs', 'Back']} />\n      <div className=\"\">\n        <Form method=\"POST\" className='mt-4'>\n          <div className=\"relative z-0 w-full mb-6 group\">\n            <select\n              id=\"exercise\"\n              name=\"exercise\"\n              // defaultValue={'Pick an exercise'}\n              placeholder={'Pick an exercise'}\n              className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n            >\n              <option disabled selected>\n                Pick an exercise\n              </option>\n              {exercises.map((exercise) => (\n              <option key={exercise.id} value={exercise.id}>\n                {exercise.title}\n              </option>\n            ))}\n            </select>\n          </div>\n          <div className=\"relative z-0 w-full mb-6 group\">\n            <input\n              type=\"number\"\n              name=\"weight\"\n              id=\"weight\"\n              className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n              placeholder=\" \"\n              required\n            />\n            <label\n              for=\"weight\"\n              className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-white duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\n            >\n              Weight\n            </label>\n          </div>\n          <div className=\"relative z-0 w-full mb-10 group\">\n            <input\n              type=\"number\"\n              name=\"reps\"\n              id=\"reps\"\n              className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n              placeholder=\" \"\n              required\n            />\n            <label\n              for=\"reps\"\n              className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-white duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\n            >\n              Reps\n            </label>\n          </div>\n          <div className=\"relative z-0 w-full mb-6 mt-2 group\">\n            <input\n              type=\"date\"\n              name=\"date\"\n              id=\"date\"\n              className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n              placeholder=\" \"\n              required\n              defaultValue={date}\n              min={userJoinDate}\n              max={date}\n            />\n            <label\n              for=\"date\"\n              className=\"peer-focus:font-medium absolute mb-2 text-gray-500 text-lg dark:text-white duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6 text-left\"\n            >\n              Date\n            </label>\n          </div>\n          <button\n            type=\"submit\"\n            className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-lg w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n          >\n            Submit\n          </button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n", "import { Link } from \"@remix-run/react\";\n\nexport default function Navbar(data) {\n  return (\n      <div className={'dashboard-section-navbar flex justify-between'}>\n        <h2 className='text-2xl font-bold'>{data.data[0]}</h2>\n          <Link to={`/dashboard/${data.data[1]}`} className=''>\n            <span>{data.data[2]}</span>\n          </Link>\n      </div>\n  )\n}\n", "import { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useLoaderData } from \"@remix-run/react\";\nimport { db } from '~/utils/db.server'\nimport { getUser } from '~/utils/session.server'\n\nfunction validateWeight(weight) {\n  if (typeof weight !== 'number') {\n    return 'weight should be atleast 2 characters long'\n  }\n}\n\nfunction validateReps(reps) {\n  if (typeof reps !== 'number') {\n    return 'reps should be atleast 2 characters long'\n  }\n}\n\nfunction badRequest(data) {\n  return json(data, { status: 400 })\n}\n\nexport const loader = async ({ params }) => {\n  const exercise = await db.exercise.findUnique({\n    where: {\n      id: params.exerciseId,\n    },\n  })\n  return exercise\n}\n\nexport const action = async ({ request, params }) => {\n  const form = await request.formData()\n  const weightStr = form.get('weight')\n  const repsStr = form.get('reps')\n  const setsStr = form.get('sets')\n  const weight = parseInt(weightStr)\n  const sets = parseInt(setsStr)\n  const reps = parseInt(repsStr)\n  const exerciseId = params.exerciseId\n\n  const user = await getUser(request)\n\n  const fields = { weight, reps, sets }\n\n  const fieldErrors = {\n    weight: validateWeight(weight),\n    reps: validateReps(reps),\n  }\n\n  if (Object.values(fieldErrors).some(Boolean)) {\n    console.log(fieldErrors)\n    return badRequest({ fieldErrors, fields })\n  }\n\n  const volume = await db.volume.create({\n    data: { ...fields, userId: user.id, exerciseId: exerciseId },\n  })\n\n  return redirect(`/dashboard/${exerciseId}`)\n}\n\nfunction NewPr() {\n  const actionData = useActionData()\n  const exercise = useLoaderData()\n\n  return (\n    <>\n      <div className=''>\n        <h1>Add volume for the {exercise.title}</h1>\n        <Link to='/dashboard' className=''>\n          Back\n        </Link>\n      </div>\n      <div className=''>\n        <Form method='POST'>\n          <div className=''>\n            <label htmlFor='weight'>Weight</label>\n            <input type='number' name='weight' id='weight' />\n            <div className=''>\n              <p>\n                {actionData?.fieldErrors?.weight &&\n                  actionData?.fieldErrors?.weight}\n              </p>\n            </div>\n          </div>\n          <div className=''>\n            <label htmlFor='reps'>Reps</label>\n            <input type='number' name='reps' id='reps' />\n            <div className=''>\n              <p>\n                {actionData?.fieldErrors?.reps && actionData?.fieldErrors?.reps}\n              </p>\n            </div>\n          </div>\n          <div className=''>\n            <label htmlFor='reps'>Sets</label>\n            <input type='number' name='sets' id='sets' />\n            <div className=''>\n              <p>\n                {actionData?.fieldErrors?.sets && actionData?.fieldErrors?.sets}\n              </p>\n            </div>\n          </div>\n          <button type='submit' className=''>\n            Add Volume\n          </button>\n        </Form>\n      </div>\n    </>\n  )\n}\n\nexport default NewPr\n", "import { Link, useLoaderData } from \"@remix-run/react\";\nimport { db } from '~/utils/db.server'\nimport { OneRmEstimate } from './$exerciseId'\n\nexport const loader = async ({ params }) => {\n  const exercise = params.exerciseId\n\n  if (!exercise) throw new Error('exercise not found')\n\n  const pr = await db.pr.findUnique({\n    where: {\n      id: params.pr,\n    },\n  })\n\n  const data = { exercise, pr }\n  return data\n}\n\nfunction prPage() {\n  const { exercise, pr } = useLoaderData()\n  return (\n    <>\n      <table>\n        <tbody>\n          <tr>\n            <td>Weight</td>\n            <td>{pr.weight}</td>\n          </tr>\n          <tr>\n            <td>Reps</td>\n            <td>{pr.reps}</td>\n          </tr>\n          <tr>\n            <td>Projected 1rm</td>\n            <td>{OneRmEstimate(pr.weight, pr.reps)}</td>\n          </tr>\n          <tr>\n            <td>Date</td>\n            <td>{new Date(pr.createdAt).toLocaleString()}</td>\n          </tr>\n        </tbody>\n      </table>\n      <Link to={`../${exercise}`}>Back</Link>\n    </>\n  )\n}\n\nexport default prPage\n", "import { redirect } from '@remix-run/node'\nimport { Link, useLoaderData } from '@remix-run/react'\nimport { db } from '~/utils/db.server'\nimport { getUser } from '~/utils/session.server'\nimport PrTable from '../../../components/PrTable'\nimport Chart from '../../../components/Chart'\nimport { useState } from 'react'\n\nexport const loader = async ({ request, params }) => {\n  const user = await getUser(request)\n  const exercise = await db.exercise.findUnique({\n    where: { id: params.exerciseId },\n  })\n\n  if (!exercise) throw new Error('exercise not found')\n  const pr = await db.pr.findMany({\n    where: {\n      userId: {\n        equals: `${user.id}`,\n      },\n      exerciseId: {\n        equals: `${exercise.id}`,\n      },\n    },\n    orderBy: {\n      date: 'asc',\n    },\n  })\n  const oneRepMax = weightLoop(pr)\n  const data = { exercise, user, pr, oneRepMax }\n  return data\n}\n\nconst weightLoop = (pr) => {\n  let arr = []\n  for (let i = 0; i < pr.length; i++) {\n    arr.push(OneRmEstimate(pr[i].weight, pr[i].reps))\n  }\n  return Math.max(...arr)\n}\n\nexport const action = async ({ request, params }) => {\n  const form = await request.formData()\n  if (form.get('_method') === 'delete') {\n    const user = await getUser(request)\n\n    const exercise = await db.exercise.findUnique({\n      where: { id: params.exerciseId },\n    })\n\n    if (!exercise) throw new Error('exercise not found')\n\n    if (user && exercise.userId === user.id) {\n      await db.exercise.delete({ where: { id: params.exerciseId } })\n    }\n\n    return redirect('/dashboard')\n  }\n  let data = form.get('_rename')\n  if (data != undefined || data != '' || data.length != 1) {\n    const exercise = await db.exercise.findUnique({\n      where: { id: params.exerciseId },\n    })\n\n    await db.exercise.update({\n      where: { id: params.exerciseId },\n      data: {\n        title: data,\n      },\n    })\n  }\n\n  return redirect(`/dashboard/exercises/${params.exerciseId}`)\n}\n\nexport const OneRmEstimate = (weight, reps) => {\n  const unRounded1RM = weight * reps * 0.0333 + weight\n  return reps === 1 ? weight : Math.round(unRounded1RM / 2.5, 1) * 2.5\n}\n\nfunction exercise() {\n  const { exercise, user, pr, oneRepMax } = useLoaderData()\n\n  const latestPr = pr[0]\n  let currentEstimatedPr = null\n\n  if (latestPr === undefined || pr.length === 0) {\n    console.log('no pr')\n  } else {\n    currentEstimatedPr = OneRmEstimate(latestPr.weight, latestPr.reps)\n  }\n\n  let [count, setPage] = useState(0)\n\n  return (\n    <div className=\"\">\n      <div className=\"\">\n        {count === 1 && (\n          <div>\n            <form method=\"POST\" className=\"\">\n              <input\n                className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-800 dark:border-gray-600 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                name=\"_rename\"\n                type=\"text\"\n                placeholder={exercise.title}\n              />\n              <button type=\"submit\" className=\"ml-3 mr-3\">\n                Save\n              </button>\n              <a className=\"\" onClick={() => setPage((count = 0))}>\n                Cancel\n              </a>\n            </form>\n          </div>\n        )}\n        {count === 0 && (\n          <div className=\"flex flex-row items-center justify-between\">\n            <div className=\"flex flex-row items-center\">\n              <h1\n                className=\"text-xl font-bold underline underline-offset-1 mr-3\"\n                onClick={() => setPage((count = 1))}\n              >\n                {exercise.title}\n              </h1>\n              <a\n                className=\"menu-item underline underline-offset-2\"\n                onClick={() => setPage((count = 1))}\n              >\n                Rename\n              </a>\n            </div>\n            <Link to=\"/dashboard\" className=\"font-bold\">\n              <p className='underline underline-offset-2 '>Back</p>\n            </Link>\n          </div>\n        )}\n\n        {pr.length > 0 ? (\n          <div className=\"mt-3 mb-3\">\n            <h4>Current estimated PR: {currentEstimatedPr}kg</h4>\n            <h4>Best estimated PR recorded: {oneRepMax}kg</h4>\n          </div>\n        ) : null}\n      </div>\n      {pr.length > 0 ? (\n        <div className=\"w-full h-5/6\">\n          <PrTable prs={pr} />\n          <Link to=\"./pr-new\">New PR</Link>\n          <Chart pr={pr} />\n        </div>\n      ) : (\n        <h1>{'no prs yet :('}</h1>\n      )}\n      <div className=\"\">\n        {user.id === exercise.userId && (\n          <form method=\"POST\">\n            <input type=\"hidden\" name=\"_method\" value=\"delete\" />\n            <button className=\"underline underline-offset-2\">Delete exercise</button>\n          </form>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default exercise\n", "import * as React from 'react'\nimport { OneRmEstimate } from '../routes/dashboard/exercises/$exerciseId'\n\nexport default function ({ prs }) {\n  const dateConvertor = (prDate) => {\n    let date = new Date(prDate).toDateString()\n    let dateArr = date.split(' ')\n    dateArr.shift()\n    let yearArr = dateArr.pop()\n    let yearSplit = yearArr.split('')\n    let year = yearSplit.slice(2, 4).join('')\n    dateArr.push(year)\n    let month = dateArr[0]\n    dateArr[0] = dateArr[1]\n    dateArr[1] = month\n    return dateArr.join(' ')\n  }\n\n  return (\n    <div className=\"overflow-scroll h-auto max-h-1/2 pr-table__div my-10\">\n      <table className={'w-full flex flex-row flex-no-wrap rounded-lg sm:shadow-lg mb-5'}>\n        <thead className=\"text-white\">\n          <tr className=\"bg-neutral-500\t3 flex flex-row flex-no wrap sm:table-row sm:rounded-none mb-2 sm:mb-0 justify-between\">\n            <th className=\"p-3 text-left\">Date</th>\n            <th className=\"p-3 text-left\">Weight</th>\n            <th className=\"p-3 text-left\">Reps</th>\n            <th className=\"p-3 text-left\">Est 1RM</th>\n          </tr>\n        </thead>\n        <tbody className=\"flex-1 sm:flex-none\">\n          {prs.map((pr, index) => {\n            return (\n              <tr key={pr.id} className=\"flex flex-row flex-no wrap sm:table-row sm:mb-0 hover:bg-neutral-500 sm:p-3 w-full px-2 justify-between hover:text-white\">\n                <td className=\"w-1/4 sm:w-auto md:p-3\">{dateConvertor(pr.date)}</td>\n                <td className=\"w-1/4 sm:w-auto md:p-3\">{pr.weight}kg</td>\n                <td className=\"w-1/4 sm:w-auto md:p-3\">{pr.reps}</td>\n                <td className=\"w-1/4 sm:w-auto md:p-3\">{OneRmEstimate(pr.weight, pr.reps)}kg</td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\n", "import {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts'\n\nexport const dateConvertor = (prDate) => {\n  let date = new Date(prDate).toDateString()\n  let dateArr = date.split(' ')\n  dateArr.shift()\n  return dateArr.join(' ')\n}\n\nexport const OneRmEstimate = (weight, reps) => {\n  const unRounded1RM = weight * reps * 0.0333 + weight\n  return reps === 1 ? weight : Math.round(unRounded1RM / 2.5, 1) * 2.5\n}\n\nexport default function Chart(pr) {\n  const container = {}\n  let prArray = []\n  const prLength = pr.pr.length\n  const prObj = pr.pr\n  for (let i = prLength - 1; i >= 0; i--) {\n    container[i] = {}\n    container[i].date = dateConvertor(prObj[i]['createdAt'], i)\n    container[i]['1RM'] = OneRmEstimate(prObj[i]['weight'], prObj[i]['reps'])\n    prArray.push(container[i])\n  }\n  return (\n    <ResponsiveContainer width={'100%' } height={'60%'} className=\"chart__container\"> \n      <LineChart\n        width={800}\n        height={300}\n        data={prArray}\n        margin={{\n          top: 5,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray='3 3' />\n        <XAxis dataKey='date' />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line type='monotone' dataKey='1RM' stroke='#82ca9d' />\n      </LineChart>\n    </ResponsiveContainer>\n  )\n}\n", "import { redirect } from '@remix-run/node'\nimport { Link, useLoaderData } from '@remix-run/react'\nimport { db } from '~/utils/db.server'\nimport { getUser } from '~/utils/session.server'\nimport PrTable from '../../../components/PrTable'\nimport Chart from '../../../components/Chart'\nimport { useState } from 'react'\n\nexport const loader = async ({ request, params }) => {\n  const user = await getUser(request)\n  const exercise = await db.exercise.findUnique({\n    where: { id: params.exerciseId },\n  })\n\n  if (!exercise) throw new Error('exercise not found')\n  const pr = await db.pr.findMany({\n    where: {\n      userId: {\n        equals: `${user.id}`,\n      },\n      exerciseId: {\n        equals: `${exercise.id}`,\n      },\n    },\n    orderBy: {\n      date: 'asc',\n    },\n  })\n  const oneRepMax = weightLoop(pr)\n  const data = { exercise, user, pr, oneRepMax }\n  return data\n}\n\nconst weightLoop = (pr) => {\n  let arr = []\n  for (let i = 0; i < pr.length; i++) {\n    arr.push(OneRmEstimate(pr[i].weight, pr[i].reps))\n  }\n  return Math.max(...arr)\n}\n\nexport const action = async ({ request, params }) => {\n  const form = await request.formData()\n  if (form.get('_method') === 'delete') {\n    const user = await getUser(request)\n\n    const exercise = await db.exercise.findUnique({\n      where: { id: params.exerciseId },\n    })\n\n    if (!exercise) throw new Error('exercise not found')\n\n    if (user && exercise.userId === user.id) {\n      await db.exercise.delete({ where: { id: params.exerciseId } })\n    }\n\n    return redirect('/dashboard')\n  }\n  let data = form.get('_rename')\n  if (data != undefined || data != '' || data.length != 1) {\n    const exercise = await db.exercise.findUnique({\n      where: { id: params.exerciseId },\n    })\n\n    await db.exercise.update({\n      where: { id: params.exerciseId },\n      data: {\n        title: data,\n      },\n    })\n  }\n\n  return redirect(`/dashboard/exercises/${params.exerciseId}`)\n}\n\nexport const OneRmEstimate = (weight, reps) => {\n  const unRounded1RM = weight * reps * 0.0333 + weight\n  return reps === 1 ? weight : Math.round(unRounded1RM / 2.5, 1) * 2.5\n}\n\nfunction exercise() {\n  const { exercise, user, pr, oneRepMax } = useLoaderData()\n\n  const latestPr = pr[0]\n  let currentEstimatedPr = null\n\n  if (latestPr === undefined || pr.length === 0) {\n    console.log('no pr')\n  } else {\n    currentEstimatedPr = OneRmEstimate(latestPr.weight, latestPr.reps)\n  }\n\n  let [count, setPage] = useState(0)\n\n  return (\n    <div className=\"\">\n      <div className=\"\">\n        {count === 1 && (\n          <div>\n            <form method=\"POST\" className=\"\">\n              <input\n                className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-800 dark:border-gray-600 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                name=\"_rename\"\n                type=\"text\"\n                placeholder={exercise.title}\n              />\n              <button type=\"submit\" className=\"ml-3 mr-3\">\n                Save\n              </button>\n              <a className=\"\" onClick={() => setPage((count = 0))}>\n                Cancel\n              </a>\n            </form>\n          </div>\n        )}\n        {count === 0 && (\n          <div className=\"flex flex-row items-center justify-between\">\n            <div className=\"flex flex-row items-center\">\n              <h1\n                className=\"text-xl font-bold underline underline-offset-1 mr-3\"\n                onClick={() => setPage((count = 1))}\n              >\n                {exercise.title}\n              </h1>\n              <a\n                className=\"menu-item underline underline-offset-2\"\n                onClick={() => setPage((count = 1))}\n              >\n                Rename\n              </a>\n            </div>\n            <Link to=\"/dashboard\" className=\"font-bold\">\n              <p className='underline underline-offset-2 '>Back</p>\n            </Link>\n          </div>\n        )}\n\n        {pr.length > 0 ? (\n          <div className=\"mt-3 mb-3\">\n            <h4>Current estimated PR: {currentEstimatedPr}kg</h4>\n            <h4>Best estimated PR recorded: {oneRepMax}kg</h4>\n          </div>\n        ) : null}\n      </div>\n      {pr.length > 0 ? (\n        <div className=\"w-full h-5/6\">\n          <PrTable prs={pr} />\n          <Link to=\"./pr-new\">New PR</Link>\n          <Chart pr={pr} />\n        </div>\n      ) : (\n        <h1>{'no prs yet :('}</h1>\n      )}\n      <div className=\"\">\n        {user.id === exercise.userId && (\n          <form method=\"POST\">\n            <input type=\"hidden\" name=\"_method\" value=\"delete\" />\n            <button className=\"underline underline-offset-2\">Delete exercise</button>\n          </form>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default exercise\n", "import { Link, useLoaderData } from '@remix-run/react'\nimport { db } from '~/utils/db.server'\nimport { getUser } from '~/utils/session.server'\nimport Navbar from '~/components/ui/PagesNavbar'\nimport { dateStr } from '../../../components/MyGoals'\nimport PrNavbar from '../../../components/ui/PrNav'\nimport MyWorkouts from '../../../components/MyWorkouts'\nimport IndividualWorkout from '../../../components/IndividualWorkout'\n\nexport const loader = async ({ request, params }) => {\n  const user = await getUser(request);\n  const exercises = await db.exercise.findMany({\n    where: { userId: user.id },\n  })\n  const workout = await db.workout.findUnique({\n    where: { id: params.workoutId },\n    include: {\n      volume: {\n        select: {\n          date: true,\n          exerciseId: true,\n          weight: true,\n          reps: true,\n          sets: true,\n          workoutId: true,\n          id: true,\n          Exercise: {\n            select: {\n              id: true,\n              title: true,\n            },\n          },\n        },\n      },\n    },\n  });\n\n  return [workout, exercises]\n};\n\nexport function weeksBetween(d1, d2) {\n  let weeks = Math.round((d2 - d1) / (7 * 24 * 60 * 60 * 1000))\n  return weeks\n}\n\nexport const nth = (number) => {\n  let selector\n\n  if (number <= 0) {\n    selector = 4\n  } else if ((number > 3 && number < 21) || number % 10 > 3) {\n    selector = 0\n  } else {\n    selector = number % 10\n  }\n\n  return number + ['th', 'st', 'nd', 'rd', ''][selector]\n}\n\nexport function wordDate(isoDate) {\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ]\n  const date = new Date(isoDate)\n  const day = date.getDate()\n  const month = date.getMonth()\n  const dateStr = nth(day) + ' ' + months[month]\n  return dateStr\n}\n\n\nexport default function $workoutId() {\nconst data = useLoaderData()\nconst workouts = data[0]\nconst exercises = data[1]\n  return (\n    <>\n      <IndividualWorkout data={[workouts, exercises]} />\n    </>\n  )\n}\n", "import { Link } from '@remix-run/react'\n\nexport const dateStr = (a) => {\n  let dateSplit = a.split('')\n  let dateStr = dateSplit.slice(0, 10)\n  let newDate = new Date(`${dateStr.join('')}`)\n  let dateArr = newDate.toDateString().split(' ')\n  let date = dateArr[2] + ' ' + dateArr[1] + ' ' + (dateArr[3] - 2000)\n  return date\n}\n\nexport default function MyGoals(data) {\n  // console.log(data.data)\n  let goals\n  data.data.length === 1 ? (goals = data.data) : (goals = data.data[0])\n  const achieved = data.data[1]\n  console.log(data.data[1])\n  return (\n    <>\n      <ul className=\"mt-2\">\n        {goals.map((goal) => {\n          // console.log(goal)\n          const date = dateStr(goal.achievementGoalDate)\n          const reps = goal.reps\n          if (achieved === false && goal.achieved === false) {\n            return (\n              <>\n                <li key={goal.exerciseId}>\n                  <p className=\"\">\n                    <Link\n                      to={`exercises/${goal.exerciseId}`}\n                      className=\"underline font-bold\"\n                    >\n                      {goal.Exercise.title}\n                    </Link>{' '}\n                    <b>{goal.weight}kg</b> for{' '}\n                    <b>{reps < 2 ? ` 1 rep` : ` ${reps} reps`}</b> by {date}\n                  </p>\n                </li>\n              </>\n            )\n          } else if (goal.achieved === true && achieved === true) {\n            return (\n              <>\n                <li key={goal.exerciseId} className=\"mb-2\">\n                  <p>\n                    <Link to={`../dashboard/exercises/${goal.exerciseId}`}>\n                      {goal.Exercise.title}\n                    </Link>{' '}\n                    <b>{goal.weight}kg</b> for{' '}\n                    <b>{reps < 2 ? ` 1 rep` : ` ${reps} reps`}</b> by {date}\n                  </p>\n                </li>\n              </>\n            )\n          }\n        })}\n      </ul>\n    </>\n  )\n}\n", "import { Link } from '@remix-run/react'\n\nexport default function PrNavbar(data) {\n  const str = data.data[0]\n  const strSplit = str.split(' ')\n  const id = strSplit[strSplit.length - 1]\n  let titleArr\n  let title\n  if (strSplit.length > 3) {\n    titleArr = strSplit.slice(0, strSplit.length - 2)\n   title = titleArr.join(\" \")\n  } else {\n    title = strSplit[0]\n  }\n\n  return (\n    <div className={'dashboard-section-navbar mt-5 sm:mt-10 pr-15'}>\n      <Link to={`../dashboard/exercises/${id}`}>\n        <h2 className=\"text-xl font-bold\">{title}</h2>\n      </Link>\n      <Link to={`../dashboard/exercises/${id}/pr-new`}>\n        <p className=\"\" style={{'paddingRight': 68+'px'}}>New PR</p>\n      </Link>\n    </div>\n  )\n}\n", "import Masonry from 'react-masonry-css'\nimport { wordDate } from '../routes/dashboard/workouts'\nimport { Link } from '@remix-run/react'\n\nexport default function MyWorkouts({ data }) {\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 1\n  };\n  const workoutData = data\n  if (data === undefined) {\n    return null\n  } else {\n    let workoutArray = []\n    let arr = []\n    workoutData.map((workout) => {\n      workoutArray.push(workout)\n    })\n\n    for (let i = 0; i < workoutArray.length; i++) {\n      const workoutVolume = workoutArray[i].volume\n      let obj = {\n        date: workoutArray[i].date,\n        volume: workoutVolume,\n        id: workoutArray[i].id\n      }\n      arr.push(obj)\n    }\n\n    let exerciseTitleArray = []\n    let workouts = []\n    arr.map((workout) => {\n      workout.volume.map((vol) => {\n        if (!exerciseTitleArray.includes(vol.Exercise.title)) {\n          exerciseTitleArray.push(vol.Exercise.title)\n          delete vol.id\n          delete vol.workoutId\n          delete vol.date\n          vol.exercise = vol.Exercise.title\n          delete vol.Exercise\n        } else {\n          delete vol.Exercise\n          delete vol.id\n          delete vol.workoutId\n          delete vol.date\n        }\n        workouts.push(vol)\n      })\n    })\n    \n    return (\n      <Masonry\n        breakpointCols={breakpointColumnsObj}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\"\n      >\n        {arr.map((workout) => {\n          return [\n            <div className='workout-card'>\n              <Link to={`/dashboard/workouts/${workout.id}`}>\n              <h4>{wordDate(workout.date)}</h4>\n              </Link>\n              {workout.volume.map((vol) => {\n                return (\n                  <div className='workout-card__wrapper'>\n                    {vol.exercise != undefined ? (\n                      <div className='workout-card-heading__div'>\n                        <div>\n                          <p>\n                            <Link to={`exercises/${vol.exerciseId}`}>\n                              <h3>{vol.exercise}</h3>\n                            </Link>\n                          </p>\n                        </div>\n                        <div className='workout-card-title__div'>\n                          <p>Weight</p>\n                          <p>Reps</p>\n                          <p>Sets</p>\n                        </div>\n                      </div>\n                    ) : null}\n                    <div className='workout-card-work__div'>\n                      <p>{vol.weight}kg</p>\n                      <p>{vol.reps}</p>\n                      <p>{vol.sets}</p>\n                    </div>\n                  </div>\n                )\n              })}\n            </div>,\n          ]\n        })}\n      </Masonry>\n    )\n  }\n}\n", "// import React from 'react'\nimport Navbar from '~/components/ui/PagesNavbar'\n\nimport { Link, useLoaderData } from '@remix-run/react'\nimport { db } from '~/utils/db.server'\n\nimport { getUser } from '~/utils/session.server'\nimport MyWorkouts from '../../../components/MyWorkouts'\n\nimport { getSunday, getEndOfWeek } from '../index'\nimport WorkoutNavbar from '../../../components/ui/WorkoutDateNav'\nimport WorkoutChart from '../../../components/ui/WorkoutChart'\nimport { NestedError } from '../../../components/error handling/NestedError'\n\nexport const loader = async ({ request }) => {\n  const user = await getUser(request)\n\n  const workouts = {\n    workouts: await db.workout.findMany({\n      where: {\n        userId: {\n          equals: `${user.id}`,\n        },\n      },\n      include: {\n        volume: {\n          select: {\n            date: true,\n            exerciseId: true,\n            weight: true,\n            reps: true,\n            sets: true,\n            workoutId: true,\n            id: true,\n            Exercise: {\n              select: {\n                id: true,\n                title: true,\n              },\n            },\n          },\n        },\n      },\n      orderBy: { date: 'desc' },\n    }),\n  }\n\n  return [workouts, user]\n}\n\nexport function weeksBetween(d1, d2) {\n  let weeks = Math.round((d2 - d1) / (7 * 24 * 60 * 60 * 1000))\n  return weeks\n}\n\nexport const nth = (number) => {\n  let selector\n\n  if (number <= 0) {\n    selector = 4\n  } else if ((number > 3 && number < 21) || number % 10 > 3) {\n    selector = 0\n  } else {\n    selector = number % 10\n  }\n\n  return number + ['th', 'st', 'nd', 'rd', ''][selector]\n}\n\nexport function wordDate(isoDate) {\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ]\n  const date = new Date(isoDate)\n  const day = date.getDate()\n  const year = date.getFullYear()\n  const month = date.getMonth()\n  const dateStr = nth(day) + ' ' + months[month]\n  return dateStr\n}\n\nexport function ErrorBoundary(error) {\n  console.error(error)\n  return <NestedError />\n}\n\nexport default function index() {\n  const data = useLoaderData()\n  const workouts = data[0].workouts\n\n  const userDate = data[1].createdAt\n  const today = new Date()\n  let weeksArray = []\n  let weeks = weeksBetween(new Date(userDate), today)\n\n  for (let i = 0; i < weeks + 2; i++) {\n    let newWeek = getEndOfWeek(userDate, i * 7)\n    weeksArray.push(newWeek)\n  }\n\n  weeksArray.reverse()\n\n  const chartData = []\n\n  {\n    weeksArray.map((week) => {\n      let startOfWeek = getEndOfWeek(week, 0).toISOString()\n      let endOfWeek = getEndOfWeek(week, 6).toISOString()\n      let count = 0\n      for (let i = 0; i < workouts.length; i++) {\n        if (workouts[i].date > startOfWeek && workouts[i].date < endOfWeek) {\n          count++\n        }\n      }\n      let obj = {\n        date: wordDate(startOfWeek),\n        ['Workouts Per Week']: count,\n      }\n      chartData.push(obj)\n    })\n  }\n\n  chartData.reverse()\n\n  return (\n    <>\n      <Navbar data={['My Workouts', 'workouts/new', 'New Workout']} />\n      <div className=\"workout-chart__div\">\n        <h3>Workouts per week</h3>\n        <WorkoutChart data={chartData} />\n      </div>\n      {weeksArray.map((week) => {\n        let startOfWeek = getEndOfWeek(week, 0).toISOString()\n        let endOfWeek = getEndOfWeek(week, 6).toISOString()\n        let workoutArray = []\n        for (let i = 0; i < workouts.length; i++) {\n          if (workouts[i].date > startOfWeek && workouts[i].date < endOfWeek) {\n            workoutArray.push(workouts[i])\n          }\n        }\n        return (\n          <div>\n            {workoutArray.length === 0 ? null : (\n              <>\n                <WorkoutNavbar\n                  data={[wordDate(startOfWeek), wordDate(endOfWeek)]}\n                />\n                <MyWorkouts data={workoutArray} />\n              </>\n            )}\n          </div>\n        )\n      })}\n    </>\n  )\n}\n", "import { Link, useLoaderData } from '@remix-run/react'\nimport { db } from '~/utils/db.server'\nimport MyExercise from '../../components/MyExercises'\n\nimport { getUser } from '~/utils/session.server'\nimport MyWorkouts from '~/components/MyWorkouts'\nimport MyGoals from '~/components/MyGoals'\n\nimport Navbar from '~/components/ui/DashboardContentNavbar'\nimport { NestedError } from '../../components/error handling/NestedError'\n\nexport function getSunday() {\n  let sunday = new Date(today.setDate(today.getDate() - today.getDay() + 1))\n  return sunday\n}\n\nexport function getEndOfWeek(d, week) {\n  d = new Date(d)\n  let day = d.getDay(),\n    diff = d.getDate() - day + (day == 0 ? -6 : 1) + week\n  return new Date(d.setDate(diff))\n}\n\nexport const loader = async ({ request }) => {\n  let now = new Date()\n  let today = new Date(now.getFullYear(), now.getMonth(), now.getDate())\n  let lastSunday = new Date(today.setDate(today.getDate() - today.getDay() + 1))\n  let thisSunday = new Date(today.setDate(today.getDate() - today.getDay() + 8))\n\n  const user = await getUser(request)\n\n  const exercises = {\n    exercises: await db.exercise.findMany({\n      where: {\n        userId: {\n          equals: `${user.id}`,\n        },\n      },\n      // orderBy: { createdAt: 'desc' },\n      include: {\n        Pr: {\n          select: {\n            weight: true,\n            reps: true,\n          },\n          orderBy: { weight: 'desc' },\n        },\n      },\n      orderBy: { updatedAt: 'desc' },\n      take: 4,\n    }),\n  }\n  const prs = {\n    prs: await db.pr.findMany({\n      where: {\n        userId: {\n          equals: `${user.id}`,\n        },\n      },\n      orderBy: { createdAt: 'desc' },\n    }),\n  }\n  const goals = await db.goals.findMany({\n    where: { userId: user.id },\n    include: {\n      Exercise: {\n        select: {\n          title: true,\n        },\n      },\n    },\n  })\n\n  const workouts = {\n    workouts: await db.workout.findMany({\n      where: {\n        userId: {\n          equals: `${user.id}`,\n        },\n        date: {\n          gt: lastSunday,\n          lte: thisSunday,\n        },\n      },\n      include: {\n        volume: {\n          select: {\n            date: true,\n            exerciseId: true,\n            weight: true,\n            reps: true,\n            sets: true,\n            workoutId: true,\n            id: true,\n            Exercise: {\n              select: {\n                id: true,\n                title: true,\n              },\n            },\n          },\n        },\n      },\n      orderBy: { date: 'desc' },\n    }),\n  }\n  const data = { exercises, prs, workouts, goals, user }\n\n  return data\n}\n\nexport function ErrorBoundary(error) {\n  console.error(error)\n  return <NestedError />\n}\n\nfunction ExerciseItems() {\n  const data = useLoaderData()\n  const workoutData = data.workouts['workouts']\n  const notAchieved = [data.goals, false]\n  return (\n    <>\n      <header className={'app-header mb-5'}>\n        <div className={'app-header-navigation'}>\n          <div className={'tabs'}>\n            <h1 className={'h-auto mb-5 font-bold text-2xl'}>\n              Welcome, {data.user.name}!\n            </h1>\n            <p className=\"\">\n              Here's what's happening with your strength progress so far. Well\n              done!\n            </p>\n          </div>\n        </div>\n        <div className={'app-header-mobile mb-3'}>\n          <h1 className={'mb-2 font-bold text-3xl'}>Welcome, {data.user.name}!</h1>\n          <p>\n            Here's what's happening with your strength progress so far. Well\n            done!\n          </p>\n        </div>\n      </header>\n      <div className=\"h-auto mb-10\">\n        <Navbar data={['My Goals', 'goals/new', 'goals']} />\n        <MyGoals data={notAchieved} />\n      </div>\n      <div className={'h-auto mb-10 w-full'}>\n        <Navbar data={['My Exercises', 'exercises/new', 'exercises']} />\n        <MyExercise exercises={data.exercises['exercises']} />\n      </div>\n      <div className=\"h-auto mb-10 flex justify-center flex-col\">\n        <Navbar data={['My Workouts This Week', 'workouts/new', 'workouts']} />\n        <MyWorkouts data={workoutData} />\n      </div>\n    </>\n  )\n}\n\nexport default ExerciseItems\n", "import { Link } from \"@remix-run/react\";\n\nexport const OneRmEstimate = (weight, reps) => {\n  const unRounded1RM = weight * reps * 0.0333 + weight\n  return reps === 1 ? weight : Math.round(unRounded1RM / 2.5, 1) * 2.5\n}\n\nexport default function MyExercise({ exercises }) {\n  return (\n    <div className='exercise-list__div w-full'>\n      {exercises.map((exercise, index) => {\n        let dateSplit = exercise.updatedAt.split(\"\")\n        let dateStr = dateSplit.slice(0, 10)\n        let newDate = new Date(`${dateStr.join(\"\")}`)\n        let dateArr = newDate.toDateString().split(\" \")\n        let date = dateArr[2] + \" \" + dateArr[1] + \" \" + dateArr[3]\n\n        let oneRm\n        let weight\n        let reps\n        exercise[\"Pr\"].length === 0\n          ? (oneRm = null)\n          : ((weight = exercise[\"Pr\"][0][\"weight\"]),\n            (reps = exercise[\"Pr\"][0][\"reps\"]),\n            (oneRm = OneRmEstimate(weight, reps)))\n\n        return (\n          <div className={\"transfer w-full flex justify-between\"} key={exercise.id}>\n            <dl className={\"transfer-details w-full\"}>\n              <div>\n                <Link to={`/dashboard/exercises/${exercise.id}`}>\n                  {exercise.title}\n                </Link>\n              </div>\n              <div>\n                <dt>{oneRm === null ? \"No PR\" : oneRm + \"kg\"}</dt>\n                <dd>Best 1RM Estimate</dd>\n              </div>\n              <div>\n                <dt>{date}</dt>\n                <dd>Last updated</dd>\n              </div>\n            </dl>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n", "import { Link } from \"@remix-run/react\";\n\nexport default function Navbar(data) {\n  return (\n      <div className={'dashboard-section-navbar'}>\n        <h2 className='text-xl font-bold'>{data.data[0]}</h2>\n        <div className='dashboard-section-navbar__links'>\n          <Link to={`/dashboard/${data.data[1]}`} className='underline'>\n            <span>New</span>\n          </Link>\n          <Link to={`/dashboard/${data.data[2]}`} className='underline'>View all</Link>\n        </div>\n      </div>\n  )\n}\n", "export function NestedError() {\n\n    return (\n      <div>\n       \n      </div>\n    )\n  }", "export default function WorkoutNavbar(data) {\n  return (\n      <div className={'dashboard-section-navbar mb-4'}>\n        <h2 className='text-xl font-bold'>{data.data[0]} - {data.data[1]}</h2>\n      </div>\n  )\n}\n", "import React from 'react'\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts'\n\nimport { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport function useWindowDimensions() {\n  \n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\n\nconst CustomTooltip = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    return (\n      <div className=\"custom-tooltip\">\n        {payload[0].value === 0 ? (\n          <p className=\"label\">{`${label}: No workouts this week`}</p>\n        ) : payload[0].value === 1 ? (\n          <p className=\"label\">{`${label}: ${payload[0].value} workout`}</p>\n        ) : (\n          <p className=\"label\">{`${label}: ${payload[0].value} workouts`}</p>\n        )}\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport default function WorkoutChart(data) {\n  let screenHeight \n  let screenWidth\n  if (typeof window !== \"undefined\") {\n   screenWidth = useWindowDimensions().width;\n   screenHeight = useWindowDimensions().height;\n   \n   return (\n    <ResponsiveContainer width={'100%' } height={'95%'} className=\"chart__container\">\n      <LineChart\n        width={screenWidth}\n        height={screenHeight}\n        data={data.data}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"date\" />\n        <YAxis />\n        <Tooltip content={<CustomTooltip />} />\n        {/* <Legend /> */}\n        <Line\n          type=\"monotone\"\n          dataKey=\"Workouts Per Week\"\n          stroke=\"#8884d8\"\n          activeDot={{ r: 8 }}\n          />\n      </LineChart>\n    </ResponsiveContainer>\n  )\n} else {\n  return (\n    <>Loading..</>\n  )\n}\n}\n", "import { wordDate } from '../routes/dashboard/workouts'\nimport { Link } from '@remix-run/react'\nimport { getUser } from '~/utils/session.server'\nimport { db } from '~/utils/db.server'\n\nconst prArray = (dataBlock, exerciseList, user) => {\n  let prArr = []\n  for (let i = 0; i < exerciseList.length; i++) {\n    prArr[i] = {\n      exerciseId: dataBlock[i].exerciseId,\n      weight: parseInt(dataBlock[i].weight),\n      reps: parseInt(dataBlock[i].reps),\n      userId: String(user.id),\n    }\n  }\n  return prArr\n}\n\n//need the original pr id string \n//also need the volume string\n//update both not create new one\n\nexport const action = async ({ request, params }) => {\n  const user = await getUser(request)\n  let volumeBlock = {}\n  let exerciseList = []\n  let volumeArray = []\n  const form = await request.formData()\n  console.log(form)\n\n  let list = [...form]\n\n  for (let i = 0; i < list.length; i++) {\n    if (\n      list[i][0].includes('exercise') &&\n      !list[i][1].includes('Pick an exercise')\n    ) {\n      let obj = {\n        exerciseId: list[i][1],\n        weight: list[i + 1][1],\n        reps: list[i + 2][1],\n        sets: list[i + 3][1],\n      }\n      volumeArray.push(obj)\n      exerciseList.push(list[i][1])\n    }\n  }\n\n  let date = new Date(form.get('date'))\n\n  let volume = {\n    volume: {\n      create: [],\n    },\n  }\n\n  for (let i = 0; i < exerciseList.length; i++) {\n    volume.volume.create.push({\n      exerciseId: '',\n      weight: '',\n      reps: '',\n      sets: '',\n      userId: '',\n    })\n    volume.volume.create[i].exerciseId = String(volumeArray[i].exerciseId)\n    volume.volume.create[i].weight = parseInt(volumeArray[i].weight)\n    volume.volume.create[i].reps = parseInt(volumeArray[i].reps)\n    volume.volume.create[i].sets = parseInt(volumeArray[i].sets)\n    volume.volume.create[i].userId = String(user.id)\n  }\n\n  const prArr = prArray(volumeArray, exerciseList, user)\n\n  for (let i = 0; i < exerciseList.length; i++) {\n    let pr = await db.pr.create({\n      data: prArr[i],\n    })\n  }\n\n  const workout = await db.workout.update({\n    where: { id: params.exerciseId },\n    data: {\n      userId: user.id,\n      date: date,\n      ...volume,\n    },\n    include: {\n      volume: true,\n    },\n  })\n\n  return redirect(`/dashboard`)\n}\n\nexport default function IndividualWorkout({ data }) {\n  const workoutData = [data[0]]\n  const exercises = data[1]\n  if (data === undefined) {\n    return null\n  } else {\n    let workoutArray = []\n    let arr = []\n    workoutData.map((workout) => {\n      workoutArray.push(workout)\n    })\n\n    for (let i = 0; i < workoutArray.length; i++) {\n      const workoutVolume = workoutArray[i].volume\n      let obj = {\n        date: workoutArray[i].date,\n        volume: workoutVolume,\n        id: workoutArray[i].id,\n      }\n      arr.push(obj)\n    }\n\n    let exerciseTitleArray = []\n    let workouts = []\n    arr.map((workout) => {\n      workout.volume.map((vol) => {\n        if (!exerciseTitleArray.includes(vol.Exercise.title)) {\n          exerciseTitleArray.push(vol.Exercise.title)\n          delete vol.workoutId\n          delete vol.date\n          vol.exercise = vol.Exercise.title\n          delete vol.Exercise\n        } else {\n          delete vol.Exercise\n          delete vol.workoutId\n          delete vol.date\n        }\n        workouts.push(vol)\n      })\n    })\n\n    return (\n      <>\n        {arr.map((workout) => {\n          return [\n            <form className=\"workout-card\" method='POST'>\n              <Link to={`/dashboard/workouts/${workout.id}`}>\n                <h4>{wordDate(workout.date)}</h4>\n              </Link>\n              {workout.volume.map((vol) => {\n                // console.log(vol)\n                // const volumeIdAndExercise = [vol.id, vol.exercise]\n                return (\n                  <div className=\"workout-card__wrapper\" key={vol.id}>\n                    {vol.exercise != undefined ? (\n                      <div className=\"workout-card-heading__div\">\n                        <select\n                          aria-label=\"Default select example\"\n                          required\n                          id=\"exercise\"\n                          name=\"exercise-1\"\n                        >\n                          <option defaultValue={vol.exercise}>\n                            {vol.exercise}\n                          </option>\n                          {exercises.map((exercise) => (\n                            <>\n                              <option key={exercise.id} value={exercise.id}>\n                                {exercise.title}\n                              </option>\n                            </>\n                          ))}\n                        </select>\n                        <div className=\"workout-card-title__div\">\n                          <p>Weight</p>\n                          <p>Reps</p>\n                          <p>Sets</p>\n                        </div>\n                      </div>\n                    ) : null}\n                    <div className=\"workout-card-work__div\">\n                      <input type=\"text\" defaultValue={vol.weight} />\n                      <input type=\"text\" defaultValue={vol.reps} />\n                      <input type=\"text\" defaultValue={vol.sets} />\n                    </div>\n                  </div>\n                )\n              })}\n              <button type=\"submit\">Save</button>\n            </form>,\n          ]\n        })}\n      </>\n    )\n  }\n}\n", "import React from 'react'\nimport { json } from '@remix-run/node'\nimport { useActionData, useLoaderData } from '@remix-run/react'\nimport { getUser } from '~/utils/session.server'\nimport { useState } from 'react'\nimport { db } from '~/utils/db.server'\n\nimport { changePassword } from '~/utils/session.server'\n\nfunction badRequest(data) {\n  return json(data, { status: 400 })\n}\nfunction goodRequest(data) {\n  return json(data, { status: 200 })\n}\n\nexport const loader = async ({ request }) => {\n  const user = await getUser(request)\n  return user\n}\n\nfunction validatePassword(password) {\n  if (typeof password !== 'string' || password.length < 6) {\n    return 'Password must be at least 6 characters'\n  } else if (typeof password !== 'string' || password.search(/[0-9]/) == -1) {\n    return 'Password must contain atleast 1 number'\n  } else if (typeof password !== 'string' || password.search(/[A-Z]/) == -1) {\n    return 'Password must contain atleast 1 upper case letter'\n  }\n}\n\nexport const action = async ({ request, params }) => {\n  const form = await request.formData()\n  const name = form.get('name')\n\n  if (form.get('_method') === 'name') {\n    const user = await getUser(request)\n\n    await db.user.update({\n      where: { id: user.id },\n      data: {\n        name: name,\n      },\n    })\n\n    return null\n  }\n  if (form.get('_method') === 'email') {\n    const user = await getUser(request)\n    const email = form.get('email')\n    const fields = { email }\n    const emailExists = await db.user.findFirst({\n      where: {\n        email,\n      },\n    })\n    if (emailExists) {\n      return badRequest({\n        fields,\n        fieldErrors: { email: `the email address: ${email} already exists.` },\n      })\n    }\n\n    await db.user.update({\n      where: { id: user.id },\n      data: {\n        email: email,\n      },\n    })\n\n    return null\n  }\n\n  if (form.get('_method') === 'password') {\n    const user = await getUser(request)\n    const email = user.email\n    const oldPassword = form.get('old-password')\n    const newPassword = form.get('new-password')\n    const confirmNewPassword = form.get('confirm-new-password')\n\n    const fields = { oldPassword }\n\n    if (confirmNewPassword != newPassword) {\n      return badRequest({\n        fields,\n        fieldErrors: { password: \"Passwords don't match\" },\n      })\n    }\n\n    const fieldErrors = {\n      password: validatePassword(newPassword),\n    }\n\n    if (Object.values(fieldErrors).some(Boolean)) {\n      return badRequest({ fieldErrors, fields })\n    }\n\n    const passwordTrue = await changePassword({\n      email,\n      oldPassword,\n      newPassword,\n    })\n    if (!passwordTrue) {\n      return badRequest({\n        fields,\n        fieldErrors: { password: 'Invalid Credentials' },\n      })\n    }\n\n    return goodRequest({\n      fields,\n      fieldErrors: { password: 'Password changed successfully' },\n    })\n  }\n\n  return null\n}\n\nexport default function register() {\n  const actionData = useActionData()\n\n  let [count, setPage] = useState(0)\n\n  const user = useLoaderData()\n  return (\n    <div className=\"w-full h-full\">\n      {count === 1 && (\n        <div className=\"w-full lg:w-1/2 h-1/2 flex flex-col justify-between\">\n          <div className=\"mb-20 flex flex-row justify-between items-center\">\n            <form method=\"POST\" className=\"w-full\">\n              <input type=\"hidden\" name=\"_method\" value=\"name\" />\n              <div class=\"mb-6\">\n                <label\n                  for=\"name\"\n                  class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n                >\n                  Edit name\n                </label>\n                <input\n                  type=\"name\"\n                  id=\"name\"\n                  name=\"name\"\n                  class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                  placeholder={user.name}\n                  required\n                />\n              </div>\n              <button\n                type=\"submit\"\n                class=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full lg:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n              >\n                Submit\n              </button>\n            </form>\n          </div>\n          <div className=\"mb-20 flex flex-row justify-between items-center\">\n            <h1\n              className=\"font-bold text-2xl \"\n              onClick={() => setPage((count = 2))}\n            >\n              {user.email}\n            </h1>\n            <a\n              className=\"menu-item underline\"\n              onClick={() => setPage((count = 2))}\n            >\n              Edit email\n            </a>\n          </div>\n          <a className=\"underline\" onClick={() => setPage((count = 3))}>\n            Change password\n          </a>\n        </div>\n      )}\n\n      {count === 0 && (\n        <div className=\"w-full lg:w-1/2 h-1/2 flex flex-col justify-between\">\n          <div className=\"mb-20 flex flex-row justify-between items-center\">\n            <p\n              className=\"font-bold text-2xl \"\n              onClick={() => setPage((count = 1))}\n            >\n              {user.name}\n            </p>\n            <a\n              className=\"menu-item underline\"\n              onClick={() => setPage((count = 1))}\n            >\n              Edit name\n            </a>\n          </div>\n          <div className=\"mb-20 flex flex-row justify-between items-center\">\n            <p\n              className=\"font-bold text-2xl \"\n              onClick={() => setPage((count = 2))}\n            >\n              {user.email}\n            </p>\n            <a\n              className=\"menu-item underline\"\n              onClick={() => setPage((count = 2))}\n            >\n              Edit email\n            </a>\n          </div>\n          <div className=\"error\">\n            {actionData?.fieldErrors?.email && actionData?.fieldErrors?.email}\n          </div>\n          <a className=\"underline\" onClick={() => setPage((count = 3))}>\n            Change password\n          </a>\n          <div className=\"error\">\n            {actionData?.fieldErrors?.password &&\n              actionData?.fieldErrors?.password}\n          </div>\n        </div>\n      )}\n\n      {count === 2 && (\n        <div className=\"w-full lg:w-1/2 h-1/2 flex flex-col justify-between\">\n          <div className=\"mb-20 flex flex-row justify-between items-center\">\n            <h1\n              className=\"font-bold text-2xl \"\n              onClick={() => setPage((count = 1))}\n            >\n              {user.name}\n            </h1>\n            <a\n              className=\"menu-item underline\"\n              onClick={() => setPage((count = 1))}\n            >\n              Edit name\n            </a>\n          </div>\n          <div className=\"mb-20 flex flex-row justify-between items-center\">\n            <form method=\"POST\" className=\"w-full\">\n              <input type=\"hidden\" name=\"_method\" value=\"email\" />\n              <div class=\"mb-6\">\n                <label\n                  for=\"email\"\n                  class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n                >\n                  Email address\n                </label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                  placeholder={user.email}\n                  required\n                />\n              </div>\n              <div className=\"error\">\n                {actionData?.fieldErrors?.email &&\n                  actionData?.fieldErrors?.email}\n              </div>\n              <button\n                type=\"submit\"\n                class=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full lg:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n              >\n                Submit\n              </button>\n            </form>\n          </div>\n          <a className=\"underline\" onClick={() => setPage((count = 3))}>\n            Change password\n          </a>\n          <div className=\"error\">\n            {actionData?.fieldErrors?.password &&\n              actionData?.fieldErrors?.password}\n          </div>\n        </div>\n      )}\n\n      {count === 3 && (\n        <div className=\"w-full lg:w-1/2 h-1/2 flex flex-col justify-between\">\n          <div className=\"mb-20 flex flex-row justify-between items-center\">\n            <h1\n              className=\"font-bold text-2xl \"\n              onClick={() => setPage((count = 1))}\n            >\n              {user.name}\n            </h1>\n            <a className=\"menu-item\" onClick={() => setPage((count = 1))}>\n              Edit name\n            </a>\n          </div>\n          <div className=\"mb-20 flex flex-row justify-between items-center\">\n            <h1\n              className=\"font-bold text-2xl \"\n              onClick={() => setPage((count = 2))}\n            >\n              {user.email}\n            </h1>\n            <a className=\"menu-item\" onClick={() => setPage((count = 2))}>\n              Edit email\n            </a>\n          </div>\n          <form method=\"POST\">\n            <input type=\"hidden\" name=\"_method\" value=\"password\" />\n            <div class=\"mb-6\">\n              <label\n                for=\"old-password'\"\n                class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n              >\n                Current password\n              </label>\n              <input\n                name=\"old-password\"\n                type=\"password\"\n                id=\"old-password'\"\n                class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                placeholder=\"\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\"\n                required\n              />\n            </div>\n            <div class=\"mb-6\">\n              <label\n                for=\"new-password\"\n                class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n              >\n                New password\n              </label>\n              <input\n                type=\"password\"\n                name=\"new-password\"\n                id=\"new-password\"\n                class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                placeholder=\"\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\"\n                required\n              />\n            </div>\n            <div class=\"mb-6\">\n              <label\n                for=\"confirm-new-password\"\n                class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n              >\n                Confirm password\n              </label>\n              <input\n                type=\"password\"\n                name=\"confirm-new-password\"\n                id=\"confirm-new-password\"\n                class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                placeholder=\"\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\"\n                required\n              />\n            </div>\n            <div className=\"error\">\n              {actionData?.fieldErrors?.password &&\n                actionData?.fieldErrors?.password}\n            </div>\n            <button\n              type=\"submit\"\n              class=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full lg:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n            >\n              Submit\n            </button>\n          </form>\n        </div>\n      )}\n    </div>\n  )\n}\n", "import { Link, useLoaderData } from \"@remix-run/react\";\nimport { db } from \"~/utils/db.server\"\nimport { getUser } from \"~/utils/session.server\"\nimport MyExercise from '../../../components/MyExercises'\nimport Navbar from '~/components/ui/PagesNavbar'\nimport { NestedError } from \"../../../components/error handling/NestedError\";\n\nexport const loader = async ({ request }) => {\n  const user = await getUser(request)\n  const exercises = {\n    exercises: await db.exercise.findMany({\n      where: {\n        userId: {\n          equals: `${user.id}`,\n        },\n      },\n      // orderBy: { createdAt: 'desc' },\n      include: {\n        Pr: {\n          select: {\n            weight: true,\n            reps: true,\n          },\n          orderBy: { weight: 'desc' },\n        },\n      },\n      orderBy: { updatedAt: 'desc' },\n    }),\n  }\n\n  return exercises\n}\n\nexport function ErrorBoundary(error) {\n  console.error(error);\n  return (\n    <NestedError/>\n  )\n}\n\nexport default function index() {\n  const data = useLoaderData()\n  return (\n    <>\n      <Navbar data={['My Exercises', 'exercises/new', 'New Exercise']} />\n      <MyExercise exercises={data['exercises']} />\n    </>\n  )\n}", "// import React from 'react'\nimport Navbar from '~/components/ui/PagesNavbar'\n\nimport { Link, useLoaderData } from '@remix-run/react'\nimport { db } from '~/utils/db.server'\n\nimport { getUser } from '~/utils/session.server'\nimport MyWorkouts from '../../../components/MyWorkouts'\n\nimport { getSunday, getEndOfWeek } from '../index'\nimport WorkoutNavbar from '../../../components/ui/WorkoutDateNav'\nimport WorkoutChart from '../../../components/ui/WorkoutChart'\nimport { NestedError } from '../../../components/error handling/NestedError'\n\nexport const loader = async ({ request }) => {\n  const user = await getUser(request)\n\n  const workouts = {\n    workouts: await db.workout.findMany({\n      where: {\n        userId: {\n          equals: `${user.id}`,\n        },\n      },\n      include: {\n        volume: {\n          select: {\n            date: true,\n            exerciseId: true,\n            weight: true,\n            reps: true,\n            sets: true,\n            workoutId: true,\n            id: true,\n            Exercise: {\n              select: {\n                id: true,\n                title: true,\n              },\n            },\n          },\n        },\n      },\n      orderBy: { date: 'desc' },\n    }),\n  }\n\n  return [workouts, user]\n}\n\nexport function weeksBetween(d1, d2) {\n  let weeks = Math.round((d2 - d1) / (7 * 24 * 60 * 60 * 1000))\n  return weeks\n}\n\nexport const nth = (number) => {\n  let selector\n\n  if (number <= 0) {\n    selector = 4\n  } else if ((number > 3 && number < 21) || number % 10 > 3) {\n    selector = 0\n  } else {\n    selector = number % 10\n  }\n\n  return number + ['th', 'st', 'nd', 'rd', ''][selector]\n}\n\nexport function wordDate(isoDate) {\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ]\n  const date = new Date(isoDate)\n  const day = date.getDate()\n  const year = date.getFullYear()\n  const month = date.getMonth()\n  const dateStr = nth(day) + ' ' + months[month]\n  return dateStr\n}\n\nexport function ErrorBoundary(error) {\n  console.error(error)\n  return <NestedError />\n}\n\nexport default function index() {\n  const data = useLoaderData()\n  const workouts = data[0].workouts\n\n  const userDate = data[1].createdAt\n  const today = new Date()\n  let weeksArray = []\n  let weeks = weeksBetween(new Date(userDate), today)\n\n  for (let i = 0; i < weeks + 2; i++) {\n    let newWeek = getEndOfWeek(userDate, i * 7)\n    weeksArray.push(newWeek)\n  }\n\n  weeksArray.reverse()\n\n  const chartData = []\n\n  {\n    weeksArray.map((week) => {\n      let startOfWeek = getEndOfWeek(week, 0).toISOString()\n      let endOfWeek = getEndOfWeek(week, 6).toISOString()\n      let count = 0\n      for (let i = 0; i < workouts.length; i++) {\n        if (workouts[i].date > startOfWeek && workouts[i].date < endOfWeek) {\n          count++\n        }\n      }\n      let obj = {\n        date: wordDate(startOfWeek),\n        ['Workouts Per Week']: count,\n      }\n      chartData.push(obj)\n    })\n  }\n\n  chartData.reverse()\n\n  return (\n    <>\n      <Navbar data={['My Workouts', 'workouts/new', 'New Workout']} />\n      <div className=\"workout-chart__div\">\n        <h3>Workouts per week</h3>\n        <WorkoutChart data={chartData} />\n      </div>\n      {weeksArray.map((week) => {\n        let startOfWeek = getEndOfWeek(week, 0).toISOString()\n        let endOfWeek = getEndOfWeek(week, 6).toISOString()\n        let workoutArray = []\n        for (let i = 0; i < workouts.length; i++) {\n          if (workouts[i].date > startOfWeek && workouts[i].date < endOfWeek) {\n            workoutArray.push(workouts[i])\n          }\n        }\n        return (\n          <div>\n            {workoutArray.length === 0 ? null : (\n              <>\n                <WorkoutNavbar\n                  data={[wordDate(startOfWeek), wordDate(endOfWeek)]}\n                />\n                <MyWorkouts data={workoutArray} />\n              </>\n            )}\n          </div>\n        )\n      })}\n    </>\n  )\n}\n", "import { json, redirect } from '@remix-run/node'\nimport { Link, useActionData, useLoaderData } from '@remix-run/react'\nimport { db } from '~/utils/db.server'\nimport { getUser } from '~/utils/session.server'\nimport Navbar from '../../../components/ui/PagesNavbar'\n\nfunction validateTitle(title) {\n  if (typeof title !== 'string' || title.length < 2) {\n    return 'Title should be atleast 2 characters long'\n  }\n}\n\nfunction badRequest(data) {\n  return json(data, { status: 400 })\n}\n\nexport const action = async ({ request }) => {\n  const form = await request.formData()\n  const title = form.get('title')\n\n  const user = await getUser(request)\n\n  const fields = { title }\n\n  const fieldErrors = {\n    title: validateTitle(title),\n  }\n\n  if (Object.values(fieldErrors).some(Boolean)) {\n    console.log(fieldErrors)\n    return badRequest({ fieldErrors, fields })\n  }\n\n  const exercise = await db.exercise.create({\n    data: { ...fields, userId: user.id },\n  })\n\n  return redirect(`/dashboard/exercises/${exercise.id}`)\n}\n\nfunction NewExercise() {\n  const actionData = useActionData()\n\n  return (\n    <>\n      <div className=\"page-header\">\n        <Navbar data={['New Exercise', 'exercises', 'Back']} />\n      </div>\n      <div className=\"page-content\">\n        <form method=\"POST\">\n          <div className=\"relative z-0 w-full mt-5 mb-10 group\">\n            <input\n              type=\"text\"\n              name={`title`}\n              id=\"title\"\n              className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n              placeholder=\" \"\n              required\n            />\n            <label\n              for=\"title\"\n              className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-white duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\n            >\n              Exercise name\n            </label>\n          </div>\n          <div className=\"\">\n            <p>\n              {actionData?.fieldErrors?.title && actionData?.fieldErrors?.title}\n            </p>\n          </div>\n          <button\n            type=\"submit\"\n            aria-current=\"page\"\n            class=\"text-white bg-blue-700 hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 font-medium rounded-full text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n          >\n            Save\n          </button>\n        </form>\n      </div>\n    </>\n  )\n}\n\nexport default NewExercise\n", "import React from 'react'\n\nexport default function index() {\n  return (\n    <div>All prs</div>\n  )\n}\n", "import { redirect } from '@remix-run/node'\nimport { Form, useActionData, useLoaderData } from '@remix-run/react'\nimport { getUser } from '~/utils/session.server'\nimport { db } from '~/utils/db.server'\nimport React, { useState } from 'react'\nimport NewWorkoutForm from '~/components/NewWorkoutForm'\nimport Navbar from '../../../components/ui/PagesNavbar'\nimport NewExerciseForm from '../../../components/NewExerciseForm'\nimport { goalCalc } from '../prs/new'\nimport { OneRmEstimate } from '../prs'\n\nexport const loader = async ({ request }) => {\n  const user = await getUser(request)\n  const exercises = await db.exercise.findMany({\n    where: { userId: user.id },\n  })\n  const data = { user, exercises }\n  return data\n}\n\nfunction validateTitle(title) {\n  if (typeof title !== 'string' || title.length < 2) {\n    return 'Title should be atleast 2 characters long'\n  }\n}\n\nconst prArray = (dataBlock, exerciseList, user) => {\n  let prArr = []\n  for (let i = 0; i < exerciseList.length; i++) {\n    prArr[i] = {\n      exerciseId: dataBlock[i].exerciseId,\n      weight: parseInt(dataBlock[i].weight),\n      reps: parseInt(dataBlock[i].reps),\n      userId: String(user.id),\n    }\n  }\n  return prArr\n}\n\nexport const action = async ({ request }) => {\n  const user = await getUser(request)\n  let volumeBlock = {}\n  let exerciseList = []\n  let volumeArray = []\n  const form = await request.formData()\n\n  let goals = await db.goals.findMany({\n    where: { userId: user.id, achieved: false },\n  })\n\n  let list = [...form]\n  console.log(list)\n\n  if (form.get('_method') === 'workout') {\n    for (let i = 0; i < list.length; i++) {\n      if (\n        list[i][0].includes('exercise') &&\n        !list[i][1].includes('Pick an exercise')\n      ) {\n        let obj = {\n          exerciseId: list[i][1],\n          weight: list[i + 1][1],\n          reps: list[i + 2][1],\n          sets: list[i + 3][1],\n        }\n        volumeArray.push(obj)\n        exerciseList.push(list[i][1])\n      }\n    }\n\n    let date = new Date(form.get('date'))\n\n    let volume = {\n      volume: {\n        create: [],\n      },\n    }\n\n    for (let i = 0; i < exerciseList.length; i++) {\n      volume.volume.create.push({\n        exerciseId: '',\n        weight: '',\n        reps: '',\n        sets: '',\n        userId: '',\n      })\n      volume.volume.create[i].exerciseId = String(volumeArray[i].exerciseId)\n      volume.volume.create[i].weight = parseInt(volumeArray[i].weight)\n      volume.volume.create[i].reps = parseInt(volumeArray[i].reps)\n      volume.volume.create[i].sets = parseInt(volumeArray[i].sets)\n      volume.volume.create[i].userId = String(user.id)\n    }\n\n    const prArr = prArray(volumeArray, exerciseList, user)\n\n    for (let i = 0; i < exerciseList.length; i++) {\n      console.log('below')\n      console.log(prArr[i].exerciseId)\n      let goalWeight\n      let currentWeight\n      let goalId\n      goals.forEach(({ exerciseId, weight, reps }, x) => {\n        if (exerciseId === prArr[i].exerciseId) {\n          console.log(goals[x])\n          goalWeight = OneRmEstimate(goals[x].weight, goals[x].reps)\n          currentWeight = OneRmEstimate(prArr[i].weight, prArr[i].reps)\n          console.log([goalWeight, currentWeight])\n          goalId = goals[x].id\n        }\n      })\n      if (goalWeight < currentWeight) {\n        let goal = await db.goals.update({\n          where: {\n            id: goalId,\n          },\n          data: {\n            achieved: true,\n            achievementDate: date.toISOString(),\n          },\n        })\n      }\n      let pr = await db.pr.create({\n        data: prArr[i],\n      })\n    }\n\n    const workout = await db.workout.create({\n      data: {\n        userId: user.id,\n        date: date,\n        ...volume,\n      },\n      include: {\n        volume: true,\n      },\n    })\n\n    return redirect(`/dashboard`)\n  } else if (form.get('_method') === 'exercise') {\n    const title = form.get('title')\n\n    const fields = { title }\n\n    const fieldErrors = {\n      title: validateTitle(title),\n    }\n\n    if (Object.values(fieldErrors).some(Boolean)) {\n      console.log(fieldErrors)\n      return badRequest({ fieldErrors, fields })\n    }\n\n    const exercise = await db.exercise.create({\n      data: { ...fields, userId: user.id },\n    })\n\n    return null\n  }\n  return redirect(`/dashboard`)\n}\n\nexport default function newWorkout() {\n  const actionData = useActionData()\n\n  const [volumeArray, setCount] = useState([])\n  let [count, setPage] = useState(0)\n\n  const updatePageState = (state) => {\n    setPage(state)\n  }\n\n  const data = useLoaderData()\n  const exercises = data.exercises\n  let userDate = data.user.createdAt\n  let split = userDate.split('')\n  let arr = []\n  for (let i = 0; i < 10; i++) {\n    arr.push(split[i])\n  }\n  const userJoinDate = arr.join('')\n  const current = new Date()\n  const day = current.getDate()\n  let date\n  day < 10\n    ? (date = `${current.getFullYear()}-0${\n        current.getMonth() + 1\n      }-0${current.getDate()}`)\n    : (date = `${current.getFullYear()}-0${\n        current.getMonth() + 1\n      }-0${current.getDate()}`)\n\n  return (\n    <div className=\"\">\n      <Navbar data={['New Workout', 'workouts', 'Back']} />\n      <Form method=\"post\">\n        <input type=\"hidden\" name=\"_method\" value=\"workout\" />\n        <div className=\"relative z-0 w-full mb-6 mt-5 group\">\n          <input\n            type=\"date\"\n            name=\"date\"\n            id=\"date\"\n            className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n            placeholder=\" \"\n            required\n            defaultValue={date}\n            min={userJoinDate}\n            max={date}\n          />\n          <label\n            for=\"date\"\n            className=\"peer-focus:font-medium absolute mb-2 font-bold text-gray-500 text-lg dark:text-white duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6 text-left\"\n          >\n            Date of workout\n          </label>\n        </div>\n        <div>\n          <p className=\"font-bold underline underline-offset-2\">\n            Working sets:\n          </p>\n        </div>\n        <div className=\"bg-slate-800 py-1 px-3 my-2\">\n          <div className=\"relative z-0 w-full mb-6 group\">\n            <select\n              id=\"exercise\"\n              name=\"exercise-1\"\n              // defaultValue={'Pick an exercise'}\n              placeholder={'Pick an exercise'}\n              className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n            >\n              <option disabled selected>\n                Exercise #1\n              </option>\n              {exercises.map((exercise) => (\n                <option key={exercise.id} value={exercise.id}>\n                  {exercise.title}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div>\n            <div className=\"relative z-0 w-full mb-6 group\">\n              <input\n                type=\"number\"\n                name=\"weight-1\"\n                id=\"weight\"\n                className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n                placeholder=\" \"\n                required\n              />\n              <label\n                for=\"weight\"\n                className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-white duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\n              >\n                Weight\n              </label>\n            </div>\n            <div className=\"relative z-0 w-full mb-10 group\">\n              <input\n                type=\"number\"\n                name=\"reps-1\"\n                id=\"reps\"\n                className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n                placeholder=\" \"\n                required\n              />\n              <label\n                for=\"reps\"\n                className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-white duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\n              >\n                Reps\n              </label>\n            </div>\n            <div className=\"relative z-0 w-full mb-6 group\">\n              <input\n                type=\"number\"\n                name=\"sets-1\"\n                id=\"sets\"\n                className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n                placeholder=\" \"\n                required\n              />\n              <label\n                for=\"sets\"\n                className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-white duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\n              >\n                Sets\n              </label>\n            </div>\n          </div>\n        </div>\n        {volumeArray.map((i) => {\n          return (\n            <NewWorkoutForm\n              key={i}\n              exercises={exercises}\n              val={volumeArray[i]}\n            />\n          )\n        })}\n        <div className=\"fixed bottom-0 flex justify-center flex-col items-center w-full left-0 py-3 bg-dark min-h-auto\">\n          <div className=\"flex w-full justify-center items-center rounded-md shadow-sm\">\n            <a\n              onClick={() =>\n                setCount((volumeArray) => [...volumeArray, volumeArray.length])\n              }\n              aria-current=\"page\"\n              class=\"py-2 px-4 text-sm font-medium text-blue-700 bg-white rounded-l-lg border border-gray-200 hover:bg-gray-100 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-700 dark:border-gray-600 dark:text-white dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-blue-500 dark:focus:text-white\"\n            >\n              New block\n            </a>\n            <button\n              type=\"submit\"\n              class=\"py-2 px-4 text-sm font-medium text-gray-900 bg-white border-t border-b border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-blue-700 dark:border-gray-600 dark:text-white dark:hover:text-white dark:hover:bg-blue-700 dark:focus:ring-blue-500 dark:focus:text-white\"\n            >\n              Save\n            </button>\n            <a\n              onClick={() => setPage((count = 1))}\n              href=\"#\"\n              class=\"py-2 px-4 text-sm font-medium text-gray-900 bg-white rounded-r-md border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-700 dark:border-gray-600 dark:text-white dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-blue-500 dark:focus:text-white\"\n            >\n              New exercise\n            </a>\n          </div>\n          {count === 1 ? (\n            <div className=\"page-content mt-3 pb-4\">\n              <form method=\"POST\">\n                <input type=\"hidden\" name=\"_method\" value=\"exercise\" />\n                <div className=\"relative z-0 w-full mb-10 group\">\n                  <input\n                    type=\"text\"\n                    name={`title`}\n                    id=\"title\"\n                    className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n                    placeholder=\" \"\n                    required\n                  />\n                  <label\n                    for=\"title\"\n                    className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-white duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\n                  >\n                    Exercise name\n                  </label>\n                </div>\n                <div className=\"\">\n                  <p>\n                    {actionData?.fieldErrors?.title &&\n                      actionData?.fieldErrors?.title}\n                  </p>\n                </div>\n                <div className=\"flex w-full justify-center items-center rounded-md shadow-sm\">\n                  <button\n                    type=\"submit\"\n                    // onClick={() => props.onClick()}\n                    aria-current=\"page\"\n                    class=\"py-2 px-4 text-sm font-medium text-gray-900 bg-white rounded-l-lg border-t border-b border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-blue-700 dark:border-gray-600 dark:text-white dark:hover:text-white dark:hover:bg-blue-700 dark:focus:ring-blue-500 dark:focus:text-white\"\n                  >\n                    Save\n                  </button>\n                  <a\n                    onClick={() => setPage((count = 0))}\n                    href=\"#\"\n                    class=\"py-2 px-4 text-sm font-medium text-gray-900 bg-white rounded-r-md border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-700 dark:border-gray-600 dark:text-white dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-blue-500 dark:focus:text-white\"\n                  >\n                    Cancel\n                  </a>\n                </div>\n              </form>\n            </div>\n          ) : null}\n        </div>\n      </Form>\n    </div>\n  )\n}\n", "export default function NewWorkoutForm({ exercises, val }) {\n  val = val + 2\n  return (\n    <div className=\"bg-slate-800 py-1 px-3 my-4\">\n      <div className=\"relative z-0 w-full mb-6 group\">\n        <select\n          id=\"exercise\"\n          name=\"exercise-1\"\n          // defaultValue={'Pick an exercise'}\n          placeholder={'Pick an exercise'}\n          className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n        >\n          <option disabled selected>\n            Exercise #{val}\n          </option>\n          {exercises.map((exercise) => (\n            <option key={exercise.id} value={exercise.id}>\n              {exercise.title}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className=\"relative z-0 w-full mb-6 group\">\n        <input\n          type=\"number\"\n          name={`weight-${val}`}\n          id=\"weight\"\n          className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n          placeholder=\" \"\n          required\n        />\n        <label\n          for=\"weight\"\n          className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-white duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\n        >\n          Weight\n        </label>\n      </div>\n      <div className=\"relative z-0 w-full mb-10 group\">\n        <input\n          type=\"number\"\n          name={`reps-${val}`}\n          id=\"reps\"\n          className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n          placeholder=\" \"\n          required\n        />\n        <label\n          for=\"reps\"\n          className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-white duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\n        >\n          Reps\n        </label>\n      </div>\n      <div className=\"relative z-0 w-full mb-6 group\">\n        <input\n          type=\"number\"\n          name={`sets-${val}`}\n          id=\"sets\"\n          className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n          placeholder=\" \"\n          required\n        />\n        <label\n          for=\"sets\"\n          className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-white duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\n        >\n          Sets\n        </label>\n      </div>\n    </div>\n  )\n}\n", "import { Link, useLoaderData } from '@remix-run/react'\nimport { db } from '~/utils/db.server'\nimport { getUser } from '~/utils/session.server'\nimport Navbar from '~/components/ui/PagesNavbar'\nimport { dateStr } from '../../../components/MyGoals'\nimport PrNavbar from '../../../components/ui/PrNav'\nimport { NestedError } from '../../../components/error handling/NestedError'\n\nexport const loader = async ({ request }) => {\n  const user = await getUser(request)\n  const prs = await db.pr.findMany({\n    where: { userId: user.id },\n    include: {\n      Exercise: {\n        select: {\n          title: true,\n          id: true,\n        },\n      },\n    },\n    orderBy: {\n      exerciseId: 'asc',\n    },\n  })\n  const exercises = await db.exercise.findMany({\n    where: { userId: user.id },\n  })\n  const data = { user, prs, exercises }\n\n  return data\n}\n\nexport function ErrorBoundary(error) {\n  console.error(error)\n  return <NestedError />\n}\nexport const OneRmEstimate = (weight, reps) => {\n  const unRounded1RM = weight * reps * 0.0333 + weight\n  return reps === 1 ? weight : Math.round(unRounded1RM / 2.5, 1) * 2.5\n}\n\nexport default function index() {\n  const data = useLoaderData()\n  const prData = data.prs\n  let prTempArray = []\n\n  let prs = prData.filter((pr) => pr['Exercise'] != null)\n  prs.map((pr, i) => {\n    prTempArray.push(pr['Exercise'].title + ' ID: ' + pr['Exercise'].id)\n  })\n\n  let prArray = [...new Set(prTempArray)]\n\n  for (let i = 0; i < prArray.length; i++) {\n    let name = prArray[i]\n    prArray[i] = [name]\n  }\n\n  prs.map((pr) => {\n    for (let i = 0; i < prArray.length; i++) {\n      let strSplit = prArray[i][0].split(' ')\n      let titleArr\n      let title\n      if (strSplit.length > 3) {\n        titleArr = strSplit.slice(0, strSplit.length - 2)\n        title = titleArr.join(' ')\n      } else {\n        title = strSplit[0]\n      }\n\n      if (pr['Exercise'].title === title) {\n        let obj = {\n          date: pr.createdAt,\n          weight: pr.weight,\n          reps: pr.reps,\n          oneRm: OneRmEstimate(pr.weight, pr.reps),\n        }\n        prArray[i].push(obj)\n      }\n    }\n  })\n  //\n\n  return (\n    <div>\n      <div className=\"mt-2\">\n      <Navbar data={['My Personal Records', 'prs/new', 'New PR']} />\n      </div>\n\n      {prArray.map((pr) => {\n        return (\n          <>\n            <PrNavbar data={[pr[0]]} />\n            <div className=\"overflow-scroll h-auto max-h-1/2 pr-table__div\">\n              <table className=\"w-full flex flex-row flex-no-wrap rounded-lg sm:shadow-lg my-5\">\n                <thead className=\"text-white\">\n                  <tr className=\"bg-neutral-500\t3 flex flex-row flex-no wrap sm:table-row sm:rounded-none mb-2 sm:mb-0 justify-between\">\n                    <th className=\"p-3 text-left\">Date</th>\n                    <th className=\"p-3 text-left\">Weight</th>\n                    <th className=\"p-3 text-left\">Reps</th>\n                    <th className=\"p-3 text-left\">Estimated 1rm</th>\n                  </tr>\n                </thead>\n                <tbody className=\"flex-1 sm:flex-none\">\n                  {pr.map((individualPrs) => {\n                    return individualPrs.weight === undefined ? null : (\n                      <tr className=\"flex flex-row flex-no wrap sm:table-row sm:mb-0 hover:bg-neutral-500 sm:p-3 w-full px-2 justify-between hover:text-white\">\n                        <td className=\"w-1/4 sm:w-auto md:p-3\">\n                          {individualPrs.date === undefined\n                            ? null\n                            : dateStr(new String(individualPrs.date))}\n                        </td>\n                        <td className=\"w-1/4 sm:w-auto   md:p-3\">{individualPrs.weight}kg</td>\n                        <td className=\"w-1/4 sm:w-auto  md:p-3\">{individualPrs.reps}</td>\n                        <td className=\"w-1/4 sm:w-auto md:p-3\">{individualPrs.oneRm}kg</td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </>\n        )\n      })}\n    </div>\n  )\n}\n", "import { useLoaderData } from '@remix-run/react'\nimport MyGoals from '~/components/MyGoals'\nimport { db } from '~/utils/db.server'\nimport { getUser } from '~/utils/session.server'\nimport NewGoal from './new'\nimport Navbar from '../../../components/ui/PagesNavbar'\nimport GoalChart from '../../../components/ui/GoalChart'\nimport { OneRmEstimate } from '../prs'\nimport ProgressBar from '../../../components/ui/ProgressBar'\nimport { NestedError } from '../../../components/error handling/NestedError'\n\nexport const loader = async ({ request }) => {\n  const user = await getUser(request)\n  const goals = await db.goals.findMany({\n    where: { userId: user.id },\n    include: {\n      Exercise: {\n        include: {\n          title: true,\n        },\n        include: {\n          Pr: {\n            select: {\n              weight: true,\n              reps: true,\n            },\n            orderBy: {\n              createdAt: 'asc',\n            },\n            take: 1,\n          },\n        },\n      },\n    },\n  })\n\n  const exercises = await db.exercise.findMany({\n    where: { userId: user.id },\n  })\n\n  const data = { user, goals, exercises }\n\n  return data\n}\n\nexport function ErrorBoundary(error) {\n  console.error(error)\n  return <NestedError />\n}\n\nexport default function index() {\n  const data = useLoaderData()\n  const user = data.user\n  const goals = data.goals\n  const exercises = data.exercises\n  const newGoalData = [user, exercises]\n\n  let achievedArr = []\n  for (let i = 0; i < goals.length; i++) {\n    if (goals[i].achieved === true) {\n      achievedArr.push(i)\n    }\n  }\n  const notAchieved = [goals, false]\n  const achieved = [goals, true]\n  let goalData = []\n  goals.map((goal) => {\n    if (goal.achieved === false) {\n      let weight = goal.Exercise.Pr[0].weight\n      let reps = goal.Exercise.Pr[0].reps\n      let obj = {\n        name: goal.Exercise.title,\n        goal: goal.weight,\n        current: OneRmEstimate(weight, reps),\n        goalData: [goal],\n      }\n      goalData.push(obj)\n    } else {\n      null\n    }\n  })\n\n  return (\n    <div className=\"\">\n      <div className=\"\">\n        <Navbar data={['My Goals', 'goals/new', 'New Goal']} />\n        {goalData.map((data) => {\n          let goal = data.goal\n          let current = data.current\n          let name = data.name\n          return (\n            <>\n              <MyGoals data={[data.goalData, false]} />\n              <ProgressBar data={[goal, current, name]} />\n            </>\n          )\n        })}\n        {achievedArr.length != 0 ? (\n          <div className=\"mt-4\">\n            <h2 className=\"mb-2 font-bold underline-offset-1 underline\">\n              Goals I've accomplished so far:\n            </h2>\n            <MyGoals data={achieved} />\n          </div>\n        ) : null}\n      </div>\n      {/* <div className=\"goal-pie-chart__wrapper\"></div> */}\n    </div>\n  )\n}\n", "export default function ProgressBar(data) {\n  const name = data.data[2]\n  const goal = data.data[0]\n  const current = data.data[1]\n  const percentage = current / goal\n  const currentWidth = 350 * percentage\n  return (\n    <div className=\"progress-bar__div mt-2\">\n      <div className='progress-bar__goal'>\n        <p>{goal}kg</p>\n        <div\n          className='progress-bar__current'\n          style={{ width: currentWidth + \"px\" }}\n        >\n          <p>{current}kg</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n", "import { redirect } from '@remix-run/node'\nimport { Form, useActionData, useLoaderData } from '@remix-run/react'\nimport { getUser } from '~/utils/session.server'\nimport { db } from '~/utils/db.server'\nimport Navbar from '../../../components/ui/PagesNavbar'\n\nexport const loader = async ({ request }) => {\n  const user = await getUser(request)\n  const exercises = await db.exercise.findMany({\n    where: { userId: user.id },\n  })\n  return { exercises, user }\n}\n\nexport const action = async ({ request }) => {\n  const form = await request.formData()\n  const weightStr = form.get('weight')\n  const repsStr = form.get('reps')\n  const id = form.get('exercise')\n  const weight = parseInt(weightStr)\n  const user = await getUser(request)\n  let reps = parseInt(repsStr)\n  const achievementGoalDateStr = form.get('date')\n  const achievementGoalDate = new Date(achievementGoalDateStr)\n\n  if (repsStr === null) {\n    reps = 1\n  }\n\n  const fields = { weight, reps, achievementGoalDate }\n\n  const goal = await db.goals.create({\n    data: { ...fields, userId: user.id, exerciseId: id },\n  })\n\n  return redirect(`/dashboard`)\n}\n\nexport default function newPr() {\n  const data = useLoaderData()\n  const actionData = useActionData()\n\n  let userDate = data.user.createdAt\n  let split = userDate.split('')\n  let arr = []\n  for (let i = 0; i < 10; i++) {\n    arr.push(split[i])\n  }\n  const userJoinDate = arr.join('')\n  const current = new Date()\n  const day = current.getDate()\n  let date\n  day < 10\n    ? (date = `${current.getFullYear()}-0${\n        current.getMonth() + 1\n      }-0${current.getDate()}`)\n    : (date = `${current.getFullYear()}-0${\n        current.getMonth() + 1\n      }-0${current.getDate()}`)\n\n  return (\n    <div className=''>\n      <Navbar data={['New Goal', 'goals', 'Back']} />\n      <div className=\"\">\n        <Form method=\"POST\" className='mt-4'>\n          <div className=\"relative z-0 w-full mb-6 group\">\n            <select\n              id=\"exercise\"\n              name=\"exercise\"\n              // defaultValue={'Pick an exercise'}\n              placeholder={'Pick an exercise'}\n              className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n            >\n              <option disabled selected>\n                Pick an exercise\n              </option>\n              {data.exercises.map((exercise) => (\n                <option key={exercise.id} value={exercise.id}>\n                  {exercise.title}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"relative z-0 w-full mb-6 group\">\n            <input\n              type=\"number\"\n              name=\"weight\"\n              id=\"weight\"\n              className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n              placeholder=\" \"\n              required\n            />\n            <label\n              for=\"weight\"\n              className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-white duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\n            >\n              Weight\n            </label>\n          </div>\n          <div className=\"relative z-0 w-full mb-10 group\">\n            <input\n              type=\"number\"\n              name=\"reps\"\n              id=\"reps\"\n              className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n              placeholder=\" \"\n              required\n            />\n            <label\n              for=\"reps\"\n              className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-white duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\n            >\n              Reps\n            </label>\n          </div>\n          <div className=\"relative z-0 w-full mb-6 mt-2 group\">\n            <input\n              type=\"date\"\n              name=\"date\"\n              id=\"date\"\n              className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n              placeholder=\" \"\n              required\n              defaultValue={date}\n              min={userJoinDate}\n              max={date}\n            />\n            <label\n              for=\"date\"\n              className=\"peer-focus:font-medium absolute mb-2 text-gray-500 text-lg dark:text-white duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6 text-left\"\n            >\n              Date\n            </label>\n          </div>\n          <button\n            type=\"submit\"\n            className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-lg w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n          >\n            Submit\n          </button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n", "import { Link, useLoaderData } from '@remix-run/react'\nimport { db } from '~/utils/db.server'\nimport { getUser } from '~/utils/session.server'\nimport Navbar from '~/components/ui/PagesNavbar'\nimport { dateStr } from '../../../components/MyGoals'\nimport PrNavbar from '../../../components/ui/PrNav'\nimport { NestedError } from '../../../components/error handling/NestedError'\n\nexport const loader = async ({ request }) => {\n  const user = await getUser(request)\n  const prs = await db.pr.findMany({\n    where: { userId: user.id },\n    include: {\n      Exercise: {\n        select: {\n          title: true,\n          id: true,\n        },\n      },\n    },\n    orderBy: {\n      exerciseId: 'asc',\n    },\n  })\n  const exercises = await db.exercise.findMany({\n    where: { userId: user.id },\n  })\n  const data = { user, prs, exercises }\n\n  return data\n}\n\nexport function ErrorBoundary(error) {\n  console.error(error)\n  return <NestedError />\n}\nexport const OneRmEstimate = (weight, reps) => {\n  const unRounded1RM = weight * reps * 0.0333 + weight\n  return reps === 1 ? weight : Math.round(unRounded1RM / 2.5, 1) * 2.5\n}\n\nexport default function index() {\n  const data = useLoaderData()\n  const prData = data.prs\n  let prTempArray = []\n\n  let prs = prData.filter((pr) => pr['Exercise'] != null)\n  prs.map((pr, i) => {\n    prTempArray.push(pr['Exercise'].title + ' ID: ' + pr['Exercise'].id)\n  })\n\n  let prArray = [...new Set(prTempArray)]\n\n  for (let i = 0; i < prArray.length; i++) {\n    let name = prArray[i]\n    prArray[i] = [name]\n  }\n\n  prs.map((pr) => {\n    for (let i = 0; i < prArray.length; i++) {\n      let strSplit = prArray[i][0].split(' ')\n      let titleArr\n      let title\n      if (strSplit.length > 3) {\n        titleArr = strSplit.slice(0, strSplit.length - 2)\n        title = titleArr.join(' ')\n      } else {\n        title = strSplit[0]\n      }\n\n      if (pr['Exercise'].title === title) {\n        let obj = {\n          date: pr.createdAt,\n          weight: pr.weight,\n          reps: pr.reps,\n          oneRm: OneRmEstimate(pr.weight, pr.reps),\n        }\n        prArray[i].push(obj)\n      }\n    }\n  })\n  //\n\n  return (\n    <div>\n      <div className=\"mt-2\">\n      <Navbar data={['My Personal Records', 'prs/new', 'New PR']} />\n      </div>\n\n      {prArray.map((pr) => {\n        return (\n          <>\n            <PrNavbar data={[pr[0]]} />\n            <div className=\"overflow-scroll h-auto max-h-1/2 pr-table__div\">\n              <table className=\"w-full flex flex-row flex-no-wrap rounded-lg sm:shadow-lg my-5\">\n                <thead className=\"text-white\">\n                  <tr className=\"bg-neutral-500\t3 flex flex-row flex-no wrap sm:table-row sm:rounded-none mb-2 sm:mb-0 justify-between\">\n                    <th className=\"p-3 text-left\">Date</th>\n                    <th className=\"p-3 text-left\">Weight</th>\n                    <th className=\"p-3 text-left\">Reps</th>\n                    <th className=\"p-3 text-left\">Estimated 1rm</th>\n                  </tr>\n                </thead>\n                <tbody className=\"flex-1 sm:flex-none\">\n                  {pr.map((individualPrs) => {\n                    return individualPrs.weight === undefined ? null : (\n                      <tr className=\"flex flex-row flex-no wrap sm:table-row sm:mb-0 hover:bg-neutral-500 sm:p-3 w-full px-2 justify-between hover:text-white\">\n                        <td className=\"w-1/4 sm:w-auto md:p-3\">\n                          {individualPrs.date === undefined\n                            ? null\n                            : dateStr(new String(individualPrs.date))}\n                        </td>\n                        <td className=\"w-1/4 sm:w-auto   md:p-3\">{individualPrs.weight}kg</td>\n                        <td className=\"w-1/4 sm:w-auto  md:p-3\">{individualPrs.reps}</td>\n                        <td className=\"w-1/4 sm:w-auto md:p-3\">{individualPrs.oneRm}kg</td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </>\n        )\n      })}\n    </div>\n  )\n}\n", "import { redirect } from '@remix-run/node'\nimport { Form, useActionData, useLoaderData } from '@remix-run/react'\nimport { getUser } from '~/utils/session.server'\nimport { db } from '~/utils/db.server'\nimport Navbar from '~/components/ui/PagesNavbar'\n\nfunction validateweight(weight) {\n  if (typeof weight !== 'number') {\n    return 'weight should be a number'\n  }\n}\n\nfunction validatereps(reps) {\n  if (typeof reps !== 'number') {\n    return 'reps should be a number'\n  }\n}\n\nfunction badRequest(data) {\n  return json(data, { status: 400 })\n}\n\nexport const loader = async ({ request }) => {\n  const user = await getUser(request)\n  const exercises = await db.exercise.findMany({\n    where: { userId: user.id },\n  })\n\n  return [exercises, user]\n}\n\nfunction oneRmCalc(weight, reps) {\n  if (reps === 1) {\n    return weight\n  } else return Math.floor(weight * reps * 0.0333 + weight, 2.5)\n}\n\nexport function goalCalc(weight, reps, goalweight, goalreps) {\n  const preplinsTable = {\n    100.0: 1,\n    95.5: 2,\n    92.2: 3,\n    89.2: 4,\n    86.3: 5,\n    83.7: 6,\n    81.1: 7,\n    78.6: 8,\n    76.2: 9,\n    73.9: 10,\n    70.7: 11,\n    68.0: 12,\n  }\n  const onerm = oneRmCalc(weight, reps)\n  const entries = Object.entries(preplinsTable)\n  let percentageStr\n  for (let i = 0; i < entries.length; i++) {\n    if (goalreps < entries[i][1]) {\n      percentageStr = entries[i][0]\n    }\n  }\n  let percentage = parseInt(percentageStr) / 100\n  let current = onerm * percentage\n  let goal = oneRmCalc(goalweight, goalreps) * percentage\n  let progress = (current / goal) * 100\n  let remainingPercent = 100 - progress\n  let remainingKg = goal - current\n  if (current >= goal) {\n    return [true, progress]\n  } else {\n    return [false, progress, remainingPercent, remainingKg]\n  }\n}\n\nexport const action = async ({ request, params }) => {\n  const form = await request.formData()\n  const user = await getUser(request)\n  const id = form.get('exercise')\n  const weightStr = form.get('weight')\n  const repsStr = form.get('reps')\n  const weight = parseInt(weightStr)\n  const reps = parseInt(repsStr)\n  const dateStr = form.get('date')\n  const date = new Date(dateStr).toISOString()\n  const goals = await db.goals.findMany({\n    where: { userId: user.id, exerciseId: id },\n  })\n  const goalweight = goals[0].weight\n  const goalreps = goals[0].reps\n  const goalId = goals[0].id\n\n  const fields = { weight, reps }\n\n  const fieldErrors = {\n    weight: validateweight(weight),\n    reps: validatereps(reps),\n  }\n\n  if (Object.values(fieldErrors).some(Boolean)) {\n    console.log(fieldErrors)\n    return badRequest({ fieldErrors, fields })\n  }\n\n  const results = goalCalc(weight, reps, goalweight, goalreps)\n\n  if (results[0] === true) {\n    await db.goals.update({\n      where: { id : goalId },\n      data: {\n       achieved: true,\n       achievementDate: date\n      }\n    });\n  }\n\n  const pr = await db.pr.create({\n    data: { ...fields, userId: user.id, exerciseId: id, date: date },\n  })\n\n  return redirect(`../dashboard/exercises/${id}`)\n}\n\n\nexport const findDate = (user) => {\n\n  let userDate = user.createdAt\n  let split = userDate.split(\"\")\n  let arr = []\n  for (let i = 0; i < 10; i++) {\n    arr.push(split[i])\n  }\n  const userJoinDate = arr.join(\"\")\n  const current = new Date()\n  const day = current.getDate()\n  let date\n  day < 10\n    ? (date = `${current.getFullYear()}-0${\n        current.getMonth() + 1\n      }-0${current.getDate()}`)\n    : (date = `${current.getFullYear()}-0${\n        current.getMonth() + 1\n      }-0${current.getDate()}`)\n\n      const data = [userJoinDate, date]\n      return data\n}\n\nexport default function newPr() {\n  const data = useLoaderData()\n  const exercises = data[0]\n  const user = data[1]\n\n  const actionData = useActionData()\n\n\nconst dateData = findDate(user)\nconst userJoinDate = dateData[0]\nconst date = dateData[1]\n\n  return (\n    <div className=\"\">\n      <Navbar data={['New PR', 'prs', 'Back']} />\n      <div className=\"\">\n        <Form method=\"POST\" className='mt-4'>\n          <div className=\"relative z-0 w-full mb-6 group\">\n            <select\n              id=\"exercise\"\n              name=\"exercise\"\n              // defaultValue={'Pick an exercise'}\n              placeholder={'Pick an exercise'}\n              className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n            >\n              <option disabled selected>\n                Pick an exercise\n              </option>\n              {exercises.map((exercise) => (\n              <option key={exercise.id} value={exercise.id}>\n                {exercise.title}\n              </option>\n            ))}\n            </select>\n          </div>\n          <div className=\"relative z-0 w-full mb-6 group\">\n            <input\n              type=\"number\"\n              name=\"weight\"\n              id=\"weight\"\n              className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n              placeholder=\" \"\n              required\n            />\n            <label\n              for=\"weight\"\n              className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-white duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\n            >\n              Weight\n            </label>\n          </div>\n          <div className=\"relative z-0 w-full mb-10 group\">\n            <input\n              type=\"number\"\n              name=\"reps\"\n              id=\"reps\"\n              className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n              placeholder=\" \"\n              required\n            />\n            <label\n              for=\"reps\"\n              className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-white duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\n            >\n              Reps\n            </label>\n          </div>\n          <div className=\"relative z-0 w-full mb-6 mt-2 group\">\n            <input\n              type=\"date\"\n              name=\"date\"\n              id=\"date\"\n              className=\"block py-2.5 px-0 w-full text-sm text-white bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n              placeholder=\" \"\n              required\n              defaultValue={date}\n              min={userJoinDate}\n              max={date}\n            />\n            <label\n              for=\"date\"\n              className=\"peer-focus:font-medium absolute mb-2 text-gray-500 text-lg dark:text-white duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6 text-left\"\n            >\n              Date\n            </label>\n          </div>\n          <button\n            type=\"submit\"\n            className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-lg w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n          >\n            Submit\n          </button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n", "import { Link, useLoaderData } from '@remix-run/react'\nimport { db } from '~/utils/db.server'\nimport MyExercise from '../../components/MyExercises'\n\nimport { getUser } from '~/utils/session.server'\nimport MyWorkouts from '~/components/MyWorkouts'\nimport MyGoals from '~/components/MyGoals'\n\nimport Navbar from '~/components/ui/DashboardContentNavbar'\nimport { NestedError } from '../../components/error handling/NestedError'\n\nexport function getSunday() {\n  let sunday = new Date(today.setDate(today.getDate() - today.getDay() + 1))\n  return sunday\n}\n\nexport function getEndOfWeek(d, week) {\n  d = new Date(d)\n  let day = d.getDay(),\n    diff = d.getDate() - day + (day == 0 ? -6 : 1) + week\n  return new Date(d.setDate(diff))\n}\n\nexport const loader = async ({ request }) => {\n  let now = new Date()\n  let today = new Date(now.getFullYear(), now.getMonth(), now.getDate())\n  let lastSunday = new Date(today.setDate(today.getDate() - today.getDay() + 1))\n  let thisSunday = new Date(today.setDate(today.getDate() - today.getDay() + 8))\n\n  const user = await getUser(request)\n\n  const exercises = {\n    exercises: await db.exercise.findMany({\n      where: {\n        userId: {\n          equals: `${user.id}`,\n        },\n      },\n      // orderBy: { createdAt: 'desc' },\n      include: {\n        Pr: {\n          select: {\n            weight: true,\n            reps: true,\n          },\n          orderBy: { weight: 'desc' },\n        },\n      },\n      orderBy: { updatedAt: 'desc' },\n      take: 4,\n    }),\n  }\n  const prs = {\n    prs: await db.pr.findMany({\n      where: {\n        userId: {\n          equals: `${user.id}`,\n        },\n      },\n      orderBy: { createdAt: 'desc' },\n    }),\n  }\n  const goals = await db.goals.findMany({\n    where: { userId: user.id },\n    include: {\n      Exercise: {\n        select: {\n          title: true,\n        },\n      },\n    },\n  })\n\n  const workouts = {\n    workouts: await db.workout.findMany({\n      where: {\n        userId: {\n          equals: `${user.id}`,\n        },\n        date: {\n          gt: lastSunday,\n          lte: thisSunday,\n        },\n      },\n      include: {\n        volume: {\n          select: {\n            date: true,\n            exerciseId: true,\n            weight: true,\n            reps: true,\n            sets: true,\n            workoutId: true,\n            id: true,\n            Exercise: {\n              select: {\n                id: true,\n                title: true,\n              },\n            },\n          },\n        },\n      },\n      orderBy: { date: 'desc' },\n    }),\n  }\n  const data = { exercises, prs, workouts, goals, user }\n\n  return data\n}\n\nexport function ErrorBoundary(error) {\n  console.error(error)\n  return <NestedError />\n}\n\nfunction ExerciseItems() {\n  const data = useLoaderData()\n  const workoutData = data.workouts['workouts']\n  const notAchieved = [data.goals, false]\n  return (\n    <>\n      <header className={'app-header mb-5'}>\n        <div className={'app-header-navigation'}>\n          <div className={'tabs'}>\n            <h1 className={'h-auto mb-5 font-bold text-2xl'}>\n              Welcome, {data.user.name}!\n            </h1>\n            <p className=\"\">\n              Here's what's happening with your strength progress so far. Well\n              done!\n            </p>\n          </div>\n        </div>\n        <div className={'app-header-mobile mb-3'}>\n          <h1 className={'mb-2 font-bold text-3xl'}>Welcome, {data.user.name}!</h1>\n          <p>\n            Here's what's happening with your strength progress so far. Well\n            done!\n          </p>\n        </div>\n      </header>\n      <div className=\"h-auto mb-10\">\n        <Navbar data={['My Goals', 'goals/new', 'goals']} />\n        <MyGoals data={notAchieved} />\n      </div>\n      <div className={'h-auto mb-10 w-full'}>\n        <Navbar data={['My Exercises', 'exercises/new', 'exercises']} />\n        <MyExercise exercises={data.exercises['exercises']} />\n      </div>\n      <div className=\"h-auto mb-10 flex justify-center flex-col\">\n        <Navbar data={['My Workouts This Week', 'workouts/new', 'workouts']} />\n        <MyWorkouts data={workoutData} />\n      </div>\n    </>\n  )\n}\n\nexport default ExerciseItems\n", "import { json, redirect } from \"@remix-run/node\";\nimport { Link, useActionData } from \"@remix-run/react\";\nimport { db } from '~/utils/db.server'\nimport { register, createUserSession } from '~/utils/session.server'\n\nimport cssSheet from '~/styles/app.css'\nimport homepageCssSheet from '~/styles/homepage.css'\n\n\nexport const links = () => {\n  return [\n    {\n      rel: 'stylesheet',\n      href: cssSheet,\n    },\n    {\n      rel: 'stylesheet',\n      href: homepageCssSheet,\n    },\n    {\n      rel: \"stylesheet\",\n      href: 'https://fonts.googleapis.com/css?family=Noto Serif'\n    }\n\n  ]\n}\n\n\nfunction badRequest(data) {\n  return json(data, { status: 400 })\n}\n\nfunction validateEmail(email) {\n  if (typeof email !== 'string' || email.length < 6) {\n    return 'Email must be at least 7 characters'\n  } else if (typeof email !== 'string' || email.search(/[@]/) == -1) {\n    return 'Password must contain atleast 1 @ character'\n  } else if (typeof email !== 'string' || email.search(/[.]/) == -1) {\n    return 'Password must contain atleast 1 .'\n  }\n}\nfunction validatePassword(password) {\n  if (typeof password !== 'string' || password.length < 6) {\n    return 'Password must be at least 6 characters'\n  } else if (typeof password !== 'string' || password.search(/[0-9]/) == -1) {\n    return 'Password must contain atleast 1 number'\n  } else if (typeof password !== 'string' || password.search(/[A-Z]/) == -1) {\n    return 'Password must contain atleast 1 upper case letter'\n  }\n}\n\nexport const action = async ({ request }) => {\n  const form = await request.formData()\n  const loginType = form.get('loginType')\n  const email = form.get('email')\n  const password = form.get('password')\n  const name = form.get('name')\n  \n  const fields = { loginType, email, name, password }\n\n  const fieldErrors = {\n    email: validateEmail(email),\n    password: validatePassword(password),\n  }\n\n  if (Object.values(fieldErrors).some(Boolean)) {\n    return badRequest({ fieldErrors, fields })\n  }\n\n  const emailExists = await db.user.findFirst({\n    where: {\n      email,\n    },\n  })\n  if (emailExists) {\n    return badRequest({\n      fields,\n      fieldErrors: {email: `the email address: ${email} already exists.`},\n    })\n  }\n\n  const user = await register({ email, password, name })\n  if (!user) {\n    return badRequest({\n      fields,\n      formError: 'Something went wrong',\n    })\n  }\n\n  return createUserSession(user.id, '/')\n}\n\nfunction Login() {\n  const actionData = useActionData()\n\n  return (\n    <div className=\"auth-wrapper\">\n      <div class=\"flex items-center w-full max-w-md px-6 mx-auto lg:w-2/6\">\n        <div class=\"flex-1\">\n          <div class=\"text-center\">\n            <p class=\"mt-3 text-gray-500 dark:text-black\">\n             Sign up to start tracking your strength today\n            </p>\n          </div>\n          <div class=\"mt-8\">\n            <form method=\"POST\">\n              <div>\n                <label\n                  for=\"name\"\n                  class=\"block mb-2 text-sm text-black dark:text-black\"\n                >\n                  First Name\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  htmlFor=\"name\"\n                  defaultValue={actionData?.fields.name}\n                  placeholder=\"Aphrodite\"\n                  class=\"block w-full px-4 py-2 mt-2 text-black placeholder-black bg-white border border-gray-200 rounded-md dark:placeholder-gray-600 dark:bg-white dark:text-black dark:border-gray-700 focus:border-blue-400 dark:focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40\"\n                />\n                {/* <div className=\"\">\n                  {actionData?.fieldErrors?.email &&\n                    actionData?.fieldErrors?.email}\n                </div> */}\n              </div>\n              <div className=\"mt-6\">\n                <label\n                  for=\"email\"\n                  class=\"block mb-2 text-sm text-black dark:text-black\"\n                >\n                  Email Address\n                </label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  htmlFor=\"email\"\n                  defaultValue={actionData?.fields.email}\n                  placeholder=\"example@example.com\"\n                  class=\"block w-full px-4 py-2 mt-2 text-black placeholder-black bg-white border border-gray-200 rounded-md dark:placeholder-gray-600 dark:bg-white dark:text-black dark:border-gray-700 focus:border-blue-400 dark:focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40\"\n                />\n                <div className=\"\">\n                  {actionData?.fieldErrors?.email &&\n                    actionData?.fieldErrors?.email}\n                </div>\n              </div>\n\n              <div class=\"mt-6\">\n                <div class=\"flex justify-between mb-2\">\n                  <label\n                    for=\"password\"\n                    class=\"text-sm text-black dark:text-black\"\n                  >\n                    Password\n                  </label>\n                  \n                </div>\n\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"Your Password\"\n                  class=\"block w-full px-4 py-2 mt-2 text-black placeholder-black bg-white border border-gray-200 rounded-md dark:placeholder-gray-600 dark:bg-white dark:text-black dark:border-gray-700 focus:border-blue-400 dark:focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40\"\n                />\n                <div className=\"error\">\n                  {actionData?.fieldErrors?.password &&\n                    actionData?.fieldErrors?.password}\n                </div>\n              </div>\n\n              <div class=\"mt-6\">\n                <button class=\"w-full px-4 py-2 tracking-wide text-white transition-colors duration-200 transform bg-blue-500 rounded-md hover:bg-blue-400 focus:outline-none focus:bg-blue-400 focus:ring focus:ring-blue-300 focus:ring-opacity-50\">\n                  Sign in\n                </button>\n              </div>\n            </form>\n\n            <p  class=\"mt-6 text-sm text-center text-gray-400\">\n              Already have an account?{' '}\n              <Link\n                to={'../auth/login'}\n                class=\"text-blue-500 focus:outline-none focus:underline hover:underline\"\n              >\n                Login\n              </Link>\n              .\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n\n\n", "import { redirect } from \"@remix-run/node\";\nimport { logout } from '~/utils/session.server'\n\nexport const action = async ({ request }) => {\n  return logout(request)\n}\n\nexport const loader = async () => {\n  return redirect('/')\n}\n", "import { json, redirect } from '@remix-run/node'\nimport { Link, useActionData } from '@remix-run/react'\nimport { login, register, createUserSession } from '~/utils/session.server'\n\n\nimport cssSheet from '~/styles/app.css'\nimport homepageCssSheet from '~/styles/homepage.css'\n\nexport const links = () => {\n  return [\n    {\n      rel: 'stylesheet',\n      href: cssSheet,\n    },\n    {\n      rel: 'stylesheet',\n      href: homepageCssSheet,\n    },\n    {\n      rel: 'stylesheet',\n      href: 'https://fonts.googleapis.com/css?family=Noto Serif',\n    },\n  ]\n}\n\nfunction badRequest(data) {\n  return json(data, { status: 400 })\n}\n\nfunction validateEmail(email) {\n  if (typeof email !== 'string' || email.length < 3) {\n    return 'email must be at least 3 characters'\n  }\n}\n\nfunction validatePassword(password) {\n  if (typeof password !== 'string' || password.length < 6) {\n    return 'Password must be at least 6 characters'\n  } else if (typeof password !== 'string' || password.search(/[0-9]/) == -1) {\n    return 'Password must contain atleast 1 number'\n  } else if (typeof password !== 'string' || password.search(/[A-Z]/) == -1) {\n    return 'Password must contain atleast 1 upper case letter'\n  }\n}\n\nexport const action = async ({ request }) => {\n  const form = await request.formData()\n  const loginType = form.get('loginType')\n  const email = form.get('email')\n  const password = form.get('password')\n\n  const fields = { loginType, email, password }\n\n  const fieldErrors = {\n    email: validateEmail(email),\n    password: validatePassword(password),\n  }\n\n  if (Object.values(fieldErrors).some(Boolean)) {\n    return badRequest({ fieldErrors, fields })\n  }\n\n  const user = await login({ email, password })\n  if (!user) {\n    return badRequest({\n      fields,\n      fieldErrors: { email: 'Invalid Credentials' },\n    })\n  }\n  return createUserSession(user.id, '/dashboard')\n}\n\nfunction Login() {\n  const actionData = useActionData()\n\n  return (\n    <div className=\"auth-wrapper\">\n      <div class=\"flex items-center w-full max-w-md px-6 mx-auto lg:w-2/6\">\n        <div class=\"flex-1\">\n          <div class=\"text-center\">\n            <p class=\"mt-3 text-gray-500 dark:text-black\">\n              Sign in to access your account\n            </p>\n          </div>\n          <div class=\"mt-8\">\n            <form method=\"POST\">\n              <div>\n                <label\n                  for=\"email\"\n                  class=\"block mb-2 text-sm text-black dark:text-black\"\n                >\n                  Email Address\n                </label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  htmlFor=\"email\"\n                  defaultValue={actionData?.fields.email}\n                  placeholder=\"example@example.com\"\n                  class=\"block w-full px-4 py-2 mt-2 text-black placeholder-black bg-white border border-gray-200 rounded-md dark:placeholder-gray-600 dark:bg-white dark:text-black dark:border-gray-700 focus:border-blue-400 dark:focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40\"\n                />\n                <div className=\"\">\n                  {actionData?.fieldErrors?.email &&\n                    actionData?.fieldErrors?.email}\n                </div>\n              </div>\n\n              <div class=\"mt-6\">\n                <div class=\"flex justify-between mb-2\">\n                  <label\n                    for=\"password\"\n                    class=\"text-sm text-black dark:text-black\"\n                  >\n                    Password\n                  </label>\n                  <a\n                    href=\"#\"\n                    class=\"text-sm text-black focus:text-blue-500 hover:text-blue-500 hover:underline\"\n                  >\n                    Forgot password?\n                  </a>\n                </div>\n\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"Your Password\"\n                  class=\"block w-full px-4 py-2 mt-2 text-black placeholder-black bg-white border border-gray-200 rounded-md dark:placeholder-gray-600 dark:bg-white dark:text-black dark:border-gray-700 focus:border-blue-400 dark:focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40\"\n                />\n                <div className=\"error\">\n                  {actionData?.fieldErrors?.password &&\n                    actionData?.fieldErrors?.password}\n                </div>\n              </div>\n\n              <div class=\"mt-6\">\n                <button class=\"w-full px-4 py-2 tracking-wide text-white transition-colors duration-200 transform bg-blue-500 rounded-md hover:bg-blue-400 focus:outline-none focus:bg-blue-400 focus:ring focus:ring-blue-300 focus:ring-opacity-50\">\n                  Sign in\n                </button>\n              </div>\n            </form>\n\n            <Link to={'../auth/register'} class=\"mt-6 text-sm text-center text-gray-400\">\n              Don&#x27;t have an account yet?{' '}\n              <a\n                href=\"#\"\n                class=\"text-blue-500 focus:outline-none focus:underline hover:underline\"\n              >\n                Sign up\n              </a>\n              .\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n", "import { Outlet } from \"@remix-run/react\";\n\nfunction Exercises() {\n  return (\n    <>\n      <Outlet />\n    </>\n  );\n}\n\nexport default Exercises;\n", "import { redirect } from '@remix-run/node'\nimport { useLoaderData } from '@remix-run/react'\nimport { getUser } from '../utils/session.server'\n\n\n\nimport cssSheet from '~/styles/app.css'\nimport homepageCssSheet from '~/styles/homepage.css'\nimport { Feature } from '../components/homepage/Feature'\nimport HeroSection from '../components/homepage/HeroSection'\n\nexport const links = () => {\n  return [\n    {\n      rel: 'stylesheet',\n      href: cssSheet,\n    },\n    {\n      rel: 'stylesheet',\n      href: homepageCssSheet,\n    },\n    {\n      rel: 'stylesheet',\n      href: 'https://fonts.googleapis.com/css?family=Noto Serif',\n    },\n  ]\n}\nexport const loader = async ({ request }) => {\n  const user = await getUser(request)\n  const data = {\n    user,\n  }\n\n  if (user) {\n    return redirect('/dashboard')\n  }\n\n  return data\n}\n\nfunction Home() {\n  return (\n    <div className=\"layout\">\n      <HeroSection />\n      <Feature />\n    </div>\n  )\n}\n\nexport default Home\n", "import featureImg1 from '../../../public/images/feature-1.jpeg'\nimport featureImg2 from '../../../public/images/feature-2.jpeg'\nimport featureImg3 from '../../../public/images/feature-3.jpeg'\n\nexport const Feature = () => {\n  return (\n    <div className=\"px-4 py-16 mx-auto sm:max-w-xl md:max-w-full lg:max-w-screen-xl md:px-24 lg:px-8 lg:py-20\">\n      <div className=\"max-w-xl mb-6 sm:mx-auto sm:text-center md:mb-10 lg:max-w-2xl\">\n        <p className=\"mb-1 text-lg font-semibold tracking-wide uppercase md:mb-2\">\n          Get started today\n        </p>\n        <p className=\"text-base text-gray-700 md:text-lg\">\n          Strength Tracker makes your Strength journey simple and fun.\n        </p>\n      </div>\n      <div className=\"grid gap-6 row-gap-5 lg:grid-cols-3\">\n        <div>\n          <img\n            className=\"object-cover w-full h-64 mb-6 rounded shadow-lg lg:h-80 xl:h-96\"\n            src={featureImg1}\n            alt=\"\"\n          />\n          <h5 className=\"mb-2 text-xl font-bold leading-none sm:text-2xl\">\n            Achieve your goals\n          </h5>\n          <p className=\"text-gray-700\">\n            Starting a new workout routine or training program? Strength Tracker\n            will help users set their goals from the start, so they can see how\n            much progress they've made as they work towards them.\n          </p>\n        </div>\n        <div>\n          <img\n            className=\"object-cover w-full h-64 mb-6 rounded shadow-lg lg:h-80 xl:h-96\"\n            src={featureImg2}\n            alt=\"\"\n          />\n          <h5 className=\"mb-2 text-xl font-bold leading-none sm:text-2xl\">\n            Easy to use\n          </h5>\n          <p className=\"text-gray-700\">\n            No need to dig through your phone for the notes you took at the gym.\n            We\u2019ve got a simple, intuitive design that makes tracking your\n            progress easy and fun.\n          </p>\n        </div>\n        <div>\n          <img\n            className=\"object-cover w-full h-64 mb-6 rounded shadow-lg lg:h-80 xl:h-96\"\n            src={featureImg3}\n            alt=\"\"\n          />\n          <h5 className=\"mb-2 text-xl font-bold leading-none sm:text-2xl\">\n            Track your progess\n          </h5>\n          <p className=\"text-gray-700\">\n            Gain clarity on which exercises are most efficient, track a variety\n            of statistics (i.e., sets, reps, weight), set and track personal\n            records.\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n", "import heroImg from '../../../public/images/hero-img.jpeg'\n\nexport default function HeroSection() {\n  return (\n    <section class=\"text-gray-600 body-font w-full\">\n      <div class=\"container mx-auto flex py-24 md:flex-row flex-col items-center w-full\">\n        <div class=\"lg:flex-grow md:w-1/2 lg:pr-24 md:pr-16 flex flex-col md:items-start md:text-left mb-16 md:mb-0 items-center text-center\">\n          <h1 class=\"title-font sm:text-6xl text-4xl mb-4 font-black text-gray-900 italic\">Measure progress\n          </h1>\n          <p class=\"mb-8 leading-relaxed text-xl\">Stay on track with your fitness goals. Create a profile and track your strength progress to meet individual goals and challenges.</p>\n          <div class=\"flex justify-center\">\n            <button class=\"inline-flex text-white bg-indigo-500 border-0 py-2 px-6 focus:outline-none hover:bg-indigo-600 rounded text-lg\">Register</button>\n            <button class=\"ml-4 inline-flex text-gray-700 bg-gray-100 border-0 py-2 px-6 focus:outline-none hover:bg-gray-200 rounded text-lg\">Login</button>\n          </div>\n        </div>\n        <div class=\"lg:max-w-lg lg:w-full md:w-1/2 w-5/6\">\n          <img class=\"object-cover object-center rounded\" alt=\"hero\" src={heroImg}/>\n        </div>\n      </div>\n    </section>\n  );\n};\n", "export default {'version':'54039b58','entry':{'module':'/build/entry.client-5BYLSRVJ.js','imports':['/build/_shared/chunk-3XXAVSMV.js','/build/_shared/chunk-XGX5MSUA.js','/build/_shared/chunk-QO3FLZQJ.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-5EZG3GFI.js','imports':['/build/_shared/chunk-DT4UPYIM.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/auth/login':{'id':'routes/auth/login','parentId':'root','path':'auth/login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth/login-HYPMAGJ3.js','imports':['/build/_shared/chunk-ZEZWO6LP.js','/build/_shared/chunk-C2HSWUHS.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth/logout':{'id':'routes/auth/logout','parentId':'root','path':'auth/logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth/logout-KMNH7DVE.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth/register':{'id':'routes/auth/register','parentId':'root','path':'auth/register','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth/register-ZQITHGQD.js','imports':['/build/_shared/chunk-ZEZWO6LP.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-C2HSWUHS.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/$userId.profile':{'id':'routes/dashboard/$userId.profile','parentId':'root','path':'dashboard/:userId/profile','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard/$userId.profile-A76VD2GF.js','imports':['/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-C2HSWUHS.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/exercises/$exerciseId':{'id':'routes/dashboard/exercises/$exerciseId','parentId':'root','path':'dashboard/exercises/:exerciseId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard/exercises/$exerciseId-LQISXWYQ.js','imports':['/build/_shared/chunk-M2KFHSS7.js','/build/_shared/chunk-CATU4WDA.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-C2HSWUHS.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/exercises/$exerciseId.$pr':{'id':'routes/dashboard/exercises/$exerciseId.$pr','parentId':'root','path':'dashboard/exercises/:exerciseId/:pr','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard/exercises/$exerciseId.$pr-72MBCCB4.js','imports':['/build/_shared/chunk-M2KFHSS7.js','/build/_shared/chunk-CATU4WDA.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-C2HSWUHS.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/exercises/$exerciseId.pr-new':{'id':'routes/dashboard/exercises/$exerciseId.pr-new','parentId':'root','path':'dashboard/exercises/:exerciseId/pr-new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard/exercises/$exerciseId.pr-new-OQJKGH5Q.js','imports':['/build/_shared/chunk-PCTWQU6K.js','/build/_shared/chunk-5LEHBJPN.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-C2HSWUHS.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/exercises/$exerciseId.volume':{'id':'routes/dashboard/exercises/$exerciseId.volume','parentId':'root','path':'dashboard/exercises/:exerciseId/volume','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard/exercises/$exerciseId.volume-QTHHMVHW.js','imports':['/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-C2HSWUHS.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/exercises/index':{'id':'routes/dashboard/exercises/index','parentId':'root','path':'dashboard/exercises','index':true,'caseSensitive':undefined,'module':'/build/routes/dashboard/exercises/index-KROIYQKH.js','imports':['/build/_shared/chunk-K55B43RF.js','/build/_shared/chunk-A3LBTVSX.js','/build/_shared/chunk-5LEHBJPN.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-C2HSWUHS.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/dashboard/exercises/new':{'id':'routes/dashboard/exercises/new','parentId':'root','path':'dashboard/exercises/new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard/exercises/new-MXZN5IG7.js','imports':['/build/_shared/chunk-5LEHBJPN.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-C2HSWUHS.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/goals/index':{'id':'routes/dashboard/goals/index','parentId':'root','path':'dashboard/goals','index':true,'caseSensitive':undefined,'module':'/build/routes/dashboard/goals/index-45I5DUXD.js','imports':['/build/_shared/chunk-DQV2W2H7.js','/build/_shared/chunk-4W7N2FDS.js','/build/_shared/chunk-OJK6LEMC.js','/build/_shared/chunk-6DSFSQYV.js','/build/_shared/chunk-A3LBTVSX.js','/build/_shared/chunk-5LEHBJPN.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-C2HSWUHS.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/dashboard/goals/new':{'id':'routes/dashboard/goals/new','parentId':'root','path':'dashboard/goals/new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard/goals/new-GPCDDGL6.js','imports':['/build/_shared/chunk-DQV2W2H7.js','/build/_shared/chunk-5LEHBJPN.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-C2HSWUHS.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/index':{'id':'routes/dashboard/index','parentId':'root','path':'dashboard','index':true,'caseSensitive':undefined,'module':'/build/routes/dashboard/index-7DS6OUVO.js','imports':['/build/_shared/chunk-EXEJX4RO.js','/build/_shared/chunk-K55B43RF.js','/build/_shared/chunk-6DSFSQYV.js','/build/_shared/chunk-A3LBTVSX.js','/build/_shared/chunk-5LEHBJPN.js','/build/_shared/chunk-CATU4WDA.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-C2HSWUHS.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/dashboard/prs/index':{'id':'routes/dashboard/prs/index','parentId':'root','path':'dashboard/prs','index':true,'caseSensitive':undefined,'module':'/build/routes/dashboard/prs/index-XP43DCRW.js','imports':['/build/_shared/chunk-4W7N2FDS.js','/build/_shared/chunk-OJK6LEMC.js','/build/_shared/chunk-6DSFSQYV.js','/build/_shared/chunk-A3LBTVSX.js','/build/_shared/chunk-5LEHBJPN.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-C2HSWUHS.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/dashboard/prs/new':{'id':'routes/dashboard/prs/new','parentId':'root','path':'dashboard/prs/new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard/prs/new-LNKDZSQS.js','imports':['/build/_shared/chunk-PCTWQU6K.js','/build/_shared/chunk-5LEHBJPN.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-C2HSWUHS.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/volume/index':{'id':'routes/dashboard/volume/index','parentId':'root','path':'dashboard/volume','index':true,'caseSensitive':undefined,'module':'/build/routes/dashboard/volume/index-IZNL4QTV.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/workouts/$workoutId':{'id':'routes/dashboard/workouts/$workoutId','parentId':'root','path':'dashboard/workouts/:workoutId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard/workouts/$workoutId-5M2RIGTN.js','imports':['/build/_shared/chunk-EXEJX4RO.js','/build/_shared/chunk-K55B43RF.js','/build/_shared/chunk-OJK6LEMC.js','/build/_shared/chunk-6DSFSQYV.js','/build/_shared/chunk-A3LBTVSX.js','/build/_shared/chunk-5LEHBJPN.js','/build/_shared/chunk-CATU4WDA.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-C2HSWUHS.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/workouts/index':{'id':'routes/dashboard/workouts/index','parentId':'root','path':'dashboard/workouts','index':true,'caseSensitive':undefined,'module':'/build/routes/dashboard/workouts/index-NAVKMCBY.js','imports':['/build/_shared/chunk-EXEJX4RO.js','/build/_shared/chunk-K55B43RF.js','/build/_shared/chunk-6DSFSQYV.js','/build/_shared/chunk-A3LBTVSX.js','/build/_shared/chunk-5LEHBJPN.js','/build/_shared/chunk-CATU4WDA.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-C2HSWUHS.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/dashboard/workouts/new':{'id':'routes/dashboard/workouts/new','parentId':'root','path':'dashboard/workouts/new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard/workouts/new-M46CMWFM.js','imports':['/build/_shared/chunk-4W7N2FDS.js','/build/_shared/chunk-PCTWQU6K.js','/build/_shared/chunk-OJK6LEMC.js','/build/_shared/chunk-6DSFSQYV.js','/build/_shared/chunk-A3LBTVSX.js','/build/_shared/chunk-5LEHBJPN.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-C2HSWUHS.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/exercises':{'id':'routes/exercises','parentId':'root','path':'exercises','index':undefined,'caseSensitive':undefined,'module':'/build/routes/exercises-WG5FMJVC.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-ENA4256T.js','imports':['/build/_shared/chunk-ZEZWO6LP.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-54039B58.js'};"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;;;ACCA,YAAuB;;;ADDvB,qBAAqC;;;AEArC;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA,oBAA+B;AAC/B,mBAA4B;AAEb,uBACb,SACA,oBACA,iBACA,cACA;AACA,MAAI,SAAS,kCACX,oCAAC,0BAAD;AAAA,IAAa,SAAS;AAAA,IAAc,KAAK,QAAQ;AAAA;AAGnD,kBAAgB,IAAI,gBAAgB;AAEpC,SAAO,IAAI,SAAS,oBAAoB,QAAQ;AAAA,IAC9C,QAAQ;AAAA,IACR,SAAS;AAAA;AAAA;;;ACjBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOO;;;ACPP,oBAAmB;;;ACAnB,oBAA8B;AAE9B,IAAI;AAMJ,IAAG,OAAsC;AACrC,OAAK,IAAI;AACT,KAAG;AAAA,OACA;AACH,MAAI,CAAC,OAAO,MAAM;AACd,WAAO,OAAO,IAAI;AAClB,WAAO,KAAK;AAAA;AAEhB,OAAK,OAAO;AAAA;;;ADdhB,kBAAqD;AAGrD,qBAA4B,EAAE,OAAO,YAAY;AAC/C,QAAM,OAAO,MAAM,GAAG,KAAK,WAAW;AAAA,IACpC,OAAO;AAAA,MACL;AAAA;AAAA;AAIJ,MAAI,CAAC,MAAM;AACT,WAAO;AAAA;AAGT,QAAM,oBAAoB,MAAM,sBAAO,QAAQ,UAAU,KAAK;AAE9D,MAAI,CAAC;AAAmB,WAAO;AAE/B,SAAO;AAAA;AAGT,8BAAqC,EAAE,OAAO,aAAa,eAAe;AACxE,QAAM,OAAO,MAAM,GAAG,KAAK,WAAW;AAAA,IACpC,OAAO;AAAA,MACL;AAAA;AAAA;AAIJ,MAAI,CAAC,MAAM;AACT,WAAO;AAAA;AAGT,QAAM,oBAAoB,MAAM,sBAAO,QAAQ,aAAa,KAAK;AACjE,QAAM,eAAe,MAAM,sBAAO,KAAK,aAAa;AAEpD,MAAI,CAAC,mBAAmB;AACtB,YAAQ,IAAI;AACZ,WAAO;AAAA;AAGT,QAAM,GAAG,KAAK,OAAO;AAAA,IACnB,OAAO,EAAE,IAAI,KAAK;AAAA,IAClB,MAAM;AAAA,MACJ;AAAA;AAAA;AAGJ,UAAQ,IAAI;AACZ,SAAO;AAAA;AAGT,wBAA+B,EAAE,OAAO,UAAU,QAAQ;AACxD,QAAM,eAAe,MAAM,sBAAO,KAAK,UAAU;AACjD,SAAO,GAAG,KAAK,OAAO;AAAA,IACpB,MAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAAA;AAKN,IAAM,gBAAgB,QAAQ,IAAI;AAClC,IAAI,CAAC,eAAe;AAClB,QAAM,IAAI,MAAM;AAAA;AAGlB,IAAM,UAAU,4CAA2B;AAAA,EACzC,QAAQ;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,SAAS,CAAC;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,QAAQ,KAAK,KAAK,KAAK;AAAA,IACvB,UAAU;AAAA;AAAA;AAId,iCAAwC,QAAgB,YAAoB;AAC1E,UAAQ,IAAI;AACZ,QAAM,UAAU,MAAM,QAAQ;AAC9B,UAAQ,IAAI,UAAU;AACtB,SAAO,0BAAS,YAAY;AAAA,IAC1B,SAAS;AAAA,MACP,cAAc,MAAM,QAAQ,cAAc;AAAA;AAAA;AAAA;AAKzC,wBAAwB,SAAkB;AAC/C,SAAO,QAAQ,WAAW,QAAQ,QAAQ,IAAI;AAAA;AAGhD,uBAA8B,SAAkB;AAC9C,QAAM,UAAU,MAAM,eAAe;AACrC,QAAM,SAAS,QAAQ,IAAI;AAC3B,MAAI,CAAC,UAAU,OAAO,WAAW,UAAU;AACzC,WAAO;AAAA;AAGT,MAAI;AACF,UAAM,OAAO,MAAM,GAAG,KAAK,WAAW;AAAA,MACpC,OAAO;AAAA,QACL,IAAI;AAAA;AAAA;AAGR,WAAO;AAAA,WACA,OAAP;AACA,WAAO;AAAA;AAAA;AAIX,sBAA6B,SAAkB;AAC7C,QAAM,UAAU,MAAM,QAAQ,WAAW,QAAQ,QAAQ,IAAI;AAE7D,SAAO,0BAAS,gBAAgB;AAAA,IAC9B,SAAS;AAAA,MACP,cAAc,MAAM,QAAQ,eAAe;AAAA;AAAA;AAAA;;;;;;;;;AEvHjD,oBAAyB;AACzB,oBAAqB;AAEN,mBAAmB,EAAE,UAAU,MAAM,SAAS;AAC3D,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,UACD,oCAAC,OAAD;AAAA,IAAK,WAAW;AAAA,KACd,oCAAC,oBAAD;AAAA,IAAM,IAAG;AAAA,IAAa,WAAU;AAAA,IAAG,SAAS,MAAM,MAAM;AAAA,KACtD,oCAAC,KAAD;AAAA,IAAG,WAAW;AAAA,MACd,oCAAC,QAAD,MAAM,eAER,oCAAC,oBAAD;AAAA,IAAM,IAAG;AAAA,IAAiB,SAAS,MAAM,MAAM;AAAA,KAC7C,oCAAC,KAAD;AAAA,IAAG,WAAW;AAAA,MACd,oCAAC,QAAD,MAAM,sBAER,oCAAC,oBAAD;AAAA,IAAM,IAAG;AAAA,IAAqB,SAAS,MAAM,MAAM;AAAA,KACjD,oCAAC,KAAD;AAAA,IAAG,WAAW;AAAA,MACd,oCAAC,QAAD,MAAM,cAER,oCAAC,oBAAD;AAAA,IAAM,IAAG;AAAA,IAAuB,SAAS,MAAM,MAAM;AAAA,KACnD,oCAAC,KAAD;AAAA,IAAG,WAAW;AAAA,MACd,oCAAC,QAAD,MAAM,eAER,oCAAC,oBAAD;AAAA,IAAM,IAAG;AAAA,IAAmB,SAAS,MAAM,MAAM;AAAA,KAC/C,oCAAC,KAAD;AAAA,IAAG,WAAW;AAAA,MACd,oCAAC,QAAD,MAAM,WAER,oCAAC,oBAAD;AAAA,IAAM,IAAI,cAAc,KAAK;AAAA,IAAc,SAAS,MAAM,MAAM;AAAA,KAC9D,oCAAC,KAAD;AAAA,IAAG,WAAW;AAAA,MACd,oCAAC,QAAD,MAAM,sBAER,oCAAC,UAAD;AAAA,IAAQ,WAAW;AAAA,KACf,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,IAAe,QAAO;AAAA,KACjC,oCAAC,UAAD;AAAA,IAAQ,WAAU;AAAA,IAAM,MAAK;AAAA,IAAS,SAAS,MAAM,MAAM;AAAA,KAAW,WAC5D,KAAK;AAAA;;;AHtB7B,oBAAyB;;;;;;AIbzB,oBAAqB;AAEN,yBAAyB,MAAM;AAC5C,SACE,oCAAC,OAAD;AAAA,IAAK,WAAW;AAAA,KACd,oCAAC,OAAD;AAAA,IAAK,WAAW;AAAA,KACd,oCAAC,OAAD;AAAA,IAAK,WAAW;AAAA,KACd,oCAAC,MAAD;AAAA,IAAI,WAAW;AAAA,KACb,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAA0B,aAC1C,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAA0B,eAIhD,oCAAC,OAAD;AAAA,IAAK,WAAW;AAAA,KACd,oCAAC,oBAAD;AAAA,IAAM,IAAG;AAAA,KACP,oCAAC,KAAD;AAAA,IAAG,WAAW;AAAA,MACd,oCAAC,QAAD,MAAM,eAER,oCAAC,oBAAD;AAAA,IAAM,IAAG;AAAA,KACP,oCAAC,KAAD;AAAA,IAAG,WAAW;AAAA,MACd,oCAAC,QAAD,MAAM,sBAER,oCAAC,oBAAD;AAAA,IAAM,IAAG;AAAA,KACP,oCAAC,KAAD;AAAA,IAAG,WAAW;AAAA,MACd,oCAAC,QAAD,MAAM,cAER,oCAAC,oBAAD;AAAA,IAAM,IAAG;AAAA,KACP,oCAAC,KAAD;AAAA,IAAG,WAAW;AAAA,MACd,oCAAC,QAAD,MAAM,eAER,oCAAC,oBAAD;AAAA,IAAM,IAAG;AAAA,KACP,oCAAC,KAAD;AAAA,IAAG,WAAW;AAAA,MACd,oCAAC,QAAD,MAAM,WAER,oCAAC,oBAAD;AAAA,IAAM,IAAI,cAAc,KAAK,KAAK;AAAA,KAChC,oCAAC,KAAD;AAAA,IAAG,WAAW;AAAA,MACd,oCAAC,QAAD,MAAM,uBAGV,oCAAC,OAAD;AAAA,IAAK,WAAW;AAAA,KACZ,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,IAAe,QAAO;AAAA,KACjC,oCAAC,UAAD;AAAA,IAAQ,WAAU;AAAA,IAAgB,MAAK;AAAA,KAAS,WACtC,KAAK,KAAK;AAAA;;;AC1ChC,oBAAqB;AAGd,IAAM,SAAS,MAAM;AAC1B,SACE,oCAAC,OAAD,MACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAsG,qBAGpH,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAA6B,8JAK1C,oCAAC,oBAAD;AAAA,IACE,IAAG;AAAA,IACH,cAAW;AAAA,IACX,WAAU;AAAA,KACX,YAEC,oCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,MAAK;AAAA,IACL,SAAQ;AAAA,KAER,oCAAC,QAAD;AAAA,IAAM,GAAE;AAAA,SAId,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA;AAAA;;;ALZhB,IAAM,QAAQ,MAAM;AACzB,SAAO;AAAA,IACL,EAAE,KAAK,cAAc,MAAM;AAAA,IAC3B;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA;AAAA,IAER;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA;AAAA;AAAA;AAKL,IAAM,SAAS,OAAO,EAAE,cAAc;AAC3C,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,OAAO;AAAA,IACX;AAAA;AAEF,SAAO;AAAA;AAGM,aAAa,QAAQ;AAClC,SACE,oCAAC,UAAD,MACE,oCAAC,QAAD,MACE,oCAAC,sBAAD;AAAA;AAMD,uBAAuB,OAAO;AACnC,UAAQ,MAAM;AACd,SACE,oCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,KACT,oCAAC,QAAD,MACE,oCAAC,SAAD,MAAO,WACP,oCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,IAAW,SAAQ;AAAA,MAC9B,oCAAC,qBAAD,QAEF,oCAAC,QAAD,MACE,oCAAC,uBAAD,OACA,oCAAC,UAAD;AAAA,IAAQ,KAAI;AAAA;AAAA;AAMpB,kBAAkB,EAAE,UAAU,SAAS;AACrC,SACE,oCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,KACT,oCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,IAAW,SAAQ;AAAA,MAC9B,oCAAC,QAAD,MACE,oCAAC,qBAAD,OACA,oCAAC,SAAD,MAAO,qBACP,oCAAC,QAAD;AAAA,IACE,KAAI;AAAA,IACJ,MAAK;AAAA,OAGT,oCAAC,QAAD,MACG,UACA,OAAyC,oCAAC,0BAAD,QAAiB,MAC3D,oCAAC,uBAAD,OACA,oCAAC,UAAD;AAAA,IACE,KAAI;AAAA,IACJ,MAAK;AAAA;AAAA;AAOf,gBAAgB,EAAE,YAAY;AAC5B,MAAI,CAAC,OAAO,WAAW,4BAAS;AAEhC,QAAM,EAAE,SAAS;AACjB,SACE,0DACG,OACC,oCAAC,OAAD;AAAA,IAAK,WAAW;AAAA,KACd,oCAAC,OAAD;AAAA,IAAK,WAAW;AAAA,KACd,oCAAC,iBAAD;AAAA,IAAiB;AAAA,MACjB,oCAAC,OAAD;AAAA,IACE,WACE;AAAA,KAGD,UAAU,IACT,oCAAC,WAAD;AAAA,IAAW;AAAA,IAAY,SAAS,MAAM,QAAS,QAAQ;AAAA,KACrD,oCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,SAAS,MAAM,QAAS,QAAQ;AAAA,QAGlC,MACJ,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,oBAAD;AAAA,IAAM,IAAI;AAAA,KACR,oCAAC,MAAD;AAAA,IAAI,WAAW;AAAA,KACb,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAoB,aACpC,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAoB,cAGxC,oCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,SAAS,MAAM,QAAS,QAAQ;AAAA,OAGnC,cAKP,oCAAC,aAAD;AAAA,IAAW,WAAU;AAAA,KACnB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,oBAAD;AAAA,IAAM,WAAU;AAAA,IAA4B,IAAG;AAAA,KAAI,qBAGnD,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,oBAAD;AAAA,IAAM,WAAU;AAAA,IAAoC,IAAG;AAAA,KAAiB,aAGxE,oCAAC,oBAAD;AAAA,IAAM,WAAU;AAAA,IAA+B,IAAG;AAAA,KAAc,YAKpE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAU,WAEzB,oCAAC,QAAD;AAAA;;;AMrJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA+B;AAC/B,qBAAyD;;;ACDzD,mBAAyB;AACzB,oBAAmD;;;ACDnD,oBAAqB;AAEN,gBAAgB,MAAM;AACnC,SACI,oCAAC,OAAD;AAAA,IAAK,WAAW;AAAA,KACd,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAsB,KAAK,KAAK,KAC5C,oCAAC,oBAAD;AAAA,IAAM,IAAI,cAAc,KAAK,KAAK;AAAA,IAAM,WAAU;AAAA,KAChD,oCAAC,QAAD,MAAO,KAAK,KAAK;AAAA;;;ADwB7B,mBAAmB,QAAQ,MAAM;AAC/B,MAAI,SAAS,GAAG;AACd,WAAO;AAAA;AACF,WAAO,KAAK,MAAM,SAAS,OAAO,SAAS,QAAQ;AAAA;AAGrD,kBAAkB,QAAQ,MAAM,YAAY,UAAU;AAC3D,QAAM,gBAAgB;AAAA,IACpB,KAAO;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,IAAM;AAAA;AAER,QAAM,QAAQ,UAAU,QAAQ;AAChC,QAAM,UAAU,OAAO,QAAQ;AAC/B,MAAI;AACJ,WAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,QAAI,WAAW,QAAQ,GAAG,IAAI;AAC5B,sBAAgB,QAAQ,GAAG;AAAA;AAAA;AAG/B,MAAI,aAAa,SAAS,iBAAiB;AAC3C,MAAI,UAAU,QAAQ;AACtB,MAAI,OAAO,UAAU,YAAY,YAAY;AAC7C,MAAI,WAAY,UAAU,OAAQ;AAClC,MAAI,mBAAmB,MAAM;AAC7B,MAAI,cAAc,OAAO;AACzB,MAAI,WAAW,MAAM;AACnB,WAAO,CAAC,MAAM;AAAA,SACT;AACL,WAAO,CAAC,OAAO,UAAU,kBAAkB;AAAA;AAAA;;;AD/D/C,wBAAwB,QAAQ;AAC9B,MAAI,OAAO,WAAW,UAAU;AAC9B,WAAO;AAAA;AAAA;AAIX,sBAAsB,MAAM;AAC1B,MAAI,OAAO,SAAS,UAAU;AAC5B,WAAO;AAAA;AAAA;AAIX,qBAAoB,MAAM;AACxB,SAAO,uBAAK,MAAM,EAAE,QAAQ;AAAA;AAGvB,IAAM,UAAS,OAAO,EAAE,aAAa;AAC1C,QAAM,YAAW,MAAM,GAAG,SAAS,WAAW;AAAA,IAC5C,OAAO;AAAA,MACL,IAAI,OAAO;AAAA;AAAA;AAGf,SAAO;AAAA;AAGF,IAAM,SAAS,OAAO,EAAE,SAAS,aAAa;AACnD,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,YAAY,KAAK,IAAI;AAC3B,QAAM,UAAU,KAAK,IAAI;AACzB,QAAM,SAAS,SAAS;AACxB,QAAM,OAAO,SAAS;AACtB,QAAM,aAAa,OAAO;AAC1B,QAAM,WAAU,KAAK,IAAI;AACzB,QAAM,QAAO,IAAI,KAAK,UAAS;AAE/B,QAAM,OAAO,MAAM,QAAQ;AAE3B,QAAM,SAAS,EAAE,QAAQ;AAEzB,QAAM,cAAc;AAAA,IAClB,QAAQ,eAAe;AAAA,IACvB,MAAM,aAAa;AAAA;AAGrB,MAAI,OAAO,OAAO,aAAa,KAAK,UAAU;AAC5C,YAAQ,IAAI;AACZ,WAAO,YAAW,EAAE,aAAa;AAAA;AAGnC,QAAM,KAAK,MAAM,GAAG,GAAG,OAAO;AAAA,IAC5B,MAAM,iCAAK,SAAL,EAAa,QAAQ,KAAK,IAAI,YAAyB,MAAM;AAAA;AAGrE,QAAM,QAAQ,MAAM,GAAG,MAAM,SAAS;AAAA,IACpC,OAAO,EAAE,QAAQ,KAAK,IAAI;AAAA;AAE5B,QAAM,aAAa,MAAM,GAAG;AAC5B,QAAM,WAAW,MAAM,GAAG;AAC1B,QAAM,SAAS,MAAM,GAAG;AAExB,QAAM,UAAU,SAAS,QAAQ,MAAM,YAAY;AAEnD,MAAI,QAAQ,OAAO,MAAM;AACvB,UAAM,GAAG,MAAM,OAAO;AAAA,MACpB,OAAO,EAAE,IAAI;AAAA,MACb,MAAM;AAAA,QACJ,UAAU;AAAA,QACV,iBAAiB;AAAA;AAAA;AAAA;AAKvB,SAAO,2BAAS,wBAAwB;AAAA;AAG1C,iBAAiB;AAjFjB;AAkFE,QAAM,aAAa;AACnB,QAAM,YAAW;AAEjB,SACE,0DACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD,MAAI,eAAY,UAAS,QACzB,oCAAC,qBAAD;AAAA,IAAM,IAAG;AAAA,IAAa,WAAU;AAAA,KAAG,UAIrC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,qBAAD;AAAA,IAAM,QAAO;AAAA,KACb,oCAAC,OAAD,MACE,oCAAC,MAAD,MAAI,qBACJ,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,IAAG;AAAA,IACH,MAAK;AAAA,IACL,cAAc;AAAA,IACd,KAAK;AAAA,IACL,KAAK;AAAA,IACL,UAAQ;AAAA,OAGV,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,KAAS,WACxB,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,MAAK;AAAA,IAAS,IAAG;AAAA,MACtC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,KAAD,MACG,gDAAY,gBAAZ,mBAAyB,WACxB,gDAAY,gBAAZ,mBAAyB,YAIjC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,KAAO,kBACtB,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,MAAK;AAAA,IAAO,IAAG;AAAA,MACpC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,KAAD,MACG,gDAAY,gBAAZ,mBAAyB,SAAQ,gDAAY,gBAAZ,mBAAyB,UAIjE,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,WAAU;AAAA,KAAG;AAAA;AAS7C,IAAO,4BAAQ;;;AGvIf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA+B;AAC/B,qBAAyD;AAIzD,yBAAwB,QAAQ;AAC9B,MAAI,OAAO,WAAW,UAAU;AAC9B,WAAO;AAAA;AAAA;AAIX,uBAAsB,MAAM;AAC1B,MAAI,OAAO,SAAS,UAAU;AAC5B,WAAO;AAAA;AAAA;AAIX,qBAAoB,MAAM;AACxB,SAAO,uBAAK,MAAM,EAAE,QAAQ;AAAA;AAGvB,IAAM,UAAS,OAAO,EAAE,aAAa;AAC1C,QAAM,YAAW,MAAM,GAAG,SAAS,WAAW;AAAA,IAC5C,OAAO;AAAA,MACL,IAAI,OAAO;AAAA;AAAA;AAGf,SAAO;AAAA;AAGF,IAAM,UAAS,OAAO,EAAE,SAAS,aAAa;AACnD,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,YAAY,KAAK,IAAI;AAC3B,QAAM,UAAU,KAAK,IAAI;AACzB,QAAM,UAAU,KAAK,IAAI;AACzB,QAAM,SAAS,SAAS;AACxB,QAAM,OAAO,SAAS;AACtB,QAAM,OAAO,SAAS;AACtB,QAAM,aAAa,OAAO;AAE1B,QAAM,OAAO,MAAM,QAAQ;AAE3B,QAAM,SAAS,EAAE,QAAQ,MAAM;AAE/B,QAAM,cAAc;AAAA,IAClB,QAAQ,gBAAe;AAAA,IACvB,MAAM,cAAa;AAAA;AAGrB,MAAI,OAAO,OAAO,aAAa,KAAK,UAAU;AAC5C,YAAQ,IAAI;AACZ,WAAO,YAAW,EAAE,aAAa;AAAA;AAGnC,QAAM,SAAS,MAAM,GAAG,OAAO,OAAO;AAAA,IACpC,MAAM,iCAAK,SAAL,EAAa,QAAQ,KAAK,IAAI;AAAA;AAGtC,SAAO,2BAAS,cAAc;AAAA;AAGhC,kBAAiB;AA7DjB;AA8DE,QAAM,aAAa;AACnB,QAAM,YAAW;AAEjB,SACE,0DACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD,MAAI,uBAAoB,UAAS,QACjC,oCAAC,qBAAD;AAAA,IAAM,IAAG;AAAA,IAAa,WAAU;AAAA,KAAG,UAIrC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,qBAAD;AAAA,IAAM,QAAO;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,KAAS,WACxB,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,MAAK;AAAA,IAAS,IAAG;AAAA,MACtC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,KAAD,MACG,gDAAY,gBAAZ,mBAAyB,WACxB,gDAAY,gBAAZ,mBAAyB,YAIjC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,KAAO,SACtB,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,MAAK;AAAA,IAAO,IAAG;AAAA,MACpC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,KAAD,MACG,gDAAY,gBAAZ,mBAAyB,SAAQ,gDAAY,gBAAZ,mBAAyB,UAIjE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,KAAO,SACtB,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,MAAK;AAAA,IAAO,IAAG;AAAA,MACpC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,KAAD,MACG,gDAAY,gBAAZ,mBAAyB,SAAQ,gDAAY,gBAAZ,mBAAyB,UAIjE,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,WAAU;AAAA,KAAG;AAAA;AAS7C,IAAO,4BAAQ;;;AChHf;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAoC;;;ACApC,mBAAyB;AACzB,qBAAoC;;;ACDpC,aAAuB;AAGR,yBAAU,EAAE,OAAO;AAChC,QAAM,iBAAgB,CAAC,WAAW;AAChC,QAAI,QAAO,IAAI,KAAK,QAAQ;AAC5B,QAAI,UAAU,MAAK,MAAM;AACzB,YAAQ;AACR,QAAI,UAAU,QAAQ;AACtB,QAAI,YAAY,QAAQ,MAAM;AAC9B,QAAI,OAAO,UAAU,MAAM,GAAG,GAAG,KAAK;AACtC,YAAQ,KAAK;AACb,QAAI,QAAQ,QAAQ;AACpB,YAAQ,KAAK,QAAQ;AACrB,YAAQ,KAAK;AACb,WAAO,QAAQ,KAAK;AAAA;AAGtB,SACE,qCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qCAAC,SAAD;AAAA,IAAO,WAAW;AAAA,KAChB,qCAAC,SAAD;AAAA,IAAO,WAAU;AAAA,KACf,qCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACZ,qCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAgB,SAC9B,qCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAgB,WAC9B,qCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAgB,SAC9B,qCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAgB,cAGlC,qCAAC,SAAD;AAAA,IAAO,WAAU;AAAA,KACd,IAAI,IAAI,CAAC,IAAI,WAAU;AACtB,WACE,qCAAC,MAAD;AAAA,MAAI,KAAK,GAAG;AAAA,MAAI,WAAU;AAAA,OACxB,qCAAC,MAAD;AAAA,MAAI,WAAU;AAAA,OAA0B,eAAc,GAAG,QACzD,qCAAC,MAAD;AAAA,MAAI,WAAU;AAAA,OAA0B,GAAG,QAAO,OAClD,qCAAC,MAAD;AAAA,MAAI,WAAU;AAAA,OAA0B,GAAG,OAC3C,qCAAC,MAAD;AAAA,MAAI,WAAU;AAAA,OAA0B,cAAc,GAAG,QAAQ,GAAG,OAAM;AAAA;AAAA;;;ACpC1F,sBASO;AAEA,IAAM,gBAAgB,CAAC,WAAW;AACvC,MAAI,QAAO,IAAI,KAAK,QAAQ;AAC5B,MAAI,UAAU,MAAK,MAAM;AACzB,UAAQ;AACR,SAAO,QAAQ,KAAK;AAAA;AAGf,IAAM,iBAAgB,CAAC,QAAQ,SAAS;AAC7C,QAAM,eAAe,SAAS,OAAO,SAAS;AAC9C,SAAO,SAAS,IAAI,SAAS,KAAK,MAAM,eAAe,KAAK,KAAK;AAAA;AAGpD,eAAe,IAAI;AAChC,QAAM,YAAY;AAClB,MAAI,WAAU;AACd,QAAM,WAAW,GAAG,GAAG;AACvB,QAAM,QAAQ,GAAG;AACjB,WAAS,IAAI,WAAW,GAAG,KAAK,GAAG,KAAK;AACtC,cAAU,KAAK;AACf,cAAU,GAAG,OAAO,cAAc,MAAM,GAAG,cAAc;AACzD,cAAU,GAAG,SAAS,eAAc,MAAM,GAAG,WAAW,MAAM,GAAG;AACjE,aAAQ,KAAK,UAAU;AAAA;AAEzB,SACE,oCAAC,qCAAD;AAAA,IAAqB,OAAO;AAAA,IAAS,QAAQ;AAAA,IAAO,WAAU;AAAA,KAC5D,oCAAC,2BAAD;AAAA,IACE,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,KAAK;AAAA,MACL,QAAQ;AAAA;AAAA,KAGV,oCAAC,+BAAD;AAAA,IAAe,iBAAgB;AAAA,MAC/B,oCAAC,uBAAD;AAAA,IAAO,SAAQ;AAAA,MACf,oCAAC,uBAAD,OACA,oCAAC,yBAAD,OACA,oCAAC,wBAAD,OACA,oCAAC,sBAAD;AAAA,IAAM,MAAK;AAAA,IAAW,SAAQ;AAAA,IAAM,QAAO;AAAA;AAAA;;;AF5CnD,qBAAyB;AAqElB,IAAM,gBAAgB,CAAC,QAAQ,SAAS;AAC7C,QAAM,eAAe,SAAS,OAAO,SAAS;AAC9C,SAAO,SAAS,IAAI,SAAS,KAAK,MAAM,eAAe,KAAK,KAAK;AAAA;;;ADzE5D,IAAM,UAAS,OAAO,EAAE,aAAa;AAC1C,QAAM,YAAW,OAAO;AAExB,MAAI,CAAC;AAAU,UAAM,IAAI,MAAM;AAE/B,QAAM,KAAK,MAAM,GAAG,GAAG,WAAW;AAAA,IAChC,OAAO;AAAA,MACL,IAAI,OAAO;AAAA;AAAA;AAIf,QAAM,OAAO,EAAE,qBAAU;AACzB,SAAO;AAAA;AAGT,kBAAkB;AAChB,QAAM,EAAE,qBAAU,OAAO;AACzB,SACE,0DACE,oCAAC,SAAD,MACE,oCAAC,SAAD,MACE,oCAAC,MAAD,MACE,oCAAC,MAAD,MAAI,WACJ,oCAAC,MAAD,MAAK,GAAG,UAEV,oCAAC,MAAD,MACE,oCAAC,MAAD,MAAI,SACJ,oCAAC,MAAD,MAAK,GAAG,QAEV,oCAAC,MAAD,MACE,oCAAC,MAAD,MAAI,kBACJ,oCAAC,MAAD,MAAK,cAAc,GAAG,QAAQ,GAAG,SAEnC,oCAAC,MAAD,MACE,oCAAC,MAAD,MAAI,SACJ,oCAAC,MAAD,MAAK,IAAI,KAAK,GAAG,WAAW,sBAIlC,oCAAC,qBAAD;AAAA,IAAM,IAAI,MAAM;AAAA,KAAY;AAAA;AAKlC,IAAO,wBAAQ;;;AIhDf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyB;AACzB,qBAAoC;AAKpC,qBAAyB;AAElB,IAAM,UAAS,OAAO,EAAE,SAAS,aAAa;AACnD,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,YAAW,MAAM,GAAG,SAAS,WAAW;AAAA,IAC5C,OAAO,EAAE,IAAI,OAAO;AAAA;AAGtB,MAAI,CAAC;AAAU,UAAM,IAAI,MAAM;AAC/B,QAAM,KAAK,MAAM,GAAG,GAAG,SAAS;AAAA,IAC9B,OAAO;AAAA,MACL,QAAQ;AAAA,QACN,QAAQ,GAAG,KAAK;AAAA;AAAA,MAElB,YAAY;AAAA,QACV,QAAQ,GAAG,UAAS;AAAA;AAAA;AAAA,IAGxB,SAAS;AAAA,MACP,MAAM;AAAA;AAAA;AAGV,QAAM,YAAY,WAAW;AAC7B,QAAM,OAAO,EAAE,qBAAU,MAAM,IAAI;AACnC,SAAO;AAAA;AAGT,IAAM,aAAa,CAAC,OAAO;AACzB,MAAI,MAAM;AACV,WAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,KAAK;AAClC,QAAI,KAAK,eAAc,GAAG,GAAG,QAAQ,GAAG,GAAG;AAAA;AAE7C,SAAO,KAAK,IAAI,GAAG;AAAA;AAGd,IAAM,UAAS,OAAO,EAAE,SAAS,aAAa;AACnD,QAAM,OAAO,MAAM,QAAQ;AAC3B,MAAI,KAAK,IAAI,eAAe,UAAU;AACpC,UAAM,OAAO,MAAM,QAAQ;AAE3B,UAAM,YAAW,MAAM,GAAG,SAAS,WAAW;AAAA,MAC5C,OAAO,EAAE,IAAI,OAAO;AAAA;AAGtB,QAAI,CAAC;AAAU,YAAM,IAAI,MAAM;AAE/B,QAAI,QAAQ,UAAS,WAAW,KAAK,IAAI;AACvC,YAAM,GAAG,SAAS,OAAO,EAAE,OAAO,EAAE,IAAI,OAAO;AAAA;AAGjD,WAAO,2BAAS;AAAA;AAElB,MAAI,OAAO,KAAK,IAAI;AACpB,MAAI,QAAQ,UAAa,QAAQ,MAAM,KAAK,UAAU,GAAG;AACvD,UAAM,YAAW,MAAM,GAAG,SAAS,WAAW;AAAA,MAC5C,OAAO,EAAE,IAAI,OAAO;AAAA;AAGtB,UAAM,GAAG,SAAS,OAAO;AAAA,MACvB,OAAO,EAAE,IAAI,OAAO;AAAA,MACpB,MAAM;AAAA,QACJ,OAAO;AAAA;AAAA;AAAA;AAKb,SAAO,2BAAS,wBAAwB,OAAO;AAAA;AAG1C,IAAM,iBAAgB,CAAC,QAAQ,SAAS;AAC7C,QAAM,eAAe,SAAS,OAAO,SAAS;AAC9C,SAAO,SAAS,IAAI,SAAS,KAAK,MAAM,eAAe,KAAK,KAAK;AAAA;AAGnE,oBAAoB;AAClB,QAAM,EAAE,qBAAU,MAAM,IAAI,cAAc;AAE1C,QAAM,WAAW,GAAG;AACpB,MAAI,qBAAqB;AAEzB,MAAI,aAAa,UAAa,GAAG,WAAW,GAAG;AAC7C,YAAQ,IAAI;AAAA,SACP;AACL,yBAAqB,eAAc,SAAS,QAAQ,SAAS;AAAA;AAG/D,MAAI,CAAC,OAAO,WAAW,6BAAS;AAEhC,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,UAAU,KACT,oCAAC,OAAD,MACE,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,IAAO,WAAU;AAAA,KAC5B,oCAAC,SAAD;AAAA,IACE,WAAU;AAAA,IACV,MAAK;AAAA,IACL,MAAK;AAAA,IACL,aAAa,UAAS;AAAA,MAExB,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,WAAU;AAAA,KAAY,SAG5C,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,IAAG,SAAS,MAAM,QAAS,QAAQ;AAAA,KAAK,aAM1D,UAAU,KACT,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IACE,WAAU;AAAA,IACV,SAAS,MAAM,QAAS,QAAQ;AAAA,KAE/B,UAAS,QAEZ,oCAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,SAAS,MAAM,QAAS,QAAQ;AAAA,KACjC,YAIH,oCAAC,qBAAD;AAAA,IAAM,IAAG;AAAA,IAAa,WAAU;AAAA,KAC9B,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAgC,WAKlD,GAAG,SAAS,IACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD,MAAI,0BAAuB,oBAAmB,OAC9C,oCAAC,MAAD,MAAI,gCAA6B,WAAU,SAE3C,OAEL,GAAG,SAAS,IACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,iBAAD;AAAA,IAAS,KAAK;AAAA,MACd,oCAAC,qBAAD;AAAA,IAAM,IAAG;AAAA,KAAW,WACpB,oCAAC,OAAD;AAAA,IAAO;AAAA,QAGT,oCAAC,MAAD,MAAK,kBAEP,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,KAAK,OAAO,UAAS,UACpB,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,KACX,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,MAAK;AAAA,IAAU,OAAM;AAAA,MAC1C,oCAAC,UAAD;AAAA,IAAQ,WAAU;AAAA,KAA+B;AAAA;AAQ7D,IAAO,qBAAQ;;;ACrKf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAoC;;;ACApC,qBAAqB;AAEd,IAAM,UAAU,CAAC,MAAM;AAC5B,MAAI,YAAY,EAAE,MAAM;AACxB,MAAI,WAAU,UAAU,MAAM,GAAG;AACjC,MAAI,UAAU,IAAI,KAAK,GAAG,SAAQ,KAAK;AACvC,MAAI,UAAU,QAAQ,eAAe,MAAM;AAC3C,MAAI,QAAO,QAAQ,KAAK,MAAM,QAAQ,KAAK,MAAO,SAAQ,KAAK;AAC/D,SAAO;AAAA;AAGM,iBAAiB,MAAM;AAEpC,MAAI;AACJ,OAAK,KAAK,WAAW,IAAK,QAAQ,KAAK,OAAS,QAAQ,KAAK,KAAK;AAClE,QAAM,WAAW,KAAK,KAAK;AAC3B,UAAQ,IAAI,KAAK,KAAK;AACtB,SACE,0DACE,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACX,MAAM,IAAI,CAAC,SAAS;AAEnB,UAAM,QAAO,QAAQ,KAAK;AAC1B,UAAM,OAAO,KAAK;AAClB,QAAI,aAAa,SAAS,KAAK,aAAa,OAAO;AACjD,aACE,0DACE,oCAAC,MAAD;AAAA,QAAI,KAAK,KAAK;AAAA,SACZ,oCAAC,KAAD;AAAA,QAAG,WAAU;AAAA,SACX,oCAAC,qBAAD;AAAA,QACE,IAAI,aAAa,KAAK;AAAA,QACtB,WAAU;AAAA,SAET,KAAK,SAAS,QACT,KACR,oCAAC,KAAD,MAAI,KAAK,QAAO,OAAM,QAAK,KAC3B,oCAAC,KAAD,MAAI,OAAO,IAAI,WAAW,IAAI,cAAgB,QAAK;AAAA,eAKlD,KAAK,aAAa,QAAQ,aAAa,MAAM;AACtD,aACE,0DACE,oCAAC,MAAD;AAAA,QAAI,KAAK,KAAK;AAAA,QAAY,WAAU;AAAA,SAClC,oCAAC,KAAD,MACE,oCAAC,qBAAD;AAAA,QAAM,IAAI,0BAA0B,KAAK;AAAA,SACtC,KAAK,SAAS,QACT,KACR,oCAAC,KAAD,MAAI,KAAK,QAAO,OAAM,QAAK,KAC3B,oCAAC,KAAD,MAAI,OAAO,IAAI,WAAW,IAAI,cAAgB,QAAK;AAAA;AAAA;AAAA;;;AClDvE,qBAAqB;AAEN,kBAAkB,MAAM;AACrC,QAAM,MAAM,KAAK,KAAK;AACtB,QAAM,WAAW,IAAI,MAAM;AAC3B,QAAM,KAAK,SAAS,SAAS,SAAS;AACtC,MAAI;AACJ,MAAI;AACJ,MAAI,SAAS,SAAS,GAAG;AACvB,eAAW,SAAS,MAAM,GAAG,SAAS,SAAS;AAChD,YAAQ,SAAS,KAAK;AAAA,SAChB;AACL,YAAQ,SAAS;AAAA;AAGnB,SACE,oCAAC,OAAD;AAAA,IAAK,WAAW;AAAA,KACd,oCAAC,qBAAD;AAAA,IAAM,IAAI,0BAA0B;AAAA,KAClC,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAqB,SAErC,oCAAC,qBAAD;AAAA,IAAM,IAAI,0BAA0B;AAAA,KAClC,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,IAAG,OAAO,EAAC,gBAAgB,KAAG;AAAA,KAAO;AAAA;;;ACrB1D,+BAAoB;;;ACGpB,qBAAoC;;;ACHpC,qBAAoC;;;ACApC,qBAAqB;AAEd,IAAM,iBAAgB,CAAC,QAAQ,SAAS;AAC7C,QAAM,eAAe,SAAS,OAAO,SAAS;AAC9C,SAAO,SAAS,IAAI,SAAS,KAAK,MAAM,eAAe,KAAK,KAAK;AAAA;AAGpD,oBAAoB,EAAE,aAAa;AAChD,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,UAAU,IAAI,CAAC,WAAU,WAAU;AAClC,QAAI,YAAY,UAAS,UAAU,MAAM;AACzC,QAAI,WAAU,UAAU,MAAM,GAAG;AACjC,QAAI,UAAU,IAAI,KAAK,GAAG,SAAQ,KAAK;AACvC,QAAI,UAAU,QAAQ,eAAe,MAAM;AAC3C,QAAI,QAAO,QAAQ,KAAK,MAAM,QAAQ,KAAK,MAAM,QAAQ;AAEzD,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,cAAS,MAAM,WAAW,IACrB,QAAQ,OACP,UAAS,UAAS,MAAM,GAAG,WAC5B,OAAO,UAAS,MAAM,GAAG,SACzB,QAAQ,eAAc,QAAQ;AAEnC,WACE,oCAAC,OAAD;AAAA,MAAK,WAAW;AAAA,MAAwC,KAAK,UAAS;AAAA,OACpE,oCAAC,MAAD;AAAA,MAAI,WAAW;AAAA,OACb,oCAAC,OAAD,MACE,oCAAC,qBAAD;AAAA,MAAM,IAAI,wBAAwB,UAAS;AAAA,OACxC,UAAS,SAGd,oCAAC,OAAD,MACE,oCAAC,MAAD,MAAK,UAAU,OAAO,UAAU,QAAQ,OACxC,oCAAC,MAAD,MAAI,uBAEN,oCAAC,OAAD,MACE,oCAAC,MAAD,MAAK,QACL,oCAAC,MAAD,MAAI;AAAA;AAAA;;;ACxCpB,qBAAqB;AAEN,iBAAgB,MAAM;AACnC,SACI,oCAAC,OAAD;AAAA,IAAK,WAAW;AAAA,KACd,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAqB,KAAK,KAAK,KAC7C,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,qBAAD;AAAA,IAAM,IAAI,cAAc,KAAK,KAAK;AAAA,IAAM,WAAU;AAAA,KAChD,oCAAC,QAAD,MAAM,SAER,oCAAC,qBAAD;AAAA,IAAM,IAAI,cAAc,KAAK,KAAK;AAAA,IAAM,WAAU;AAAA,KAAY;AAAA;;;ACVjE,uBAAuB;AAE1B,SACE,oCAAC,OAAD;AAAA;;;AHaC,sBAAsB,GAAG,MAAM;AACpC,MAAI,IAAI,KAAK;AACb,MAAI,MAAM,EAAE,UACV,OAAO,EAAE,YAAY,MAAO,QAAO,IAAI,KAAK,KAAK;AACnD,SAAO,IAAI,KAAK,EAAE,QAAQ;AAAA;;;AIpBb,uBAAuB,MAAM;AAC1C,SACI,oCAAC,OAAD;AAAA,IAAK,WAAW;AAAA,KACd,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAqB,KAAK,KAAK,IAAG,OAAI,KAAK,KAAK;AAAA;;;ACHtE,qBAAkB;AAClB,uBASO;AAEP,qBAAoC;AAEpC,+BAA+B;AAC7B,QAAM,EAAE,YAAY,OAAO,aAAa,WAAW;AACnD,SAAO;AAAA,IACL;AAAA,IACA;AAAA;AAAA;AAIG,+BAA+B;AAEpC,QAAM,CAAC,kBAAkB,uBAAuB,6BAAS;AAEzD,gCAAU,MAAM;AACd,4BAAwB;AACtB,0BAAoB;AAAA;AAGtB,WAAO,iBAAiB,UAAU;AAClC,WAAO,MAAM,OAAO,oBAAoB,UAAU;AAAA,KACjD;AAEH,SAAO;AAAA;AAIT,IAAM,gBAAgB,CAAC,EAAE,QAAQ,SAAS,YAAY;AACpD,MAAI,UAAU,WAAW,QAAQ,QAAQ;AACvC,WACE,qDAAC,OAAD;AAAA,MAAK,WAAU;AAAA,OACZ,QAAQ,GAAG,UAAU,IACpB,qDAAC,KAAD;AAAA,MAAG,WAAU;AAAA,OAAS,GAAG,kCACvB,QAAQ,GAAG,UAAU,IACvB,qDAAC,KAAD;AAAA,MAAG,WAAU;AAAA,OAAS,GAAG,UAAU,QAAQ,GAAG,mBAE9C,qDAAC,KAAD;AAAA,MAAG,WAAU;AAAA,OAAS,GAAG,UAAU,QAAQ,GAAG;AAAA;AAMtD,SAAO;AAAA;AAGM,sBAAsB,MAAM;AACzC,MAAI;AACJ,MAAI;AACJ,MAAI,OAAO,WAAW,aAAa;AAClC,kBAAc,sBAAsB;AACpC,mBAAe,sBAAsB;AAErC,WACC,qDAAC,sCAAD;AAAA,MAAqB,OAAO;AAAA,MAAS,QAAQ;AAAA,MAAO,WAAU;AAAA,OAC5D,qDAAC,4BAAD;AAAA,MACE,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,MAAM,KAAK;AAAA,MACX,QAAQ;AAAA,QACN,KAAK;AAAA,QACL,OAAO;AAAA,QACP,MAAM;AAAA,QACN,QAAQ;AAAA;AAAA,OAGV,qDAAC,gCAAD;AAAA,MAAe,iBAAgB;AAAA,QAC/B,qDAAC,wBAAD;AAAA,MAAO,SAAQ;AAAA,QACf,qDAAC,wBAAD,OACA,qDAAC,0BAAD;AAAA,MAAS,SAAS,qDAAC,eAAD;AAAA,QAElB,qDAAC,uBAAD;AAAA,MACE,MAAK;AAAA,MACL,SAAQ;AAAA,MACR,QAAO;AAAA,MACP,WAAW,EAAE,GAAG;AAAA;AAAA,SAKnB;AACL,WACE,4FAAE;AAAA;AAAA;;;ANtCC,IAAM,MAAM,CAAC,WAAW;AAC7B,MAAI;AAEJ,MAAI,UAAU,GAAG;AACf,eAAW;AAAA,aACD,SAAS,KAAK,SAAS,MAAO,SAAS,KAAK,GAAG;AACzD,eAAW;AAAA,SACN;AACL,eAAW,SAAS;AAAA;AAGtB,SAAO,SAAS,CAAC,MAAM,MAAM,MAAM,MAAM,IAAI;AAAA;AAGxC,kBAAkB,SAAS;AAChC,QAAM,SAAS;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAEF,QAAM,QAAO,IAAI,KAAK;AACtB,QAAM,MAAM,MAAK;AACjB,QAAM,OAAO,MAAK;AAClB,QAAM,QAAQ,MAAK;AACnB,QAAM,WAAU,IAAI,OAAO,MAAM,OAAO;AACxC,SAAO;AAAA;;;ADvFT,qBAAqB;AAEN,oBAAoB,EAAE,QAAQ;AAC3C,QAAM,uBAAuB;AAAA,IAC3B,SAAS;AAAA,IACT,MAAM;AAAA,IACN,KAAK;AAAA,IACL,KAAK;AAAA;AAEP,QAAM,cAAc;AACpB,MAAI,SAAS,QAAW;AACtB,WAAO;AAAA,SACF;AACL,QAAI,eAAe;AACnB,QAAI,MAAM;AACV,gBAAY,IAAI,CAAC,YAAY;AAC3B,mBAAa,KAAK;AAAA;AAGpB,aAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,YAAM,gBAAgB,aAAa,GAAG;AACtC,UAAI,MAAM;AAAA,QACR,MAAM,aAAa,GAAG;AAAA,QACtB,QAAQ;AAAA,QACR,IAAI,aAAa,GAAG;AAAA;AAEtB,UAAI,KAAK;AAAA;AAGX,QAAI,qBAAqB;AACzB,QAAI,WAAW;AACf,QAAI,IAAI,CAAC,YAAY;AACnB,cAAQ,OAAO,IAAI,CAAC,QAAQ;AAC1B,YAAI,CAAC,mBAAmB,SAAS,IAAI,SAAS,QAAQ;AACpD,6BAAmB,KAAK,IAAI,SAAS;AACrC,iBAAO,IAAI;AACX,iBAAO,IAAI;AACX,iBAAO,IAAI;AACX,cAAI,WAAW,IAAI,SAAS;AAC5B,iBAAO,IAAI;AAAA,eACN;AACL,iBAAO,IAAI;AACX,iBAAO,IAAI;AACX,iBAAO,IAAI;AACX,iBAAO,IAAI;AAAA;AAEb,iBAAS,KAAK;AAAA;AAAA;AAIlB,WACE,oCAAC,kCAAD;AAAA,MACE,gBAAgB;AAAA,MAChB,WAAU;AAAA,MACV,iBAAgB;AAAA,OAEf,IAAI,IAAI,CAAC,YAAY;AACpB,aAAO;AAAA,QACL,oCAAC,OAAD;AAAA,UAAK,WAAU;AAAA,WACb,oCAAC,qBAAD;AAAA,UAAM,IAAI,uBAAuB,QAAQ;AAAA,WACzC,oCAAC,MAAD,MAAK,SAAS,QAAQ,SAErB,QAAQ,OAAO,IAAI,CAAC,QAAQ;AAC3B,iBACE,oCAAC,OAAD;AAAA,YAAK,WAAU;AAAA,aACZ,IAAI,YAAY,SACf,oCAAC,OAAD;AAAA,YAAK,WAAU;AAAA,aACb,oCAAC,OAAD,MACE,oCAAC,KAAD,MACE,oCAAC,qBAAD;AAAA,YAAM,IAAI,aAAa,IAAI;AAAA,aACzB,oCAAC,MAAD,MAAK,IAAI,cAIf,oCAAC,OAAD;AAAA,YAAK,WAAU;AAAA,aACb,oCAAC,KAAD,MAAG,WACH,oCAAC,KAAD,MAAG,SACH,oCAAC,KAAD,MAAG,YAGL,MACJ,oCAAC,OAAD;AAAA,YAAK,WAAU;AAAA,aACb,oCAAC,KAAD,MAAI,IAAI,QAAO,OACf,oCAAC,KAAD,MAAI,IAAI,OACR,oCAAC,KAAD,MAAI,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;;;AQrF9B,qBAAqB;AA6FN,2BAA2B,EAAE,QAAQ;AAClD,QAAM,cAAc,CAAC,KAAK;AAC1B,QAAM,YAAY,KAAK;AACvB,MAAI,SAAS,QAAW;AACtB,WAAO;AAAA,SACF;AACL,QAAI,eAAe;AACnB,QAAI,MAAM;AACV,gBAAY,IAAI,CAAC,YAAY;AAC3B,mBAAa,KAAK;AAAA;AAGpB,aAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,YAAM,gBAAgB,aAAa,GAAG;AACtC,UAAI,MAAM;AAAA,QACR,MAAM,aAAa,GAAG;AAAA,QACtB,QAAQ;AAAA,QACR,IAAI,aAAa,GAAG;AAAA;AAEtB,UAAI,KAAK;AAAA;AAGX,QAAI,qBAAqB;AACzB,QAAI,WAAW;AACf,QAAI,IAAI,CAAC,YAAY;AACnB,cAAQ,OAAO,IAAI,CAAC,QAAQ;AAC1B,YAAI,CAAC,mBAAmB,SAAS,IAAI,SAAS,QAAQ;AACpD,6BAAmB,KAAK,IAAI,SAAS;AACrC,iBAAO,IAAI;AACX,iBAAO,IAAI;AACX,cAAI,WAAW,IAAI,SAAS;AAC5B,iBAAO,IAAI;AAAA,eACN;AACL,iBAAO,IAAI;AACX,iBAAO,IAAI;AACX,iBAAO,IAAI;AAAA;AAEb,iBAAS,KAAK;AAAA;AAAA;AAIlB,WACE,0DACG,IAAI,IAAI,CAAC,YAAY;AACpB,aAAO;AAAA,QACL,oCAAC,QAAD;AAAA,UAAM,WAAU;AAAA,UAAe,QAAO;AAAA,WACpC,oCAAC,qBAAD;AAAA,UAAM,IAAI,uBAAuB,QAAQ;AAAA,WACvC,oCAAC,MAAD,MAAK,SAAS,QAAQ,SAEvB,QAAQ,OAAO,IAAI,CAAC,QAAQ;AAG3B,iBACE,oCAAC,OAAD;AAAA,YAAK,WAAU;AAAA,YAAwB,KAAK,IAAI;AAAA,aAC7C,IAAI,YAAY,SACf,oCAAC,OAAD;AAAA,YAAK,WAAU;AAAA,aACb,oCAAC,UAAD;AAAA,YACE,cAAW;AAAA,YACX,UAAQ;AAAA,YACR,IAAG;AAAA,YACH,MAAK;AAAA,aAEL,oCAAC,UAAD;AAAA,YAAQ,cAAc,IAAI;AAAA,aACvB,IAAI,WAEN,UAAU,IAAI,CAAC,cACd,0DACE,oCAAC,UAAD;AAAA,YAAQ,KAAK,UAAS;AAAA,YAAI,OAAO,UAAS;AAAA,aACvC,UAAS,WAKlB,oCAAC,OAAD;AAAA,YAAK,WAAU;AAAA,aACb,oCAAC,KAAD,MAAG,WACH,oCAAC,KAAD,MAAG,SACH,oCAAC,KAAD,MAAG,YAGL,MACJ,oCAAC,OAAD;AAAA,YAAK,WAAU;AAAA,aACb,oCAAC,SAAD;AAAA,YAAO,MAAK;AAAA,YAAO,cAAc,IAAI;AAAA,cACrC,oCAAC,SAAD;AAAA,YAAO,MAAK;AAAA,YAAO,cAAc,IAAI;AAAA,cACrC,oCAAC,SAAD;AAAA,YAAO,MAAK;AAAA,YAAO,cAAc,IAAI;AAAA;AAAA,YAK7C,oCAAC,UAAD;AAAA,UAAQ,MAAK;AAAA,WAAS;AAAA;AAAA;AAAA;AAAA;;;AX7K7B,IAAM,UAAS,OAAO,EAAE,SAAS,aAAa;AACnD,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,YAAY,MAAM,GAAG,SAAS,SAAS;AAAA,IAC3C,OAAO,EAAE,QAAQ,KAAK;AAAA;AAExB,QAAM,UAAU,MAAM,GAAG,QAAQ,WAAW;AAAA,IAC1C,OAAO,EAAE,IAAI,OAAO;AAAA,IACpB,SAAS;AAAA,MACP,QAAQ;AAAA,QACN,QAAQ;AAAA,UACN,MAAM;AAAA,UACN,YAAY;AAAA,UACZ,QAAQ;AAAA,UACR,MAAM;AAAA,UACN,MAAM;AAAA,UACN,WAAW;AAAA,UACX,IAAI;AAAA,UACJ,UAAU;AAAA,YACR,QAAQ;AAAA,cACN,IAAI;AAAA,cACJ,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQnB,SAAO,CAAC,SAAS;AAAA;AAGZ,sBAAsB,IAAI,IAAI;AACnC,MAAI,QAAQ,KAAK,MAAO,MAAK,MAAO,KAAI,KAAK,KAAK,KAAK;AACvD,SAAO;AAAA;AAGF,IAAM,OAAM,CAAC,WAAW;AAC7B,MAAI;AAEJ,MAAI,UAAU,GAAG;AACf,eAAW;AAAA,aACD,SAAS,KAAK,SAAS,MAAO,SAAS,KAAK,GAAG;AACzD,eAAW;AAAA,SACN;AACL,eAAW,SAAS;AAAA;AAGtB,SAAO,SAAS,CAAC,MAAM,MAAM,MAAM,MAAM,IAAI;AAAA;AAGxC,mBAAkB,SAAS;AAChC,QAAM,SAAS;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAEF,QAAM,QAAO,IAAI,KAAK;AACtB,QAAM,MAAM,MAAK;AACjB,QAAM,QAAQ,MAAK;AACnB,QAAM,WAAU,KAAI,OAAO,MAAM,OAAO;AACxC,SAAO;AAAA;AAIM,sBAAsB;AACrC,QAAM,OAAO;AACb,QAAM,WAAW,KAAK;AACtB,QAAM,YAAY,KAAK;AACrB,SACE,0DACE,oCAAC,mBAAD;AAAA,IAAmB,MAAM,CAAC,UAAU;AAAA;AAAA;;;AYxF1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkB;AAClB,mBAAqB;AACrB,qBAA6C;AAE7C,qBAAyB;AAKzB,qBAAoB,MAAM;AACxB,SAAO,uBAAK,MAAM,EAAE,QAAQ;AAAA;AAE9B,qBAAqB,MAAM;AACzB,SAAO,uBAAK,MAAM,EAAE,QAAQ;AAAA;AAGvB,IAAM,UAAS,OAAO,EAAE,cAAc;AAC3C,QAAM,OAAO,MAAM,QAAQ;AAC3B,SAAO;AAAA;AAGT,0BAA0B,UAAU;AAClC,MAAI,OAAO,aAAa,YAAY,SAAS,SAAS,GAAG;AACvD,WAAO;AAAA,aACE,OAAO,aAAa,YAAY,SAAS,OAAO,YAAY,IAAI;AACzE,WAAO;AAAA,aACE,OAAO,aAAa,YAAY,SAAS,OAAO,YAAY,IAAI;AACzE,WAAO;AAAA;AAAA;AAIJ,IAAM,UAAS,OAAO,EAAE,SAAS,aAAa;AACnD,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,OAAO,KAAK,IAAI;AAEtB,MAAI,KAAK,IAAI,eAAe,QAAQ;AAClC,UAAM,OAAO,MAAM,QAAQ;AAE3B,UAAM,GAAG,KAAK,OAAO;AAAA,MACnB,OAAO,EAAE,IAAI,KAAK;AAAA,MAClB,MAAM;AAAA,QACJ;AAAA;AAAA;AAIJ,WAAO;AAAA;AAET,MAAI,KAAK,IAAI,eAAe,SAAS;AACnC,UAAM,OAAO,MAAM,QAAQ;AAC3B,UAAM,QAAQ,KAAK,IAAI;AACvB,UAAM,SAAS,EAAE;AACjB,UAAM,cAAc,MAAM,GAAG,KAAK,UAAU;AAAA,MAC1C,OAAO;AAAA,QACL;AAAA;AAAA;AAGJ,QAAI,aAAa;AACf,aAAO,YAAW;AAAA,QAChB;AAAA,QACA,aAAa,EAAE,OAAO,sBAAsB;AAAA;AAAA;AAIhD,UAAM,GAAG,KAAK,OAAO;AAAA,MACnB,OAAO,EAAE,IAAI,KAAK;AAAA,MAClB,MAAM;AAAA,QACJ;AAAA;AAAA;AAIJ,WAAO;AAAA;AAGT,MAAI,KAAK,IAAI,eAAe,YAAY;AACtC,UAAM,OAAO,MAAM,QAAQ;AAC3B,UAAM,QAAQ,KAAK;AACnB,UAAM,cAAc,KAAK,IAAI;AAC7B,UAAM,cAAc,KAAK,IAAI;AAC7B,UAAM,qBAAqB,KAAK,IAAI;AAEpC,UAAM,SAAS,EAAE;AAEjB,QAAI,sBAAsB,aAAa;AACrC,aAAO,YAAW;AAAA,QAChB;AAAA,QACA,aAAa,EAAE,UAAU;AAAA;AAAA;AAI7B,UAAM,cAAc;AAAA,MAClB,UAAU,iBAAiB;AAAA;AAG7B,QAAI,OAAO,OAAO,aAAa,KAAK,UAAU;AAC5C,aAAO,YAAW,EAAE,aAAa;AAAA;AAGnC,UAAM,eAAe,MAAM,eAAe;AAAA,MACxC;AAAA,MACA;AAAA,MACA;AAAA;AAEF,QAAI,CAAC,cAAc;AACjB,aAAO,YAAW;AAAA,QAChB;AAAA,QACA,aAAa,EAAE,UAAU;AAAA;AAAA;AAI7B,WAAO,YAAY;AAAA,MACjB;AAAA,MACA,aAAa,EAAE,UAAU;AAAA;AAAA;AAI7B,SAAO;AAAA;AAGM,qBAAoB;AAtHnC;AAuHE,QAAM,aAAa;AAEnB,MAAI,CAAC,OAAO,WAAW,6BAAS;AAEhC,QAAM,OAAO;AACb,SACE,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,UAAU,KACT,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,QAAD;AAAA,IAAM,QAAO;AAAA,IAAO,WAAU;AAAA,KAC5B,qDAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,MAAK;AAAA,IAAU,OAAM;AAAA,MAC1C,qDAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,qDAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,OAAM;AAAA,KACP,cAGD,qDAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,IAAG;AAAA,IACH,MAAK;AAAA,IACL,OAAM;AAAA,IACN,aAAa,KAAK;AAAA,IAClB,UAAQ;AAAA,OAGZ,qDAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL,OAAM;AAAA,KACP,aAKL,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,MAAD;AAAA,IACE,WAAU;AAAA,IACV,SAAS,MAAM,QAAS,QAAQ;AAAA,KAE/B,KAAK,QAER,qDAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,SAAS,MAAM,QAAS,QAAQ;AAAA,KACjC,gBAIH,qDAAC,KAAD;AAAA,IAAG,WAAU;AAAA,IAAY,SAAS,MAAM,QAAS,QAAQ;AAAA,KAAK,qBAMjE,UAAU,KACT,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,SAAS,MAAM,QAAS,QAAQ;AAAA,KAE/B,KAAK,OAER,qDAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,SAAS,MAAM,QAAS,QAAQ;AAAA,KACjC,eAIH,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,SAAS,MAAM,QAAS,QAAQ;AAAA,KAE/B,KAAK,QAER,qDAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,SAAS,MAAM,QAAS,QAAQ;AAAA,KACjC,gBAIH,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,gDAAY,gBAAZ,mBAAyB,UAAS,gDAAY,gBAAZ,mBAAyB,SAE9D,qDAAC,KAAD;AAAA,IAAG,WAAU;AAAA,IAAY,SAAS,MAAM,QAAS,QAAQ;AAAA,KAAK,oBAG9D,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,gDAAY,gBAAZ,mBAAyB,aACxB,gDAAY,gBAAZ,mBAAyB,aAKhC,UAAU,KACT,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,MAAD;AAAA,IACE,WAAU;AAAA,IACV,SAAS,MAAM,QAAS,QAAQ;AAAA,KAE/B,KAAK,OAER,qDAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,SAAS,MAAM,QAAS,QAAQ;AAAA,KACjC,eAIH,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,QAAD;AAAA,IAAM,QAAO;AAAA,IAAO,WAAU;AAAA,KAC5B,qDAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,MAAK;AAAA,IAAU,OAAM;AAAA,MAC1C,qDAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,qDAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,OAAM;AAAA,KACP,kBAGD,qDAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,IAAG;AAAA,IACH,MAAK;AAAA,IACL,OAAM;AAAA,IACN,aAAa,KAAK;AAAA,IAClB,UAAQ;AAAA,OAGZ,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,gDAAY,gBAAZ,mBAAyB,UACxB,gDAAY,gBAAZ,mBAAyB,SAE7B,qDAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL,OAAM;AAAA,KACP,aAKL,qDAAC,KAAD;AAAA,IAAG,WAAU;AAAA,IAAY,SAAS,MAAM,QAAS,QAAQ;AAAA,KAAK,oBAG9D,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,gDAAY,gBAAZ,mBAAyB,aACxB,gDAAY,gBAAZ,mBAAyB,aAKhC,UAAU,KACT,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,MAAD;AAAA,IACE,WAAU;AAAA,IACV,SAAS,MAAM,QAAS,QAAQ;AAAA,KAE/B,KAAK,OAER,qDAAC,KAAD;AAAA,IAAG,WAAU;AAAA,IAAY,SAAS,MAAM,QAAS,QAAQ;AAAA,KAAK,eAIhE,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,MAAD;AAAA,IACE,WAAU;AAAA,IACV,SAAS,MAAM,QAAS,QAAQ;AAAA,KAE/B,KAAK,QAER,qDAAC,KAAD;AAAA,IAAG,WAAU;AAAA,IAAY,SAAS,MAAM,QAAS,QAAQ;AAAA,KAAK,gBAIhE,qDAAC,QAAD;AAAA,IAAM,QAAO;AAAA,KACX,qDAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,MAAK;AAAA,IAAU,OAAM;AAAA,MAC1C,qDAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,qDAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,OAAM;AAAA,KACP,qBAGD,qDAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,IAAG;AAAA,IACH,OAAM;AAAA,IACN,aAAY;AAAA,IACZ,UAAQ;AAAA,OAGZ,qDAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,qDAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,OAAM;AAAA,KACP,iBAGD,qDAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,IAAG;AAAA,IACH,OAAM;AAAA,IACN,aAAY;AAAA,IACZ,UAAQ;AAAA,OAGZ,qDAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,qDAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,OAAM;AAAA,KACP,qBAGD,qDAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,IAAG;AAAA,IACH,OAAM;AAAA,IACN,aAAY;AAAA,IACZ,UAAQ;AAAA,OAGZ,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,gDAAY,gBAAZ,mBAAyB,aACxB,gDAAY,gBAAZ,mBAAyB,YAE7B,qDAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL,OAAM;AAAA,KACP;AAAA;;;ACpWb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAoC;AAO7B,IAAM,UAAS,OAAO,EAAE,cAAc;AAC3C,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,YAAY;AAAA,IAChB,WAAW,MAAM,GAAG,SAAS,SAAS;AAAA,MACpC,OAAO;AAAA,QACL,QAAQ;AAAA,UACN,QAAQ,GAAG,KAAK;AAAA;AAAA;AAAA,MAIpB,SAAS;AAAA,QACP,IAAI;AAAA,UACF,QAAQ;AAAA,YACN,QAAQ;AAAA,YACR,MAAM;AAAA;AAAA,UAER,SAAS,EAAE,QAAQ;AAAA;AAAA;AAAA,MAGvB,SAAS,EAAE,WAAW;AAAA;AAAA;AAI1B,SAAO;AAAA;AAGF,wBAAuB,OAAO;AACnC,UAAQ,MAAM;AACd,SACE,oCAAC,aAAD;AAAA;AAIW,iBAAiB;AAC9B,QAAM,OAAO;AACb,SACE,0DACE,oCAAC,QAAD;AAAA,IAAQ,MAAM,CAAC,gBAAgB,iBAAiB;AAAA,MAChD,oCAAC,YAAD;AAAA,IAAY,WAAW,KAAK;AAAA;AAAA;;;AC7ClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,qBAAoC;AAW7B,IAAM,UAAS,OAAO,EAAE,cAAc;AAC3C,QAAM,OAAO,MAAM,QAAQ;AAE3B,QAAM,WAAW;AAAA,IACf,UAAU,MAAM,GAAG,QAAQ,SAAS;AAAA,MAClC,OAAO;AAAA,QACL,QAAQ;AAAA,UACN,QAAQ,GAAG,KAAK;AAAA;AAAA;AAAA,MAGpB,SAAS;AAAA,QACP,QAAQ;AAAA,UACN,QAAQ;AAAA,YACN,MAAM;AAAA,YACN,YAAY;AAAA,YACZ,QAAQ;AAAA,YACR,MAAM;AAAA,YACN,MAAM;AAAA,YACN,WAAW;AAAA,YACX,IAAI;AAAA,YACJ,UAAU;AAAA,cACR,QAAQ;AAAA,gBACN,IAAI;AAAA,gBACJ,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMjB,SAAS,EAAE,MAAM;AAAA;AAAA;AAIrB,SAAO,CAAC,UAAU;AAAA;AAGb,uBAAsB,IAAI,IAAI;AACnC,MAAI,QAAQ,KAAK,MAAO,MAAK,MAAO,KAAI,KAAK,KAAK,KAAK;AACvD,SAAO;AAAA;AAGF,IAAM,OAAM,CAAC,WAAW;AAC7B,MAAI;AAEJ,MAAI,UAAU,GAAG;AACf,eAAW;AAAA,aACD,SAAS,KAAK,SAAS,MAAO,SAAS,KAAK,GAAG;AACzD,eAAW;AAAA,SACN;AACL,eAAW,SAAS;AAAA;AAGtB,SAAO,SAAS,CAAC,MAAM,MAAM,MAAM,MAAM,IAAI;AAAA;AAGxC,mBAAkB,SAAS;AAChC,QAAM,SAAS;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAEF,QAAM,QAAO,IAAI,KAAK;AACtB,QAAM,MAAM,MAAK;AACjB,QAAM,OAAO,MAAK;AAClB,QAAM,QAAQ,MAAK;AACnB,QAAM,WAAU,KAAI,OAAO,MAAM,OAAO;AACxC,SAAO;AAAA;AAGF,wBAAuB,OAAO;AACnC,UAAQ,MAAM;AACd,SAAO,oCAAC,aAAD;AAAA;AAGM,kBAAiB;AAC9B,QAAM,OAAO;AACb,QAAM,WAAW,KAAK,GAAG;AAEzB,QAAM,WAAW,KAAK,GAAG;AACzB,QAAM,SAAQ,IAAI;AAClB,MAAI,aAAa;AACjB,MAAI,QAAQ,cAAa,IAAI,KAAK,WAAW;AAE7C,WAAS,IAAI,GAAG,IAAI,QAAQ,GAAG,KAAK;AAClC,QAAI,UAAU,aAAa,UAAU,IAAI;AACzC,eAAW,KAAK;AAAA;AAGlB,aAAW;AAEX,QAAM,YAAY;AAElB;AACE,eAAW,IAAI,CAAC,SAAS;AACvB,UAAI,cAAc,aAAa,MAAM,GAAG;AACxC,UAAI,YAAY,aAAa,MAAM,GAAG;AACtC,UAAI,QAAQ;AACZ,eAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,YAAI,SAAS,GAAG,OAAO,eAAe,SAAS,GAAG,OAAO,WAAW;AAClE;AAAA;AAAA;AAGJ,UAAI,MAAM;AAAA,QACR,MAAM,UAAS;AAAA,SACd,sBAAsB;AAAA;AAEzB,gBAAU,KAAK;AAAA;AAAA;AAInB,YAAU;AAEV,SACE,0DACE,oCAAC,QAAD;AAAA,IAAQ,MAAM,CAAC,eAAe,gBAAgB;AAAA,MAC9C,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD,MAAI,sBACJ,oCAAC,cAAD;AAAA,IAAc,MAAM;AAAA,OAErB,WAAW,IAAI,CAAC,SAAS;AACxB,QAAI,cAAc,aAAa,MAAM,GAAG;AACxC,QAAI,YAAY,aAAa,MAAM,GAAG;AACtC,QAAI,eAAe;AACnB,aAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,UAAI,SAAS,GAAG,OAAO,eAAe,SAAS,GAAG,OAAO,WAAW;AAClE,qBAAa,KAAK,SAAS;AAAA;AAAA;AAG/B,WACE,oCAAC,OAAD,MACG,aAAa,WAAW,IAAI,OAC3B,0DACE,oCAAC,eAAD;AAAA,MACE,MAAM,CAAC,UAAS,cAAc,UAAS;AAAA,QAEzC,oCAAC,YAAD;AAAA,MAAY,MAAM;AAAA;AAAA;AAAA;;;AC9JlC;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA+B;AAC/B,qBAAmD;AAKnD,uBAAuB,OAAO;AAC5B,MAAI,OAAO,UAAU,YAAY,MAAM,SAAS,GAAG;AACjD,WAAO;AAAA;AAAA;AAIX,qBAAoB,MAAM;AACxB,SAAO,uBAAK,MAAM,EAAE,QAAQ;AAAA;AAGvB,IAAM,UAAS,OAAO,EAAE,cAAc;AAC3C,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,QAAQ,KAAK,IAAI;AAEvB,QAAM,OAAO,MAAM,QAAQ;AAE3B,QAAM,SAAS,EAAE;AAEjB,QAAM,cAAc;AAAA,IAClB,OAAO,cAAc;AAAA;AAGvB,MAAI,OAAO,OAAO,aAAa,KAAK,UAAU;AAC5C,YAAQ,IAAI;AACZ,WAAO,YAAW,EAAE,aAAa;AAAA;AAGnC,QAAM,YAAW,MAAM,GAAG,SAAS,OAAO;AAAA,IACxC,MAAM,iCAAK,SAAL,EAAa,QAAQ,KAAK;AAAA;AAGlC,SAAO,2BAAS,wBAAwB,UAAS;AAAA;AAGnD,uBAAuB;AAxCvB;AAyCE,QAAM,aAAa;AAEnB,SACE,0DACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,QAAD;AAAA,IAAQ,MAAM,CAAC,gBAAgB,aAAa;AAAA,OAE9C,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAM;AAAA,IACN,IAAG;AAAA,IACH,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,UAAQ;AAAA,MAEV,oCAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,WAAU;AAAA,KACX,mBAIH,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,KAAD,MACG,gDAAY,gBAAZ,mBAAyB,UAAS,gDAAY,gBAAZ,mBAAyB,UAGhE,oCAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL,gBAAa;AAAA,IACb,OAAM;AAAA,KACP;AAAA;AASX,IAAO,cAAQ;;;ACpFf;AAAA;AAAA;AAAA;AAAA,qBAAkB;AAEH,kBAAiB;AAC9B,SACE,qDAAC,OAAD,MAAK;AAAA;;;ACJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyB;AACzB,qBAAmD;AAGnD,qBAAgC;;;ACJjB,wBAAwB,EAAE,WAAW,OAAO;AACzD,QAAM,MAAM;AACZ,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,UAAD;AAAA,IACE,IAAG;AAAA,IACH,MAAK;AAAA,IAEL,aAAa;AAAA,IACb,WAAU;AAAA,KAEV,oCAAC,UAAD;AAAA,IAAQ,UAAQ;AAAA,IAAC,UAAQ;AAAA,KAAC,cACb,MAEZ,UAAU,IAAI,CAAC,cACd,oCAAC,UAAD;AAAA,IAAQ,KAAK,UAAS;AAAA,IAAI,OAAO,UAAS;AAAA,KACvC,UAAS,WAKlB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAM,UAAU;AAAA,IAChB,IAAG;AAAA,IACH,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,UAAQ;AAAA,MAEV,oCAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,WAAU;AAAA,KACX,YAIH,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAM,QAAQ;AAAA,IACd,IAAG;AAAA,IACH,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,UAAQ;AAAA,MAEV,oCAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,WAAU;AAAA,KACX,UAIH,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAM,QAAQ;AAAA,IACd,IAAG;AAAA,IACH,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,UAAQ;AAAA,MAEV,oCAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,WAAU;AAAA,KACX;AAAA;;;AClET,qBAAoC;AAoC7B,IAAM,iBAAgB,CAAC,QAAQ,SAAS;AAC7C,QAAM,eAAe,SAAS,OAAO,SAAS;AAC9C,SAAO,SAAS,IAAI,SAAS,KAAK,MAAM,eAAe,KAAK,KAAK;AAAA;;;AF3B5D,IAAM,WAAS,OAAO,EAAE,cAAc;AAC3C,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,YAAY,MAAM,GAAG,SAAS,SAAS;AAAA,IAC3C,OAAO,EAAE,QAAQ,KAAK;AAAA;AAExB,QAAM,OAAO,EAAE,MAAM;AACrB,SAAO;AAAA;AAGT,wBAAuB,OAAO;AAC5B,MAAI,OAAO,UAAU,YAAY,MAAM,SAAS,GAAG;AACjD,WAAO;AAAA;AAAA;AAIX,IAAM,UAAU,CAAC,WAAW,cAAc,SAAS;AACjD,MAAI,QAAQ;AACZ,WAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,UAAM,KAAK;AAAA,MACT,YAAY,UAAU,GAAG;AAAA,MACzB,QAAQ,SAAS,UAAU,GAAG;AAAA,MAC9B,MAAM,SAAS,UAAU,GAAG;AAAA,MAC5B,QAAQ,OAAO,KAAK;AAAA;AAAA;AAGxB,SAAO;AAAA;AAGF,IAAM,UAAS,OAAO,EAAE,cAAc;AAC3C,QAAM,OAAO,MAAM,QAAQ;AAC3B,MAAI,cAAc;AAClB,MAAI,eAAe;AACnB,MAAI,cAAc;AAClB,QAAM,OAAO,MAAM,QAAQ;AAE3B,MAAI,QAAQ,MAAM,GAAG,MAAM,SAAS;AAAA,IAClC,OAAO,EAAE,QAAQ,KAAK,IAAI,UAAU;AAAA;AAGtC,MAAI,OAAO,CAAC,GAAG;AACf,UAAQ,IAAI;AAEZ,MAAI,KAAK,IAAI,eAAe,WAAW;AACrC,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,UACE,KAAK,GAAG,GAAG,SAAS,eACpB,CAAC,KAAK,GAAG,GAAG,SAAS,qBACrB;AACA,YAAI,MAAM;AAAA,UACR,YAAY,KAAK,GAAG;AAAA,UACpB,QAAQ,KAAK,IAAI,GAAG;AAAA,UACpB,MAAM,KAAK,IAAI,GAAG;AAAA,UAClB,MAAM,KAAK,IAAI,GAAG;AAAA;AAEpB,oBAAY,KAAK;AACjB,qBAAa,KAAK,KAAK,GAAG;AAAA;AAAA;AAI9B,QAAI,QAAO,IAAI,KAAK,KAAK,IAAI;AAE7B,QAAI,SAAS;AAAA,MACX,QAAQ;AAAA,QACN,QAAQ;AAAA;AAAA;AAIZ,aAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,aAAO,OAAO,OAAO,KAAK;AAAA,QACxB,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA;AAEV,aAAO,OAAO,OAAO,GAAG,aAAa,OAAO,YAAY,GAAG;AAC3D,aAAO,OAAO,OAAO,GAAG,SAAS,SAAS,YAAY,GAAG;AACzD,aAAO,OAAO,OAAO,GAAG,OAAO,SAAS,YAAY,GAAG;AACvD,aAAO,OAAO,OAAO,GAAG,OAAO,SAAS,YAAY,GAAG;AACvD,aAAO,OAAO,OAAO,GAAG,SAAS,OAAO,KAAK;AAAA;AAG/C,UAAM,QAAQ,QAAQ,aAAa,cAAc;AAEjD,aAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,cAAQ,IAAI;AACZ,cAAQ,IAAI,MAAM,GAAG;AACrB,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,YAAM,QAAQ,CAAC,EAAE,YAAY,QAAQ,QAAQ,MAAM;AACjD,YAAI,eAAe,MAAM,GAAG,YAAY;AACtC,kBAAQ,IAAI,MAAM;AAClB,uBAAa,eAAc,MAAM,GAAG,QAAQ,MAAM,GAAG;AACrD,0BAAgB,eAAc,MAAM,GAAG,QAAQ,MAAM,GAAG;AACxD,kBAAQ,IAAI,CAAC,YAAY;AACzB,mBAAS,MAAM,GAAG;AAAA;AAAA;AAGtB,UAAI,aAAa,eAAe;AAC9B,YAAI,OAAO,MAAM,GAAG,MAAM,OAAO;AAAA,UAC/B,OAAO;AAAA,YACL,IAAI;AAAA;AAAA,UAEN,MAAM;AAAA,YACJ,UAAU;AAAA,YACV,iBAAiB,MAAK;AAAA;AAAA;AAAA;AAI5B,UAAI,KAAK,MAAM,GAAG,GAAG,OAAO;AAAA,QAC1B,MAAM,MAAM;AAAA;AAAA;AAIhB,UAAM,UAAU,MAAM,GAAG,QAAQ,OAAO;AAAA,MACtC,MAAM;AAAA,QACJ,QAAQ,KAAK;AAAA,QACb,MAAM;AAAA,SACH;AAAA,MAEL,SAAS;AAAA,QACP,QAAQ;AAAA;AAAA;AAIZ,WAAO,2BAAS;AAAA,aACP,KAAK,IAAI,eAAe,YAAY;AAC7C,UAAM,QAAQ,KAAK,IAAI;AAEvB,UAAM,SAAS,EAAE;AAEjB,UAAM,cAAc;AAAA,MAClB,OAAO,eAAc;AAAA;AAGvB,QAAI,OAAO,OAAO,aAAa,KAAK,UAAU;AAC5C,cAAQ,IAAI;AACZ,aAAO,WAAW,EAAE,aAAa;AAAA;AAGnC,UAAM,YAAW,MAAM,GAAG,SAAS,OAAO;AAAA,MACxC,MAAM,iCAAK,SAAL,EAAa,QAAQ,KAAK;AAAA;AAGlC,WAAO;AAAA;AAET,SAAO,2BAAS;AAAA;AAGH,sBAAsB;AAjKrC;AAkKE,QAAM,aAAa;AAEnB,QAAM,CAAC,aAAa,YAAY,6BAAS;AACzC,MAAI,CAAC,OAAO,WAAW,6BAAS;AAEhC,QAAM,kBAAkB,CAAC,UAAU;AACjC,YAAQ;AAAA;AAGV,QAAM,OAAO;AACb,QAAM,YAAY,KAAK;AACvB,MAAI,WAAW,KAAK,KAAK;AACzB,MAAI,QAAQ,SAAS,MAAM;AAC3B,MAAI,MAAM;AACV,WAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAC3B,QAAI,KAAK,MAAM;AAAA;AAEjB,QAAM,gBAAe,IAAI,KAAK;AAC9B,QAAM,UAAU,IAAI;AACpB,QAAM,MAAM,QAAQ;AACpB,MAAI;AACJ,QAAM,KACD,QAAO,GAAG,QAAQ,kBACjB,QAAQ,aAAa,MAClB,QAAQ,cACZ,QAAO,GAAG,QAAQ,kBACjB,QAAQ,aAAa,MAClB,QAAQ;AAEjB,SACE,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,QAAD;AAAA,IAAQ,MAAM,CAAC,eAAe,YAAY;AAAA,MAC1C,qDAAC,qBAAD;AAAA,IAAM,QAAO;AAAA,KACX,qDAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,MAAK;AAAA,IAAU,OAAM;AAAA,MAC1C,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,IAAG;AAAA,IACH,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,UAAQ;AAAA,IACR,cAAc;AAAA,IACd,KAAK;AAAA,IACL,KAAK;AAAA,MAEP,qDAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,WAAU;AAAA,KACX,qBAIH,qDAAC,OAAD,MACE,qDAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAyC,mBAIxD,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,UAAD;AAAA,IACE,IAAG;AAAA,IACH,MAAK;AAAA,IAEL,aAAa;AAAA,IACb,WAAU;AAAA,KAEV,qDAAC,UAAD;AAAA,IAAQ,UAAQ;AAAA,IAAC,UAAQ;AAAA,KAAC,gBAGzB,UAAU,IAAI,CAAC,cACd,qDAAC,UAAD;AAAA,IAAQ,KAAK,UAAS;AAAA,IAAI,OAAO,UAAS;AAAA,KACvC,UAAS,WAKlB,qDAAC,OAAD,MACE,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,IAAG;AAAA,IACH,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,UAAQ;AAAA,MAEV,qDAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,WAAU;AAAA,KACX,YAIH,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,IAAG;AAAA,IACH,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,UAAQ;AAAA,MAEV,qDAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,WAAU;AAAA,KACX,UAIH,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,IAAG;AAAA,IACH,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,UAAQ;AAAA,MAEV,qDAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,WAAU;AAAA,KACX,YAMN,YAAY,IAAI,CAAC,MAAM;AACtB,WACE,qDAAC,gBAAD;AAAA,MACE,KAAK;AAAA,MACL;AAAA,MACA,KAAK,YAAY;AAAA;AAAA,MAIvB,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,KAAD;AAAA,IACE,SAAS,MACP,SAAS,CAAC,iBAAgB,CAAC,GAAG,cAAa,aAAY;AAAA,IAEzD,gBAAa;AAAA,IACb,OAAM;AAAA,KACP,cAGD,qDAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL,OAAM;AAAA,KACP,SAGD,qDAAC,KAAD;AAAA,IACE,SAAS,MAAM,QAAS,QAAQ;AAAA,IAChC,MAAK;AAAA,IACL,OAAM;AAAA,KACP,kBAIF,UAAU,IACT,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,QAAD;AAAA,IAAM,QAAO;AAAA,KACX,qDAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,MAAK;AAAA,IAAU,OAAM;AAAA,MAC1C,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAM;AAAA,IACN,IAAG;AAAA,IACH,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,UAAQ;AAAA,MAEV,qDAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,WAAU;AAAA,KACX,mBAIH,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,KAAD,MACG,gDAAY,gBAAZ,mBAAyB,UACxB,gDAAY,gBAAZ,mBAAyB,UAG/B,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,UAAD;AAAA,IACE,MAAK;AAAA,IAEL,gBAAa;AAAA,IACb,OAAM;AAAA,KACP,SAGD,qDAAC,KAAD;AAAA,IACE,SAAS,MAAM,QAAS,QAAQ;AAAA,IAChC,MAAK;AAAA,IACL,OAAM;AAAA,KACP,eAML;AAAA;;;AGjXd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA8B;;;ACAf,qBAAqB,MAAM;AACxC,QAAM,OAAO,KAAK,KAAK;AACvB,QAAM,OAAO,KAAK,KAAK;AACvB,QAAM,UAAU,KAAK,KAAK;AAC1B,QAAM,aAAa,UAAU;AAC7B,QAAM,eAAe,MAAM;AAC3B,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,KAAD,MAAI,MAAK,OACT,oCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,OAAO,EAAE,OAAO,eAAe;AAAA,KAE/B,oCAAC,KAAD,MAAI,SAAQ;AAAA;;;ADHf,IAAM,WAAS,OAAO,EAAE,cAAc;AAC3C,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,QAAQ,MAAM,GAAG,MAAM,SAAS;AAAA,IACpC,OAAO,EAAE,QAAQ,KAAK;AAAA,IACtB,SAAS;AAAA,MACP,UAAU;AAAA,QACR,SAAS;AAAA,UACP,OAAO;AAAA;AAAA,QAET,SAAS;AAAA,UACP,IAAI;AAAA,YACF,QAAQ;AAAA,cACN,QAAQ;AAAA,cACR,MAAM;AAAA;AAAA,YAER,SAAS;AAAA,cACP,WAAW;AAAA;AAAA,YAEb,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAOhB,QAAM,YAAY,MAAM,GAAG,SAAS,SAAS;AAAA,IAC3C,OAAO,EAAE,QAAQ,KAAK;AAAA;AAGxB,QAAM,OAAO,EAAE,MAAM,OAAO;AAE5B,SAAO;AAAA;AAGF,wBAAuB,OAAO;AACnC,UAAQ,MAAM;AACd,SAAO,oCAAC,aAAD;AAAA;AAGM,kBAAiB;AAC9B,QAAM,OAAO;AACb,QAAM,OAAO,KAAK;AAClB,QAAM,QAAQ,KAAK;AACnB,QAAM,YAAY,KAAK;AACvB,QAAM,cAAc,CAAC,MAAM;AAE3B,MAAI,cAAc;AAClB,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,QAAI,MAAM,GAAG,aAAa,MAAM;AAC9B,kBAAY,KAAK;AAAA;AAAA;AAGrB,QAAM,cAAc,CAAC,OAAO;AAC5B,QAAM,WAAW,CAAC,OAAO;AACzB,MAAI,WAAW;AACf,QAAM,IAAI,CAAC,SAAS;AAClB,QAAI,KAAK,aAAa,OAAO;AAC3B,UAAI,SAAS,KAAK,SAAS,GAAG,GAAG;AACjC,UAAI,OAAO,KAAK,SAAS,GAAG,GAAG;AAC/B,UAAI,MAAM;AAAA,QACR,MAAM,KAAK,SAAS;AAAA,QACpB,MAAM,KAAK;AAAA,QACX,SAAS,eAAc,QAAQ;AAAA,QAC/B,UAAU,CAAC;AAAA;AAEb,eAAS,KAAK;AAAA,WACT;AACL;AAAA;AAAA;AAIJ,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,QAAD;AAAA,IAAQ,MAAM,CAAC,YAAY,aAAa;AAAA,MACvC,SAAS,IAAI,CAAC,UAAS;AACtB,QAAI,OAAO,MAAK;AAChB,QAAI,UAAU,MAAK;AACnB,QAAI,OAAO,MAAK;AAChB,WACE,0DACE,oCAAC,SAAD;AAAA,MAAS,MAAM,CAAC,MAAK,UAAU;AAAA,QAC/B,oCAAC,aAAD;AAAA,MAAa,MAAM,CAAC,MAAM,SAAS;AAAA;AAAA,MAIxC,YAAY,UAAU,IACrB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAA8C,oCAG5D,oCAAC,SAAD;AAAA,IAAS,MAAM;AAAA,QAEf;AAAA;;;AExGZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyB;AACzB,qBAAmD;AAK5C,IAAM,WAAS,OAAO,EAAE,cAAc;AAC3C,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,YAAY,MAAM,GAAG,SAAS,SAAS;AAAA,IAC3C,OAAO,EAAE,QAAQ,KAAK;AAAA;AAExB,SAAO,EAAE,WAAW;AAAA;AAGf,IAAM,UAAS,OAAO,EAAE,cAAc;AAC3C,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,YAAY,KAAK,IAAI;AAC3B,QAAM,UAAU,KAAK,IAAI;AACzB,QAAM,KAAK,KAAK,IAAI;AACpB,QAAM,SAAS,SAAS;AACxB,QAAM,OAAO,MAAM,QAAQ;AAC3B,MAAI,OAAO,SAAS;AACpB,QAAM,yBAAyB,KAAK,IAAI;AACxC,QAAM,sBAAsB,IAAI,KAAK;AAErC,MAAI,YAAY,MAAM;AACpB,WAAO;AAAA;AAGT,QAAM,SAAS,EAAE,QAAQ,MAAM;AAE/B,QAAM,OAAO,MAAM,GAAG,MAAM,OAAO;AAAA,IACjC,MAAM,iCAAK,SAAL,EAAa,QAAQ,KAAK,IAAI,YAAY;AAAA;AAGlD,SAAO,4BAAS;AAAA;AAGH,iBAAiB;AAC9B,QAAM,OAAO;AACb,QAAM,aAAa;AAEnB,MAAI,WAAW,KAAK,KAAK;AACzB,MAAI,QAAQ,SAAS,MAAM;AAC3B,MAAI,MAAM;AACV,WAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAC3B,QAAI,KAAK,MAAM;AAAA;AAEjB,QAAM,gBAAe,IAAI,KAAK;AAC9B,QAAM,UAAU,IAAI;AACpB,QAAM,MAAM,QAAQ;AACpB,MAAI;AACJ,QAAM,KACD,QAAO,GAAG,QAAQ,kBACjB,QAAQ,aAAa,MAClB,QAAQ,cACZ,QAAO,GAAG,QAAQ,kBACjB,QAAQ,aAAa,MAClB,QAAQ;AAEjB,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,QAAD;AAAA,IAAQ,MAAM,CAAC,YAAY,SAAS;AAAA,MACpC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,qBAAD;AAAA,IAAM,QAAO;AAAA,IAAO,WAAU;AAAA,KAC5B,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,UAAD;AAAA,IACE,IAAG;AAAA,IACH,MAAK;AAAA,IAEL,aAAa;AAAA,IACb,WAAU;AAAA,KAEV,oCAAC,UAAD;AAAA,IAAQ,UAAQ;AAAA,IAAC,UAAQ;AAAA,KAAC,qBAGzB,KAAK,UAAU,IAAI,CAAC,cACnB,oCAAC,UAAD;AAAA,IAAQ,KAAK,UAAS;AAAA,IAAI,OAAO,UAAS;AAAA,KACvC,UAAS,WAKlB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,IAAG;AAAA,IACH,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,UAAQ;AAAA,MAEV,oCAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,WAAU;AAAA,KACX,YAIH,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,IAAG;AAAA,IACH,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,UAAQ;AAAA,MAEV,oCAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,WAAU;AAAA,KACX,UAIH,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,IAAG;AAAA,IACH,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,UAAQ;AAAA,IACR,cAAc;AAAA,IACd,KAAK;AAAA,IACL,KAAK;AAAA,MAEP,oCAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,WAAU;AAAA,KACX,UAIH,oCAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL,WAAU;AAAA,KACX;AAAA;;;ACzIX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAoC;AAQ7B,IAAM,WAAS,OAAO,EAAE,cAAc;AAC3C,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,MAAM,MAAM,GAAG,GAAG,SAAS;AAAA,IAC/B,OAAO,EAAE,QAAQ,KAAK;AAAA,IACtB,SAAS;AAAA,MACP,UAAU;AAAA,QACR,QAAQ;AAAA,UACN,OAAO;AAAA,UACP,IAAI;AAAA;AAAA;AAAA;AAAA,IAIV,SAAS;AAAA,MACP,YAAY;AAAA;AAAA;AAGhB,QAAM,YAAY,MAAM,GAAG,SAAS,SAAS;AAAA,IAC3C,OAAO,EAAE,QAAQ,KAAK;AAAA;AAExB,QAAM,OAAO,EAAE,MAAM,KAAK;AAE1B,SAAO;AAAA;AAGF,wBAAuB,OAAO;AACnC,UAAQ,MAAM;AACd,SAAO,oCAAC,aAAD;AAAA;AAEF,IAAM,iBAAgB,CAAC,QAAQ,SAAS;AAC7C,QAAM,eAAe,SAAS,OAAO,SAAS;AAC9C,SAAO,SAAS,IAAI,SAAS,KAAK,MAAM,eAAe,KAAK,KAAK;AAAA;AAGpD,kBAAiB;AAC9B,QAAM,OAAO;AACb,QAAM,SAAS,KAAK;AACpB,MAAI,cAAc;AAElB,MAAI,MAAM,OAAO,OAAO,CAAC,OAAO,GAAG,eAAe;AAClD,MAAI,IAAI,CAAC,IAAI,MAAM;AACjB,gBAAY,KAAK,GAAG,YAAY,QAAQ,UAAU,GAAG,YAAY;AAAA;AAGnE,MAAI,WAAU,CAAC,GAAG,IAAI,IAAI;AAE1B,WAAS,IAAI,GAAG,IAAI,SAAQ,QAAQ,KAAK;AACvC,QAAI,OAAO,SAAQ;AACnB,aAAQ,KAAK,CAAC;AAAA;AAGhB,MAAI,IAAI,CAAC,OAAO;AACd,aAAS,IAAI,GAAG,IAAI,SAAQ,QAAQ,KAAK;AACvC,UAAI,WAAW,SAAQ,GAAG,GAAG,MAAM;AACnC,UAAI;AACJ,UAAI;AACJ,UAAI,SAAS,SAAS,GAAG;AACvB,mBAAW,SAAS,MAAM,GAAG,SAAS,SAAS;AAC/C,gBAAQ,SAAS,KAAK;AAAA,aACjB;AACL,gBAAQ,SAAS;AAAA;AAGnB,UAAI,GAAG,YAAY,UAAU,OAAO;AAClC,YAAI,MAAM;AAAA,UACR,MAAM,GAAG;AAAA,UACT,QAAQ,GAAG;AAAA,UACX,MAAM,GAAG;AAAA,UACT,OAAO,eAAc,GAAG,QAAQ,GAAG;AAAA;AAErC,iBAAQ,GAAG,KAAK;AAAA;AAAA;AAAA;AAMtB,SACE,oCAAC,OAAD,MACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACf,oCAAC,QAAD;AAAA,IAAQ,MAAM,CAAC,uBAAuB,WAAW;AAAA,OAGhD,SAAQ,IAAI,CAAC,OAAO;AACnB,WACE,0DACE,oCAAC,UAAD;AAAA,MAAU,MAAM,CAAC,GAAG;AAAA,QACpB,oCAAC,OAAD;AAAA,MAAK,WAAU;AAAA,OACb,oCAAC,SAAD;AAAA,MAAO,WAAU;AAAA,OACf,oCAAC,SAAD;AAAA,MAAO,WAAU;AAAA,OACf,oCAAC,MAAD;AAAA,MAAI,WAAU;AAAA,OACZ,oCAAC,MAAD;AAAA,MAAI,WAAU;AAAA,OAAgB,SAC9B,oCAAC,MAAD;AAAA,MAAI,WAAU;AAAA,OAAgB,WAC9B,oCAAC,MAAD;AAAA,MAAI,WAAU;AAAA,OAAgB,SAC9B,oCAAC,MAAD;AAAA,MAAI,WAAU;AAAA,OAAgB,oBAGlC,oCAAC,SAAD;AAAA,MAAO,WAAU;AAAA,OACd,GAAG,IAAI,CAAC,kBAAkB;AACzB,aAAO,cAAc,WAAW,SAAY,OAC1C,oCAAC,MAAD;AAAA,QAAI,WAAU;AAAA,SACZ,oCAAC,MAAD;AAAA,QAAI,WAAU;AAAA,SACX,cAAc,SAAS,SACpB,OACA,QAAQ,IAAI,OAAO,cAAc,SAEvC,oCAAC,MAAD;AAAA,QAAI,WAAU;AAAA,SAA4B,cAAc,QAAO,OAC/D,oCAAC,MAAD;AAAA,QAAI,WAAU;AAAA,SAA2B,cAAc,OACvD,oCAAC,MAAD;AAAA,QAAI,WAAU;AAAA,SAA0B,cAAc,OAAM;AAAA;AAAA;AAAA;;;AClHpF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyB;AACzB,qBAAmD;AAKnD,wBAAwB,QAAQ;AAC9B,MAAI,OAAO,WAAW,UAAU;AAC9B,WAAO;AAAA;AAAA;AAIX,sBAAsB,MAAM;AAC1B,MAAI,OAAO,SAAS,UAAU;AAC5B,WAAO;AAAA;AAAA;AAIX,qBAAoB,MAAM;AACxB,SAAO,KAAK,MAAM,EAAE,QAAQ;AAAA;AAGvB,IAAM,WAAS,OAAO,EAAE,cAAc;AAC3C,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,YAAY,MAAM,GAAG,SAAS,SAAS;AAAA,IAC3C,OAAO,EAAE,QAAQ,KAAK;AAAA;AAGxB,SAAO,CAAC,WAAW;AAAA;AAGrB,oBAAmB,QAAQ,MAAM;AAC/B,MAAI,SAAS,GAAG;AACd,WAAO;AAAA;AACF,WAAO,KAAK,MAAM,SAAS,OAAO,SAAS,QAAQ;AAAA;AAGrD,mBAAkB,QAAQ,MAAM,YAAY,UAAU;AAC3D,QAAM,gBAAgB;AAAA,IACpB,KAAO;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,IAAM;AAAA;AAER,QAAM,QAAQ,WAAU,QAAQ;AAChC,QAAM,UAAU,OAAO,QAAQ;AAC/B,MAAI;AACJ,WAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,QAAI,WAAW,QAAQ,GAAG,IAAI;AAC5B,sBAAgB,QAAQ,GAAG;AAAA;AAAA;AAG/B,MAAI,aAAa,SAAS,iBAAiB;AAC3C,MAAI,UAAU,QAAQ;AACtB,MAAI,OAAO,WAAU,YAAY,YAAY;AAC7C,MAAI,WAAY,UAAU,OAAQ;AAClC,MAAI,mBAAmB,MAAM;AAC7B,MAAI,cAAc,OAAO;AACzB,MAAI,WAAW,MAAM;AACnB,WAAO,CAAC,MAAM;AAAA,SACT;AACL,WAAO,CAAC,OAAO,UAAU,kBAAkB;AAAA;AAAA;AAIxC,IAAM,UAAS,OAAO,EAAE,SAAS,aAAa;AACnD,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,KAAK,KAAK,IAAI;AACpB,QAAM,YAAY,KAAK,IAAI;AAC3B,QAAM,UAAU,KAAK,IAAI;AACzB,QAAM,SAAS,SAAS;AACxB,QAAM,OAAO,SAAS;AACtB,QAAM,WAAU,KAAK,IAAI;AACzB,QAAM,QAAO,IAAI,KAAK,UAAS;AAC/B,QAAM,QAAQ,MAAM,GAAG,MAAM,SAAS;AAAA,IACpC,OAAO,EAAE,QAAQ,KAAK,IAAI,YAAY;AAAA;AAExC,QAAM,aAAa,MAAM,GAAG;AAC5B,QAAM,WAAW,MAAM,GAAG;AAC1B,QAAM,SAAS,MAAM,GAAG;AAExB,QAAM,SAAS,EAAE,QAAQ;AAEzB,QAAM,cAAc;AAAA,IAClB,QAAQ,eAAe;AAAA,IACvB,MAAM,aAAa;AAAA;AAGrB,MAAI,OAAO,OAAO,aAAa,KAAK,UAAU;AAC5C,YAAQ,IAAI;AACZ,WAAO,YAAW,EAAE,aAAa;AAAA;AAGnC,QAAM,UAAU,UAAS,QAAQ,MAAM,YAAY;AAEnD,MAAI,QAAQ,OAAO,MAAM;AACvB,UAAM,GAAG,MAAM,OAAO;AAAA,MACpB,OAAO,EAAE,IAAK;AAAA,MACd,MAAM;AAAA,QACL,UAAU;AAAA,QACV,iBAAiB;AAAA;AAAA;AAAA;AAKtB,QAAM,KAAK,MAAM,GAAG,GAAG,OAAO;AAAA,IAC5B,MAAM,iCAAK,SAAL,EAAa,QAAQ,KAAK,IAAI,YAAY,IAAI,MAAM;AAAA;AAG5D,SAAO,4BAAS,0BAA0B;AAAA;AAIrC,IAAM,WAAW,CAAC,SAAS;AAEhC,MAAI,WAAW,KAAK;AACpB,MAAI,QAAQ,SAAS,MAAM;AAC3B,MAAI,MAAM;AACV,WAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAC3B,QAAI,KAAK,MAAM;AAAA;AAEjB,QAAM,gBAAe,IAAI,KAAK;AAC9B,QAAM,UAAU,IAAI;AACpB,QAAM,MAAM,QAAQ;AACpB,MAAI;AACJ,QAAM,KACD,QAAO,GAAG,QAAQ,kBACjB,QAAQ,aAAa,MAClB,QAAQ,cACZ,QAAO,GAAG,QAAQ,kBACjB,QAAQ,aAAa,MAClB,QAAQ;AAEb,QAAM,OAAO,CAAC,eAAc;AAC5B,SAAO;AAAA;AAGE,kBAAiB;AAC9B,QAAM,OAAO;AACb,QAAM,YAAY,KAAK;AACvB,QAAM,OAAO,KAAK;AAElB,QAAM,aAAa;AAGrB,QAAM,WAAW,SAAS;AAC1B,QAAM,gBAAe,SAAS;AAC9B,QAAM,QAAO,SAAS;AAEpB,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,QAAD;AAAA,IAAQ,MAAM,CAAC,UAAU,OAAO;AAAA,MAChC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,qBAAD;AAAA,IAAM,QAAO;AAAA,IAAO,WAAU;AAAA,KAC5B,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,UAAD;AAAA,IACE,IAAG;AAAA,IACH,MAAK;AAAA,IAEL,aAAa;AAAA,IACb,WAAU;AAAA,KAEV,oCAAC,UAAD;AAAA,IAAQ,UAAQ;AAAA,IAAC,UAAQ;AAAA,KAAC,qBAGzB,UAAU,IAAI,CAAC,cAChB,oCAAC,UAAD;AAAA,IAAQ,KAAK,UAAS;AAAA,IAAI,OAAO,UAAS;AAAA,KACvC,UAAS,WAKhB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,IAAG;AAAA,IACH,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,UAAQ;AAAA,MAEV,oCAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,WAAU;AAAA,KACX,YAIH,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,IAAG;AAAA,IACH,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,UAAQ;AAAA,MAEV,oCAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,WAAU;AAAA,KACX,UAIH,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,IAAG;AAAA,IACH,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,UAAQ;AAAA,IACR,cAAc;AAAA,IACd,KAAK;AAAA,IACL,KAAK;AAAA,MAEP,oCAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,WAAU;AAAA,KACX,UAIH,oCAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL,WAAU;AAAA,KACX;AAAA;;;AC3OX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAoC;AAW7B,sBAAqB;AAC1B,MAAI,SAAS,IAAI,KAAK,MAAM,QAAQ,MAAM,YAAY,MAAM,WAAW;AACvE,SAAO;AAAA;AAGF,uBAAsB,GAAG,MAAM;AACpC,MAAI,IAAI,KAAK;AACb,MAAI,MAAM,EAAE,UACV,OAAO,EAAE,YAAY,MAAO,QAAO,IAAI,KAAK,KAAK;AACnD,SAAO,IAAI,KAAK,EAAE,QAAQ;AAAA;AAGrB,IAAM,WAAS,OAAO,EAAE,cAAc;AAC3C,MAAI,MAAM,IAAI;AACd,MAAI,SAAQ,IAAI,KAAK,IAAI,eAAe,IAAI,YAAY,IAAI;AAC5D,MAAI,aAAa,IAAI,KAAK,OAAM,QAAQ,OAAM,YAAY,OAAM,WAAW;AAC3E,MAAI,aAAa,IAAI,KAAK,OAAM,QAAQ,OAAM,YAAY,OAAM,WAAW;AAE3E,QAAM,OAAO,MAAM,QAAQ;AAE3B,QAAM,YAAY;AAAA,IAChB,WAAW,MAAM,GAAG,SAAS,SAAS;AAAA,MACpC,OAAO;AAAA,QACL,QAAQ;AAAA,UACN,QAAQ,GAAG,KAAK;AAAA;AAAA;AAAA,MAIpB,SAAS;AAAA,QACP,IAAI;AAAA,UACF,QAAQ;AAAA,YACN,QAAQ;AAAA,YACR,MAAM;AAAA;AAAA,UAER,SAAS,EAAE,QAAQ;AAAA;AAAA;AAAA,MAGvB,SAAS,EAAE,WAAW;AAAA,MACtB,MAAM;AAAA;AAAA;AAGV,QAAM,MAAM;AAAA,IACV,KAAK,MAAM,GAAG,GAAG,SAAS;AAAA,MACxB,OAAO;AAAA,QACL,QAAQ;AAAA,UACN,QAAQ,GAAG,KAAK;AAAA;AAAA;AAAA,MAGpB,SAAS,EAAE,WAAW;AAAA;AAAA;AAG1B,QAAM,QAAQ,MAAM,GAAG,MAAM,SAAS;AAAA,IACpC,OAAO,EAAE,QAAQ,KAAK;AAAA,IACtB,SAAS;AAAA,MACP,UAAU;AAAA,QACR,QAAQ;AAAA,UACN,OAAO;AAAA;AAAA;AAAA;AAAA;AAMf,QAAM,WAAW;AAAA,IACf,UAAU,MAAM,GAAG,QAAQ,SAAS;AAAA,MAClC,OAAO;AAAA,QACL,QAAQ;AAAA,UACN,QAAQ,GAAG,KAAK;AAAA;AAAA,QAElB,MAAM;AAAA,UACJ,IAAI;AAAA,UACJ,KAAK;AAAA;AAAA;AAAA,MAGT,SAAS;AAAA,QACP,QAAQ;AAAA,UACN,QAAQ;AAAA,YACN,MAAM;AAAA,YACN,YAAY;AAAA,YACZ,QAAQ;AAAA,YACR,MAAM;AAAA,YACN,MAAM;AAAA,YACN,WAAW;AAAA,YACX,IAAI;AAAA,YACJ,UAAU;AAAA,cACR,QAAQ;AAAA,gBACN,IAAI;AAAA,gBACJ,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMjB,SAAS,EAAE,MAAM;AAAA;AAAA;AAGrB,QAAM,OAAO,EAAE,WAAW,KAAK,UAAU,OAAO;AAEhD,SAAO;AAAA;AAGF,wBAAuB,OAAO;AACnC,UAAQ,MAAM;AACd,SAAO,oCAAC,aAAD;AAAA;AAGT,yBAAyB;AACvB,QAAM,OAAO;AACb,QAAM,cAAc,KAAK,SAAS;AAClC,QAAM,cAAc,CAAC,KAAK,OAAO;AACjC,SACE,0DACE,oCAAC,UAAD;AAAA,IAAQ,WAAW;AAAA,KACjB,oCAAC,OAAD;AAAA,IAAK,WAAW;AAAA,KACd,oCAAC,OAAD;AAAA,IAAK,WAAW;AAAA,KACd,oCAAC,MAAD;AAAA,IAAI,WAAW;AAAA,KAAkC,aACrC,KAAK,KAAK,MAAK,MAE3B,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAG,6EAMpB,oCAAC,OAAD;AAAA,IAAK,WAAW;AAAA,KACd,oCAAC,MAAD;AAAA,IAAI,WAAW;AAAA,KAA2B,aAAU,KAAK,KAAK,MAAK,MACnE,oCAAC,KAAD,MAAG,6EAMP,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IAAQ,MAAM,CAAC,YAAY,aAAa;AAAA,MACxC,oCAAC,SAAD;AAAA,IAAS,MAAM;AAAA,OAEjB,oCAAC,OAAD;AAAA,IAAK,WAAW;AAAA,KACd,oCAAC,SAAD;AAAA,IAAQ,MAAM,CAAC,gBAAgB,iBAAiB;AAAA,MAChD,oCAAC,YAAD;AAAA,IAAY,WAAW,KAAK,UAAU;AAAA,OAExC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IAAQ,MAAM,CAAC,yBAAyB,gBAAgB;AAAA,MACxD,oCAAC,YAAD;AAAA,IAAY,MAAM;AAAA;AAAA;AAM1B,IAAO,oBAAQ;;;AC9Jf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA+B;AAC/B,qBAAoC;;;;;;AAQ7B,IAAM,SAAQ,MAAM;AACzB,SAAO;AAAA,IACL;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA;AAAA,IAER;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA;AAAA,IAER;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA;AAAA;AAAA;AAOZ,qBAAoB,MAAM;AACxB,SAAO,wBAAK,MAAM,EAAE,QAAQ;AAAA;AAG9B,uBAAuB,OAAO;AAC5B,MAAI,OAAO,UAAU,YAAY,MAAM,SAAS,GAAG;AACjD,WAAO;AAAA,aACE,OAAO,UAAU,YAAY,MAAM,OAAO,UAAU,IAAI;AACjE,WAAO;AAAA,aACE,OAAO,UAAU,YAAY,MAAM,OAAO,UAAU,IAAI;AACjE,WAAO;AAAA;AAAA;AAGX,2BAA0B,UAAU;AAClC,MAAI,OAAO,aAAa,YAAY,SAAS,SAAS,GAAG;AACvD,WAAO;AAAA,aACE,OAAO,aAAa,YAAY,SAAS,OAAO,YAAY,IAAI;AACzE,WAAO;AAAA,aACE,OAAO,aAAa,YAAY,SAAS,OAAO,YAAY,IAAI;AACzE,WAAO;AAAA;AAAA;AAIJ,IAAM,UAAS,OAAO,EAAE,cAAc;AAC3C,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,YAAY,KAAK,IAAI;AAC3B,QAAM,QAAQ,KAAK,IAAI;AACvB,QAAM,WAAW,KAAK,IAAI;AAC1B,QAAM,OAAO,KAAK,IAAI;AAEtB,QAAM,SAAS,EAAE,WAAW,OAAO,MAAM;AAEzC,QAAM,cAAc;AAAA,IAClB,OAAO,cAAc;AAAA,IACrB,UAAU,kBAAiB;AAAA;AAG7B,MAAI,OAAO,OAAO,aAAa,KAAK,UAAU;AAC5C,WAAO,YAAW,EAAE,aAAa;AAAA;AAGnC,QAAM,cAAc,MAAM,GAAG,KAAK,UAAU;AAAA,IAC1C,OAAO;AAAA,MACL;AAAA;AAAA;AAGJ,MAAI,aAAa;AACf,WAAO,YAAW;AAAA,MAChB;AAAA,MACA,aAAa,EAAC,OAAO,sBAAsB;AAAA;AAAA;AAI/C,QAAM,OAAO,MAAM,SAAS,EAAE,OAAO,UAAU;AAC/C,MAAI,CAAC,MAAM;AACT,WAAO,YAAW;AAAA,MAChB;AAAA,MACA,WAAW;AAAA;AAAA;AAIf,SAAO,kBAAkB,KAAK,IAAI;AAAA;AAGpC,iBAAiB;AA5FjB;AA6FE,QAAM,aAAa;AAEnB,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,oCAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,oCAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,oCAAC,KAAD;AAAA,IAAG,OAAM;AAAA,KAAqC,mDAIhD,oCAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,KACX,oCAAC,OAAD,MACE,oCAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,OAAM;AAAA,KACP,eAGD,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,IAAG;AAAA,IACH,SAAQ;AAAA,IACR,cAAc,yCAAY,OAAO;AAAA,IACjC,aAAY;AAAA,IACZ,OAAM;AAAA,OAOV,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,OAAM;AAAA,KACP,kBAGD,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,IAAG;AAAA,IACH,SAAQ;AAAA,IACR,cAAc,yCAAY,OAAO;AAAA,IACjC,aAAY;AAAA,IACZ,OAAM;AAAA,MAER,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,gDAAY,gBAAZ,mBAAyB,UACxB,gDAAY,gBAAZ,mBAAyB,UAI/B,oCAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,oCAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,oCAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,OAAM;AAAA,KACP,cAMH,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,IAAG;AAAA,IACH,aAAY;AAAA,IACZ,OAAM;AAAA,MAER,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,gDAAY,gBAAZ,mBAAyB,aACxB,gDAAY,gBAAZ,mBAAyB,aAI/B,oCAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,oCAAC,UAAD;AAAA,IAAQ,OAAM;AAAA,KAAwN,cAM1O,oCAAC,KAAD;AAAA,IAAI,OAAM;AAAA,KAAyC,4BACxB,KACzB,oCAAC,qBAAD;AAAA,IACE,IAAI;AAAA,IACJ,OAAM;AAAA,KACP,UAEM;AAAA;AAUrB,IAAO,mBAAQ;;;ACrMf;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyB;AAGlB,IAAM,WAAS,OAAO,EAAE,cAAc;AAC3C,SAAO,OAAO;AAAA;AAGT,IAAM,WAAS,YAAY;AAChC,SAAO,4BAAS;AAAA;;;ACRlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA+B;AAC/B,qBAAoC;AAO7B,IAAM,SAAQ,MAAM;AACzB,SAAO;AAAA,IACL;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA;AAAA,IAER;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA;AAAA,IAER;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA;AAAA;AAAA;AAKZ,qBAAoB,MAAM;AACxB,SAAO,wBAAK,MAAM,EAAE,QAAQ;AAAA;AAG9B,wBAAuB,OAAO;AAC5B,MAAI,OAAO,UAAU,YAAY,MAAM,SAAS,GAAG;AACjD,WAAO;AAAA;AAAA;AAIX,2BAA0B,UAAU;AAClC,MAAI,OAAO,aAAa,YAAY,SAAS,SAAS,GAAG;AACvD,WAAO;AAAA,aACE,OAAO,aAAa,YAAY,SAAS,OAAO,YAAY,IAAI;AACzE,WAAO;AAAA,aACE,OAAO,aAAa,YAAY,SAAS,OAAO,YAAY,IAAI;AACzE,WAAO;AAAA;AAAA;AAIJ,IAAM,WAAS,OAAO,EAAE,cAAc;AAC3C,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,YAAY,KAAK,IAAI;AAC3B,QAAM,QAAQ,KAAK,IAAI;AACvB,QAAM,WAAW,KAAK,IAAI;AAE1B,QAAM,SAAS,EAAE,WAAW,OAAO;AAEnC,QAAM,cAAc;AAAA,IAClB,OAAO,eAAc;AAAA,IACrB,UAAU,kBAAiB;AAAA;AAG7B,MAAI,OAAO,OAAO,aAAa,KAAK,UAAU;AAC5C,WAAO,YAAW,EAAE,aAAa;AAAA;AAGnC,QAAM,OAAO,MAAM,MAAM,EAAE,OAAO;AAClC,MAAI,CAAC,MAAM;AACT,WAAO,YAAW;AAAA,MAChB;AAAA,MACA,aAAa,EAAE,OAAO;AAAA;AAAA;AAG1B,SAAO,kBAAkB,KAAK,IAAI;AAAA;AAGpC,kBAAiB;AAxEjB;AAyEE,QAAM,aAAa;AAEnB,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,oCAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,oCAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,oCAAC,KAAD;AAAA,IAAG,OAAM;AAAA,KAAqC,oCAIhD,oCAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,KACX,oCAAC,OAAD,MACE,oCAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,OAAM;AAAA,KACP,kBAGD,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,IAAG;AAAA,IACH,SAAQ;AAAA,IACR,cAAc,yCAAY,OAAO;AAAA,IACjC,aAAY;AAAA,IACZ,OAAM;AAAA,MAER,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,gDAAY,gBAAZ,mBAAyB,UACxB,gDAAY,gBAAZ,mBAAyB,UAI/B,oCAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,oCAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,oCAAC,SAAD;AAAA,IACE,KAAI;AAAA,IACJ,OAAM;AAAA,KACP,aAGD,oCAAC,KAAD;AAAA,IACE,MAAK;AAAA,IACL,OAAM;AAAA,KACP,sBAKH,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,IAAG;AAAA,IACH,aAAY;AAAA,IACZ,OAAM;AAAA,MAER,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,gDAAY,gBAAZ,mBAAyB,aACxB,gDAAY,gBAAZ,mBAAyB,aAI/B,oCAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,oCAAC,UAAD;AAAA,IAAQ,OAAM;AAAA,KAAwN,cAM1O,oCAAC,qBAAD;AAAA,IAAM,IAAI;AAAA,IAAoB,OAAM;AAAA,KAAyC,8BAC3C,KAChC,oCAAC,KAAD;AAAA,IACE,MAAK;AAAA,IACL,OAAM;AAAA,KACP,YAEG;AAAA;AAUlB,IAAO,gBAAQ;;;ACjKf;AAAA;AAAA;AAAA;AAAA,qBAAuB;AAEvB,qBAAqB;AACnB,SACE,0DACE,oCAAC,uBAAD;AAAA;AAKN,IAAO,oBAAQ;;;ACVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyB;AACzB,qBAA8B;;;;;;;;;;;;ACGvB,IAAM,UAAU,MAAM;AAC3B,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAA6D,sBAG1E,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAqC,kEAIpD,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD,MACE,oCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,KAAK;AAAA,IACL,KAAI;AAAA,MAEN,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAkD,uBAGhE,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAgB,oMAM/B,oCAAC,OAAD,MACE,oCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,KAAK;AAAA,IACL,KAAI;AAAA,MAEN,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAkD,gBAGhE,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAgB,oKAM/B,oCAAC,OAAD,MACE,oCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,KAAK;AAAA,IACL,KAAI;AAAA,MAEN,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAkD,uBAGhE,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAgB;AAAA;;;;;;ACrDxB,uBAAuB;AACpC,SACE,oCAAC,WAAD;AAAA,IAAS,OAAM;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,oCAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,oCAAC,MAAD;AAAA,IAAI,OAAM;AAAA,KAAuE,qBAEjF,oCAAC,KAAD;AAAA,IAAG,OAAM;AAAA,KAA+B,sIACxC,oCAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,oCAAC,UAAD;AAAA,IAAQ,OAAM;AAAA,KAAiH,aAC/H,oCAAC,UAAD;AAAA,IAAQ,OAAM;AAAA,KAAqH,YAGvI,oCAAC,OAAD;AAAA,IAAK,OAAM;AAAA,KACT,oCAAC,OAAD;AAAA,IAAK,OAAM;AAAA,IAAqC,KAAI;AAAA,IAAO,KAAK;AAAA;AAAA;;;AFLnE,IAAM,SAAQ,MAAM;AACzB,SAAO;AAAA,IACL;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA;AAAA,IAER;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA;AAAA,IAER;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA;AAAA;AAAA;AAIL,IAAM,WAAS,OAAO,EAAE,cAAc;AAC3C,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,OAAO;AAAA,IACX;AAAA;AAGF,MAAI,MAAM;AACR,WAAO,4BAAS;AAAA;AAGlB,SAAO;AAAA;AAGT,gBAAgB;AACd,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,aAAD,OACA,oCAAC,SAAD;AAAA;AAKN,IAAO,iBAAQ;;;AGjDf,IAAO,0BAAQ,EAAC,WAAU,YAAW,SAAQ,EAAC,UAAS,mCAAkC,WAAU,CAAC,oCAAmC,oCAAmC,uCAAqC,UAAS,EAAC,QAAO,EAAC,MAAK,QAAO,YAAW,QAAU,QAAO,IAAG,SAAQ,QAAU,iBAAgB,QAAU,UAAS,2BAA0B,WAAU,CAAC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,QAAM,qBAAoB,EAAC,MAAK,qBAAoB,YAAW,QAAO,QAAO,cAAa,SAAQ,QAAU,iBAAgB,QAAU,UAAS,wCAAuC,WAAU,CAAC,oCAAmC,qCAAoC,aAAY,MAAK,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,sBAAqB,EAAC,MAAK,sBAAqB,YAAW,QAAO,QAAO,eAAc,SAAQ,QAAU,iBAAgB,QAAU,UAAS,yCAAwC,WAAU,QAAU,aAAY,MAAK,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,wBAAuB,EAAC,MAAK,wBAAuB,YAAW,QAAO,QAAO,iBAAgB,SAAQ,QAAU,iBAAgB,QAAU,UAAS,2CAA0C,WAAU,CAAC,oCAAmC,oCAAmC,qCAAoC,aAAY,MAAK,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,oCAAmC,EAAC,MAAK,oCAAmC,YAAW,QAAO,QAAO,6BAA4B,SAAQ,QAAU,iBAAgB,QAAU,UAAS,uDAAsD,WAAU,CAAC,oCAAmC,qCAAoC,aAAY,MAAK,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,0CAAyC,EAAC,MAAK,0CAAyC,YAAW,QAAO,QAAO,mCAAkC,SAAQ,QAAU,iBAAgB,QAAU,UAAS,6DAA4D,WAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,qCAAoC,aAAY,MAAK,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,8CAA6C,EAAC,MAAK,8CAA6C,YAAW,QAAO,QAAO,uCAAsC,SAAQ,QAAU,iBAAgB,QAAU,UAAS,iEAAgE,WAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,iDAAgD,EAAC,MAAK,iDAAgD,YAAW,QAAO,QAAO,0CAAyC,SAAQ,QAAU,iBAAgB,QAAU,UAAS,oEAAmE,WAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,qCAAoC,aAAY,MAAK,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,iDAAgD,EAAC,MAAK,iDAAgD,YAAW,QAAO,QAAO,0CAAyC,SAAQ,QAAU,iBAAgB,QAAU,UAAS,oEAAmE,WAAU,CAAC,oCAAmC,qCAAoC,aAAY,MAAK,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,oCAAmC,EAAC,MAAK,oCAAmC,YAAW,QAAO,QAAO,uBAAsB,SAAQ,MAAK,iBAAgB,QAAU,UAAS,uDAAsD,WAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,QAAM,kCAAiC,EAAC,MAAK,kCAAiC,YAAW,QAAO,QAAO,2BAA0B,SAAQ,QAAU,iBAAgB,QAAU,UAAS,qDAAoD,WAAU,CAAC,oCAAmC,oCAAmC,qCAAoC,aAAY,MAAK,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,gCAA+B,EAAC,MAAK,gCAA+B,YAAW,QAAO,QAAO,mBAAkB,SAAQ,MAAK,iBAAgB,QAAU,UAAS,mDAAkD,WAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,QAAM,8BAA6B,EAAC,MAAK,8BAA6B,YAAW,QAAO,QAAO,uBAAsB,SAAQ,QAAU,iBAAgB,QAAU,UAAS,iDAAgD,WAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,qCAAoC,aAAY,MAAK,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,0BAAyB,EAAC,MAAK,0BAAyB,YAAW,QAAO,QAAO,aAAY,SAAQ,MAAK,iBAAgB,QAAU,UAAS,6CAA4C,WAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,QAAM,8BAA6B,EAAC,MAAK,8BAA6B,YAAW,QAAO,QAAO,iBAAgB,SAAQ,MAAK,iBAAgB,QAAU,UAAS,iDAAgD,WAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,QAAM,4BAA2B,EAAC,MAAK,4BAA2B,YAAW,QAAO,QAAO,qBAAoB,SAAQ,QAAU,iBAAgB,QAAU,UAAS,+CAA8C,WAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,qCAAoC,aAAY,MAAK,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,iCAAgC,EAAC,MAAK,iCAAgC,YAAW,QAAO,QAAO,oBAAmB,SAAQ,MAAK,iBAAgB,QAAU,UAAS,oDAAmD,WAAU,QAAU,aAAY,OAAM,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,wCAAuC,EAAC,MAAK,wCAAuC,YAAW,QAAO,QAAO,iCAAgC,SAAQ,QAAU,iBAAgB,QAAU,UAAS,2DAA0D,WAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,mCAAkC,EAAC,MAAK,mCAAkC,YAAW,QAAO,QAAO,sBAAqB,SAAQ,MAAK,iBAAgB,QAAU,UAAS,sDAAqD,WAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,QAAM,iCAAgC,EAAC,MAAK,iCAAgC,YAAW,QAAO,QAAO,0BAAyB,SAAQ,QAAU,iBAAgB,QAAU,UAAS,oDAAmD,WAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,qCAAoC,aAAY,MAAK,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,oBAAmB,EAAC,MAAK,oBAAmB,YAAW,QAAO,QAAO,aAAY,SAAQ,QAAU,iBAAgB,QAAU,UAAS,uCAAsC,WAAU,QAAU,aAAY,OAAM,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,gBAAe,EAAC,MAAK,gBAAe,YAAW,QAAO,QAAO,QAAU,SAAQ,MAAK,iBAAgB,QAAU,UAAS,mCAAkC,WAAU,CAAC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,WAAQ,OAAM;;;AlDyBr6T,IAAM,QAAQ,EAAE,QAAQ;AACxB,IAAM,SAAS;AAAA,EACpB,QAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,iDAAiD;AAAA,IAC7C,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,iDAAiD;AAAA,IAC7C,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,8CAA8C;AAAA,IAC1C,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,0CAA0C;AAAA,IACtC,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,wCAAwC;AAAA,IACpC,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,oCAAoC;AAAA,IAChC,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,oCAAoC;AAAA,IAChC,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,mCAAmC;AAAA,IAC/B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,kCAAkC;AAAA,IAC9B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,iCAAiC;AAAA,IAC7B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,iCAAiC;AAAA,IAC7B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,gCAAgC;AAAA,IAC5B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,8BAA8B;AAAA,IAC1B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,8BAA8B;AAAA,IAC1B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,4BAA4B;AAAA,IACxB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,0BAA0B;AAAA,IACtB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,wBAAwB;AAAA,IACpB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,sBAAsB;AAAA,IAClB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,qBAAqB;AAAA,IACjB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,oBAAoB;AAAA,IAChB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA;;;AF9Ld,wBAAwB,OAAO,SAAS;AACtC,MAAI;AACJ,MAAI;AAEJ,MAAI,MAAM,iBAAiB,MAAM;AAC/B,wBAAoB,MAAM;AAAA;AAG5B,MAAI,aAAa,MAAM,QAAQ;AAC/B,MAAI,uBAAuB,MAAM,QAAQ;AAEzC,MAAI,cAAc,QAAQ,YAAY,KAAK,aAAa;AACtD,6BAAyB,WAAW,MAAM,KAAK;AAAA;AAGjD,MAAI,cAAc;AAAA,IAChB,+BAA+B;AAAA,IAC/B;AAAA,IACA,uBAAuB;AAAA;AAIzB,SAAO,KAAK,aAAa,QAAQ,CAAC,QAAQ;AACxC,QAAI,YAAY,QAAQ,MAAM;AAC5B,aAAO,YAAY;AAAA;AAAA;AAIvB,SAAO;AAAA;AAGF,IAAM,UAAU,yCAAqB;AAAA,EAC1C;AAAA,EACA;AAAA,EACA,MAAM;AAAA;",
  "names": []
}

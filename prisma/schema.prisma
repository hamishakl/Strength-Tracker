generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id           String        @id @default(uuid())
  username     String        @unique
  passwordHash String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  exercises    Exercise[]
  Pr           Pr[]          @relation("userid")
  SetsAndReps  SetsAndReps[]
  Workout      Workout[]
}

model Exercise {
  id          String        @id @default(uuid())
  user        User?         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String?
  title       String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  pr          Pr[]
  prId        String?
  Pr          Pr[]          @relation("exerciseid")
  goal        Int?
  SetsAndReps SetsAndReps[]
}

model Pr {
  userId     String?
  id         String    @id @default(uuid())
  weight     Int
  reps       Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  exercises  Exercise? @relation(name: "exerciseid", fields: [exerciseId], references: [id])
  exerciseId String?
  User       User?     @relation(name: "userid", fields: [userId], references: [id])
  Exercise   Exercise? @relation(fields: [exerciseId], references: [id])
}

model SetsAndReps {
  userId     String
  id         String    @id @default(uuid())
  weight     Int
  reps       Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  exerciseId String?
  Exercise   Exercise? @relation(fields: [exerciseId], references: [id])
  User       User      @relation(fields: [userId], references: [id])
  Workout    Workout[]
}

model Workout {
  userId        String
  id            String      @id @default(uuid())
  User          User        @relation(fields: [userId], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  exercises     SetsAndReps @relation(fields: [setsAndRepsId], references: [id])
  setsAndRepsId String
}
